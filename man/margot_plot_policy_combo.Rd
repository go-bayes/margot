% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_plot_policy_combo.R
\name{margot_plot_policy_combo}
\alias{margot_plot_policy_combo}
\title{Create a Combined Decision Tree and Policy Relationship Graph}
\usage{
margot_plot_policy_combo(
  result_object,
  model_name,
  label_mapping = NULL,
  original_df = NULL,
  layout = list(heights = c(1, 2)),
  annotation = list(tag_levels = "A"),
  generate_policy_tree = TRUE,
  generate_decision_tree = TRUE,
  policy_tree_args = list(),
  decision_tree_args = list()
)
}
\arguments{
\item{result_object}{An object containing the results from a multi-arm causal forest model.}

\item{model_name}{A character string specifying the name of the model.}

\item{label_mapping}{Optional named list for custom label mappings.}

\item{original_df}{Optional dataframe with untransformed variables.}

\item{layout}{A list specifying the layout of the combined plot. Default is
`list(heights = c(1, 2))`, which sets the relative heights of the two plots.}

\item{annotation}{A list specifying the annotation for the combined plot. Default is
`list(tag_levels = "A")`, which adds alphabetic tags to the subplots.}

\item{generate_policy_tree}{Logical, whether to generate the policy tree plot. Default is TRUE.}

\item{generate_decision_tree}{Logical, whether to generate the decision tree plot. Default is TRUE.}

\item{policy_tree_args}{A list of arguments to pass to margot_plot_policy_tree. Default is list().}

\item{decision_tree_args}{A list of arguments to pass to margot_plot_decision_tree. Default is list().}
}
\value{
A list containing:
  \item{policy_tree}{A ggplot object representing the policy tree (if generated)}
  \item{decision_tree}{A ggplot object representing the decision tree (if generated)}
  \item{combined_plot}{A ggplot object representing the combined plot (if both plots are generated)}
}
\description{
This function generates a combined plot consisting of a decision tree and a graph
showing relationships between variables in the recommended policy.
}
\examples{
\dontrun{
# Assuming 'results' is your Margot results object, 'model_name' is the name of your model,
# 'label_mapping' is your custom label mapping, and 'original_df' is your original dataframe
combined_plot <- margot_plot_policy_combo(
  result_object = results,
  model_name = "model_t2_env_not_env_efficacy_z",
  label_mapping = label_mapping,
  original_df = original_df,
  policy_tree_args = list(point_alpha = 0.75),
  decision_tree_args = list(text_size = 4.5, edge_label_offset = 0.01)
)

# Print the combined plot
print(combined_plot$combined_plot)
}
}
