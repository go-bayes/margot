% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_interpret_qini_margot_interpret_rate.R
\name{margot_interpret_qini}
\alias{margot_interpret_qini}
\title{Interpret Qini Results for Both Binary and Multi-Arm Treatments}
\usage{
margot_interpret_qini(
  multi_batch,
  label_mapping = NULL,
  alpha = 0.05,
  decimal_places = 2,
  model_names = NULL
)

margot_interpret_qini(
  multi_batch,
  label_mapping = NULL,
  alpha = 0.05,
  decimal_places = 2,
  model_names = NULL
)
}
\arguments{
\item{multi_batch}{List output from margot_batch_policy() with diff_gain_summaries.}

\item{label_mapping}{Optional named list mapping model names to readable labels.}

\item{alpha}{Significance level for confidence intervals. Default is 0.05.}

\item{decimal_places}{Number of decimal places for rounding. Default is 2.}

\item{model_names}{Optional character vector specifying models to process.
Default is NULL (i.e. process all).}

\item{format}{Output format for tables. Can be "markdown" (default) or "latex".}
}
\value{
A list with summary tables in both markdown and latex formats, and a single
        combined explanation in \code{qini_explanation} that starts with a
        header "### Explanation of Qini Curves".

A list with a summary table and a single combined explanation in
        \code{qini_explanation} that starts with a header "### Explanation of Qini Curves".
}
\description{
This function interprets Qini results for both binary and multi-arm treatments.
It detects the treatment type based on the input data structure and calls the
appropriate sub-function. A new parameter, \code{model_names}, restricts the
analysis to the specified models; if not supplied, all models are processed.

This function interprets Qini results for both binary and multi-arm treatments.
It detects the treatment type based on the input data structure and calls the
appropriate sub-function. A new parameter, \code{model_names}, restricts the
analysis to the specified models; if not supplied, all models are processed.
}
