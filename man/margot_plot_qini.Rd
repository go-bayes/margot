% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_plot_qini.R
\name{margot_plot_qini}
\alias{margot_plot_qini}
\title{Plot Qini Curves from margot_multi_arm_causal_forest Results}
\usage{
margot_plot_qini(
  mc_result,
  outcome_var,
  label_mapping = NULL,
  spend_levels = c(0.2, 0.5),
  show_spend_lines = TRUE,
  spend_line_color = "red",
  spend_line_alpha = 0.5,
  theme = "classic"
)
}
\arguments{
\item{mc_result}{A list containing the results from margot_multi_arm_causal_forest().}

\item{outcome_var}{A character string specifying the name of the outcome variable
to plot. This should match one of the model names in mc_result$results.}

\item{label_mapping}{Optional named list for custom label mappings. Keys should be original variable names
(with or without "model_" prefix), and values should be the desired display labels. Default is NULL.}

\item{spend_levels}{Numeric vector of spend levels to show with vertical lines. Default is c(0.2, 0.5).}

\item{show_spend_lines}{Logical indicating whether to show vertical lines at spend levels. Default is TRUE.}

\item{spend_line_color}{Color for spend level lines. Default is "red".}

\item{spend_line_alpha}{Alpha transparency for spend lines. Default is 0.5.}

\item{theme}{Character string specifying the ggplot2 theme. Default is "classic". Options include "classic", "minimal", "bw", "gray", "light", "dark", "void".}
}
\value{
A ggplot object representing the Qini curves for the specified outcome variable.
}
\description{
This function creates a ggplot object displaying Qini curves based on the
results of a margot_multi_arm_causal_forest() model. It includes label
transformations and informative CLI messages.
}
\examples{
\dontrun{
# Assuming mc.test is the result of margot_multi_arm_causal_forest()
plot_qini_curves(mc.test, "model_t2_belong_z")

# Using custom label mapping
label_mapping <- list(
  "t2_env_not_env_efficacy_z" = "Deny Personal Environmental Efficacy",
  "t2_env_not_climate_chg_real_z" = "Deny Climate Change Real"
)
plot_qini_curves(mc.test, "model_t2_env_not_env_efficacy_z", label_mapping = label_mapping)
}

}
