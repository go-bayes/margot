% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_plot.R
\name{margot_plot}
\alias{margot_plot}
\title{Create a Margot Plot with Interpretation and Transformed Table}
\usage{
margot_plot(
  .data,
  type = c("RD", "RR"),
  order = c("default", "alphabetical"),
  title_binary = NULL,
  ...,
  options = list(),
  label_mapping = NULL,
  save_output = FALSE,
  use_timestamp = FALSE,
  base_filename = "margot_plot_output",
  prefix = NULL,
  save_path = here::here("push_mods")
)
}
\arguments{
\item{.data}{A data frame containing the data to be plotted.}

\item{type}{Character string specifying the type of plot. Either "RD" (Risk Difference) or "RR" (Risk Ratio).}

\item{order}{Character string specifying the order of outcomes. Either "default" or "alphabetical".}

\item{title_binary}{Optional title for the plot.}

\item{...}{Additional arguments passed to the plotting function.}

\item{options}{A list of additional options for customizing the plot and interpretation. See Details for available options.}

\item{label_mapping}{A named list for custom outcome label mapping. See Details for usage.}

\item{save_output}{Logical. If TRUE, saves the complete output to a file. Default is FALSE.}

\item{use_timestamp}{Logical. If TRUE, adds a timestamp to the saved filename. Default is FALSE.}

\item{base_filename}{Character string. The base name for the saved file. Default is "margot_plot_output".}

\item{prefix}{Character string. An optional prefix for the saved filename. Default is NULL.}

\item{save_path}{Character string. The directory path where the output will be saved. Default is here::here("push_mods").}
}
\value{
A list containing three elements:
\itemize{
  \item `plot`: A ggplot object representing the Margot plot.
  \item `interpretation`: A character string containing the interpretation of the results, with the same formatting applied as the plot labels.
  \item `transformed_table`: A data frame with the original data and transformed row names, using the same transformation options as the plot labels.
}

If `save_output` is TRUE, the complete output will be saved to a file using margot::here_save_qs().
}
\description{
This function creates a Margot plot, which is useful for visualizing causal effects
in epidemiological studies. It provides various options for customizing the plot
and transforming labels. Additionally, it generates an interpretation of the results
using the margot_interpret_marginal function and returns a transformed table.
}
\details{
The `options` list can include the following parameters:
\itemize{
  \item `remove_tx_prefix`: Logical. If TRUE, removes "tx_" prefix from labels and interpretation. Default is TRUE.
  \item `remove_z_suffix`: Logical. If TRUE, removes "_z" suffix from labels and interpretation. Default is TRUE.
  \item `use_title_case`: Logical. If TRUE, converts labels and interpretation to title case. Default is TRUE.
  \item `remove_underscores`: Logical. If TRUE, removes underscores from labels and interpretation. Default is TRUE.
  \item `show_evalues`: Logical. If TRUE, shows E-values in the plot. Default is TRUE.
  \item `evalue_digits`: Integer. Number of digits for E-value display. Default is 2.
}

The `label_mapping` parameter allows for custom renaming of specific outcomes:
\itemize{
  \item It should be a named list where names are original outcome labels and values are new labels.
  \item Outcomes not specified in `label_mapping` will use default transformations based on `options`.
  \item Custom mapped labels are used as-is, without applying default transformations.
}
}
\examples{
\dontrun{
# Create sample data
sample_data <- data.frame(
  outcome = c("t1_outcome_a_z", "t2_outcome_b_z", "t3_outcome_c_z"),
  `E[Y(1)]-E[Y(0)]` = c(0.1, -0.2, 0.3),
  `2.5 \%` = c(0.05, -0.3, 0.2),
  `97.5 \%` = c(0.15, -0.1, 0.4),
  E_Value = c(1.5, 1.8, 2.0),
  E_Val_bound = c(1.3, 1.5, 1.7)
)

# Create a basic Margot plot with interpretation and transformed table
result <- margot_plot(sample_data, type = "RD")
print(result$plot)
cat(result$interpretation)
print(result$transformed_table)

# Create a Margot plot with custom options, label mapping, and save output
custom_result <- margot_plot(sample_data,
  type = "RD",
  title_binary = "Custom Margot Plot",
  options = list(
    remove_tx_prefix = TRUE,
    remove_z_suffix = TRUE,
    use_title_case = TRUE,
    remove_underscores = TRUE
  ),
  label_mapping = list(
    "t1_outcome_a_z" = "Custom Label A",
    "t2_outcome_b_z" = "Custom Label B"
  ),
  save_output = TRUE,
  use_timestamp = TRUE,
  prefix = "custom",
  save_path = here::here("output", "margot_plots")
)
print(custom_result$plot)
cat(custom_result$interpretation)
print(custom_result$transformed_table)
}

}
