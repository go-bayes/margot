% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_planned_subgroups_batch.R
\name{margot_planned_subgroups_batch}
\alias{margot_planned_subgroups_batch}
\title{batch process heterogeneity analyses across multiple outcome domains}
\usage{
margot_planned_subgroups_batch(
  domain_models,
  X,
  base_defaults,
  subset_types,
  original_df,
  domain_names,
  subtitles,
  ...
)
}
\arguments{
\item{domain_models}{list of model sets; one element per outcome domain
(e.g., `list(models_binary_health, models_binary_psych)`).}

\item{X}{model matrix (or data frame) of predictors used when the models were
fitted; required by lower-level helpers.}

\item{base_defaults}{named list of default arguments passed to the downstream
plotting / helper functions.}

\item{subset_types}{named list of subset specifications, typically produced
with the *standard subset* helpers (e.g.,
`list(wealth = subsets_standard_wealth)`).}

\item{original_df}{the raw data frame containing all variables (needed for
label recovery, plotting on the original scale, etc.).}

\item{domain_names}{character vector naming each element in `domain_models`.}

\item{subtitles}{character vector of subtitles used in plot annotations;
must be the same length as `domain_names`.}

\item{...}{any additional arguments forwarded directly to
[`margot_subset_batch()`] (e.g., `interpret_all_E_gt1 = TRUE`).}
}
\value{
a nested list. the first level is the domain name; the second level
  is the subset type. each leaf contains the full list returned by
  `margot_subset_batch()`.
}
\description{
runs the same planned subgroup contrasts (e.g., wealth, ethnicity,
political orientation) over multiple outcome domains.
for each domain the specified subset definitions are applied, summaries are
printed, and composite plots are displayed.
**no files are written to disk â€“ the former `push_mods`/`output_dir`
arguments have been retired.**
}
\examples{
\dontrun{
results <- margot_planned_subgroups_batch(
  domain_models = list(models_binary_health, models_binary_psych),
  X             = X,
  base_defaults = base_defaults_binary,
  subset_types  = list(
    wealth    = subsets_standard_wealth,
    ethnicity = subsets_standard_ethnicity
  ),
  original_df  = original_df,
  domain_names = c("health", "psych"),
  subtitles    = c(subtitle_health, subtitle_psych),
  interpret_all_E_gt1 = TRUE
)
}

}
