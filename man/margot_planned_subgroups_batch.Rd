% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_planned_subgroups_batch.R
\name{margot_planned_subgroups_batch}
\alias{margot_planned_subgroups_batch}
\title{Batch process heterogeneity analyses across multiple outcome domains}
\usage{
margot_planned_subgroups_batch(
  domain_models,
  X,
  base_defaults,
  subset_types,
  original_df,
  domain_names,
  subtitles,
  output_dir = NULL,
  push_mods = FALSE,
  interpret_all_E_gt1 = TRUE
)
}
\arguments{
\item{domain_models}{list of model sets for different domains (e.g., list(models_binary_health, models_binary_psych))}

\item{X}{predictor matrix used in the models}

\item{base_defaults}{default parameters for model processing}

\item{subset_types}{list of subset specifications (e.g., list(wealth = subsets_standard_wealth))}

\item{original_df}{original dataframe containing all variables}

\item{domain_names}{character vector of names for the outcome domains}

\item{subtitles}{character vector of subtitles for plots}

\item{output_dir}{directory to save outputs (defaults to NULL)}

\item{push_mods}{logical; whether to push models (defaults to FALSE)}

\item{interpret_all_E_gt1}{logical; interpretation parameter (defaults to TRUE)}
}
\value{
a nested list containing results organized by domain and subset type
}
\description{
This function streamlines the process of running planned contrasts and
heterogeneity analyses across multiple outcome domains. It applies the same
subset analyses (e.g., by wealth, ethnicity, political orientation) to
different outcome domains, saving results, generating tables, and creating
visualizations.
}
\examples{
# set up lists of models, names, and subtitles
domain_models <- list(
  models_binary_health,
  models_binary_psych,
  models_binary_present,
  models_binary_life,
  models_binary_social
)

domain_names <- c("health", "psych", "present", "life", "social")

subtitles <- c(
  subtitle_health,
  subtitle_psych,
  subtitle_present,
  subtitle_life,
  subtitle_social
)

# set up subset types in a list
subset_types <- list(
  wealth = subsets_standard_wealth,
  ethnicity = subsets_standard_ethnicity,
  political = subsets_standard_political,
  gender = subsets_standard_gender,
  cohort = subsets_standard_cohort
)

# run the batch processing for all domains and subsets
results <- margot_planned_subgroups_batch(
  domain_models = domain_models,
  X = X,
  base_defaults = base_defaults_binary,
  subset_types = subset_types,
  original_df = original_df,
  domain_names = domain_names,
  subtitles = subtitles,
  push_mods = push_mods
)

}
