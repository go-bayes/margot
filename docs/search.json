[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia JA (2024). margot: MARGinal Observational Treatment-effects.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   website = {https://go-bayes.github.io/margot/}, }"},{"path":"/index.html","id":"margot","dir":"","previous_headings":"","what":"This package offers a gentle introduction to R","title":"This package offers a gentle introduction to R","text":"MARGinal Observational Treatment-effects Causal inference demands balance among treatments compared. observational studies, balance guaranteed. goal margot enhance accessibility causal inference. primary audience includes psychological scientists, though may benefit others. package offers helper functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses computing Marginal Average Treatment Effects, also supports Conditional Average Treatment Effects. Please note version work progress experimental. functions tested, albeit data resembling synthetic teaching data (three-wave panel design). interests data differ, proceed caution. name margot aptly reflects essence package, also chosen name honour daughter, Margot.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"This package offers a gentle introduction to R","text":"can install development version margot like :","code":"if (!require(devtools, quietly = TRUE)) {   install.packages(\"devtools\")   library(devtools) }  devtools::install_github(\"go-bayes/margot\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"This package offers a gentle introduction to R","text":"","code":"library(\"margot\")  # summary of agreeableness responses by wave in retained sample df_nz |>    dplyr::select(id, wave, agreeableness) |>    dplyr::group_by(wave) |>    dplyr::summarise(mean = mean(agreeableness, na.rm = TRUE))"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","title":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labeled included. handles multiple observations per subject across different waves, allows specification baseline variables, exposure variables, outcome variables. ensures specified variables included resulting wide-format dataframe, columns prefixed time measurement.","code":""},{"path":"/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","text":".data dataframe containing longitudinal data long format. baseline_vars character vector baseline variable names included t0. exposure_var character vector exposure variable names tracked across time. outcome_vars character vector outcome variable names tracked across time.","code":""},{"path":"/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","text":"wide-format dataframe subject's observations across time points         represented single row, variables prefixed respective         time measurement.","code":""},{"path":"/reference/margot_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Longitudinal Data to Wide Format with Baseline Adjustments — margot_wide","text":"","code":"# Defining variables as per the function's documentation baseline_vars <- c(   \"male\", \"age\",  \"eth_cat\",   \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",   \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- c(\"forgiveness\")  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",   \"hlth_bmi\", \"hours_exercise\" )  # df_nz is a dataset included in this package # wide_data <- margot_wide(df_nz, baseline_vars, exposure_var, outcome_vars) # print(wide_data)"},{"path":"/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","title":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","text":"function transforms longitudinal data wide format performs imputation baseline variables. leverages `mice` package imputation, ensuring missing baseline data appropriately handled. function arranges data participant id time, filters based time conditions, reshapes data wide format. Imputed data merged back, maintaining structure suitable analysis.","code":""},{"path":"/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","text":".data dataframe containing longitudinal data. baseline_vars character vector baseline variable names include impute necessary. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wide Format Data Transformation with Baseline Imputation — margot_wide_impute_baseline","text":"","code":"# the df_nz is a dataset available in the 'margot' package data(df_nz, package = \"margot\")  df_nz <- data.frame(df_nz) wide_data_imputed <- margot_wide_impute_baseline(df_nz,   baseline_vars = c(\"age\", \"male\", \"religion_believe_god\"),   exposure_var = (\"forgiveness\"),   outcome_vars = (\"kessler_latent_anxiety\")   ) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: tidyr"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/news/index.html","id":"margot-010","dir":"Changelog","previous_headings":"","what":"margot 0.1.0","title":"margot 0.1.0","text":"Initial version.","code":""}]
