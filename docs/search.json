[{"path":"https://go-bayes.github.io/margot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). margot: MARGinal Observational Treatment-effects. doi:10.5281/zenodo.10907724, R package version 0.1.2. License: CC 4.0. Functions obtain MARGinal Observational Treatment-effects observational data., https://go-bayes.github.io/margot/.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 0.1.2. License: CC BY 4.0. Functions to obtain MARGinal Observational Treatment-effects from observational data.},   url = {https://go-bayes.github.io/margot/},   doi = {10.5281/zenodo.10907724}, }"},{"path":"https://go-bayes.github.io/margot/index.html","id":"margot","dir":"","previous_headings":"","what":"MARGinal Observational Treatment-effects","title":"MARGinal Observational Treatment-effects","text":"MARGinal Observational Treatment-effects.1 Causal inference requires balance across treatments compared. observational studies, balance guaranteed. goal margot enhance accessibility causal inference. primary audience includes psychological scientists, although may benefit social scientists. package offers functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses streamlining estimation (Marginal) Average Treatment Effects, also supports workflows Conditional Average Treatment Effects, Heterogeneous Treatment Effects, Modified Treatment Policies. version package work progress experimental.","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MARGinal Observational Treatment-effects","text":"can install development version margot like :","code":"if (!require(devtools, quietly = TRUE)) {   install.packages(\"devtools\")   library(devtools) }  devtools::install_github(\"go-bayes/margot\")"},{"path":"https://go-bayes.github.io/margot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"MARGinal Observational Treatment-effects","text":"","code":"library(\"margot\")  # create transition table to evaluate the positivity assumption transition_matrix <- create_transition_matrix(df_nz, \"religion_believe_god\", \"id\")  # create table and table explanation table_change_belief <- transition_table(transition_matrix) table_change_belief"},{"path":"https://go-bayes.github.io/margot/index.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"MARGinal Observational Treatment-effects","text":"Go :https://github.com/go-bayes/margot","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Back-transform Log-transformed Mean — back_transform_logmean","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"Back-transforms log-transformed mean (using log(x + 1) transformation) original scale. utility function useful interpreting results original data transformed using log(x + 1) handle zero values normalize distribution data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"back_transform_logmean(log_mean)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"log_mean mean log scale, original data transformed using log(x + 1).","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"list containing mean original scale (`mean_original`). standard deviation back-transformed function due complexity introduced log(x + 1) transformation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"log_mean = 1.098612 # true mean is 2. We add + 1 to the log to handle zero: log(2+1) = log(3) back_transformed_result <- back_transform_logmean(log_mean) print(back_transformed_result) #> $mean_original #> [1] 1.999999 #>"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Scale — back_transform_zscore","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"function takes z-score transforms back original scale using specified mean standard deviation original data. Often, standardization applied original scale values needed interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"back_transform_zscore(z, mean, sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"z numeric value vector z-scores transformed back original scale. mean mean original dataset z-score calculated. sd standard deviation original dataset z-score calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"# Given a dataset with mean = 100 and sd = 15 original_value <- back_transform_zscore(z = 1.5, mean = 100, sd = 15) print(original_value) #> [1] 122.5"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Causal Contrasts — causal_contrast_engine","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Estimates causal contrasts using generalized linear models different types treatment effects (ATE, ATT) outcomes (RR, RD). Supports handling multiply imputed datasets allows flexibility model specification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Causal Contrasts — causal_contrast_engine","text":"","code":"causal_contrast_engine(   df,   Y,   X,   baseline_vars = baseline_vars,   treat_0 = treat_0,   treat_1 = treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Causal Contrasts — causal_contrast_engine","text":"df Data frame `mids` object containing data. Y Response variable name string. X Treatment exposure variable name string. baseline_vars Vector baseline covariate names. treat_0 Reference level treatment variable. treat_1 Treatment level interest comparison. estimand Type causal estimand (\"ATE\", \"ATT\"); defaults . type Type effect size (\"RR\" Risk Ratio, \"RD\" Risk Difference); defaults . nsims Number simulations bootstrap; defaults 200. cores Number cores parallel processing; uses available cores default. family Model family string family object; defaults \"gaussian\". weights name weights variable data frame, NULL weights used. continuous_X Whether X continuous variable; defaults FALSE. splines Whether apply spline transformation X; defaults FALSE. vcov Type variance-covariance matrix standard error estimation; defaults \"HC2\". verbose Whether print detailed output; defaults FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Depending configuration, returns summary object containing estimated causal contrasts, confidence intervals, potentially diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"function estimates average treatment effect (ATE) average treatment effect treated (ATT) using generalized linear models (GLMs). supports handling continuous categorical treatments, optional use spline transformations, adjustments multiple imputation datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"causal_contrast_marginal(   df,   Y,   X,   baseline_vars = \"1\",   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = NULL,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"df Data frame containing data. Y response variable data frame. X treatment exposure variable data frame. baseline_vars vector names baseline covariates adjust model. treat_0 reference level treatment variable, corresponding treatment control condition. treat_1 active level treatment variable, corresponding receiving treatment. estimand character vector specifying estimand; \"ATE\" Average Treatment Effect \"ATT\" Average Treatment Effect Treated. type character vector specifying type effect size; \"RD\" Risk Difference \"RR\" Risk Ratio. nsims Number simulations perform, relevant handling multiple imputation datasets. cores Number cores use parallel processing. family family GLM used (e.g., \"gaussian\" linear models). weights name weights variable data frame, NULL weights used. continuous_X Logical indicating whether treatment variable X continuous. splines Logical indicating whether use spline transformations treatment variable X. vcov method use variance-covariance matrix estimation. verbose Logical indicating whether display detailed output model fitting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"Depending 'type' specified, returns summary object containing either risk differences risk ratios along additional statistics like confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"# Assume that df is your dataset with variables 'outcome', 'treatment', 'age', and 'gender' result <- causal_contrast_marginal(df = df, Y = \"outcome\", X = \"treatment\",                                    baseline_vars = c(\"age\", \"gender\"),                                    treat_0 = \"control\", treat_1 = \"exposed\",                                    estimand = \"ATE\", type = \"RD\", nsims = 100,                                    cores = 2, family = \"gaussian\", weights = \"weight_var\",                                    continuous_X = FALSE, splines = FALSE,                                    vcov = \"HC3\", verbose = TRUE) #> Error in model.frame.default(formula = as.formula(formula_str), data = df,  :  #>   'data' must be a data.frame, environment, or list #> Error in UseMethod(\"conditionMessage\"): no applicable method for 'conditionMessage' applied to an object of class \"try-error\""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"function generates histogram specific ranges highlighted indicate highest /lowest values within unit specified limits. allows customization bin width, unit change highlighting, range highlighted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"","code":"coloured_histogram(   df,   col_name,   binwidth = 1,   unit_of_change = 1,   scale_min = NULL,   scale_max = NULL,   highlight_range = \"highest\" )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"df dataframe containing data plotted. col_name name column histogram generated. binwidth width bins histogram; defaults 1. unit_of_change unit change used define highlight range. subtitle mention unit. also adjusts calculation highlight thresholds slightly less unit go range data. Defaults 1. scale_min minimum value used scaling histogram. `NULL`, minimum value `col_name` used. scale_max maximum value used scaling histogram. `NULL`, maximum value `col_name` used. highlight_range Specifies range highlight: \"lowest\", \"highest\", \"\". Defaults \"highest\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"ggplot object histogram highlighted ranges specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"","code":"if (FALSE) { # Assuming df_19 is your dataframe and contains the column 'forgiveness' graph <- coloured_histogram(   df = df_19,   col_name = \"forgiveness\",   scale_min = 1,   scale_max = 7,   highlight_range = \"highest\",   binwidth = .1, # Adjust binwidth as needed   unit_of_change = 1 # Specify the unit of change ) print(graph) }"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","title":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","text":"function creates histogram specified column dataframe, highlighting quantiles automatically calculated based number quantiles specified user. draws vertical lines quantile specified colors, title plot incorporating capitalized column name using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","text":"","code":"coloured_histogram_quantiles(df, col_name, n_quantiles, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. n_quantiles number quantiles calculate. n_quantiles 4, produce quartiles; 5, quintiles; etc. positive integer greater 1. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","text":"ggplot object representing histogram highlighted quantiles.   plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Automatically Calculated Quantile Highlights — coloured_histogram_quantiles","text":"","code":"if (FALSE) { # `df_nz` is the included dataframe with a numeric column 'forgiveness': df_19 <- dplyr::filter(df_nz, wave == 2019)  quantile_plot <- coloured_histogram_quantiles(   df = df_19,   col_name = \"forgiveness\",   n_quantiles = 4, # producing quartiles   binwidth = 0.5 # adjust binwidth as needed ) } print(quantile_plot) #> Error in eval(expr, envir, enclos): object 'quantile_plot' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"function creates histogram specified column dataframe, highlighting mean one standard deviation mean. draws vertical lines mean (black) plus/minus one standard deviation (blue gold, respectively), arrows mean standard deviation marker. title plot includes capitalized column name, achieved using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"coloured_histogram_sd(df, col_name, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"ggplot object representing histogram highlights mean   standard deviations. plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"if (FALSE) { # Assuming `df_nz` is a dataframe with a numeric column 'forgiveness' # and a factor or integer column 'wave' for subsetting: df_19 <- dplyr::filter(df_nz, wave == 2019)  graph_density_of_exposure <- coloured_histogram_sd(   df = df_19,   col_name = \"forgiveness\",   binwidth = 0.5 # Adjust binwidth as needed ) } print(graph_density_of_exposure) #> Error in eval(expr, envir, enclos): object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"function creates histogram highlights specified range values visualize shifts data distributions. highlighted range can indicate areas interest, shifts distribution. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"coloured_histogram_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"df dataframe containing variable interest. col_name name column `df` visualized histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data create meaningful visualization. range_highlight numeric vector length 2 specifying start end range highlight. `NULL`, range highlighted. shift character string indicating direction shift, \"\" highlighting gold \"\" highlighting dodger blue. default \"\". show_avg_line logical value indicating whether display vertical line representing average value specified column using red dashed line. Default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"`ggplot` object representing histogram specified highlights. object can printed modified using `ggplot2` functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"if (FALSE) { # Assuming df_nz is your dataframe and it includes a numeric variable 'forgiveness' # Filter to a specific subset, for example, wave 2019 df_19 <- dplyr::filter(df_nz, wave == 2019)  # Create and print the histogram graph_density_of_exposure <- coloured_histogram_shift(   df = df_19,   shift = \"down\",   col_name = \"forgiveness\",   binwidth = .5, # Adjust binwidth for your data   range_highlight = c(3.9, 10) ) print(graph_density_of_exposure) }"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"function calculates difference means, standard error difference, 95 list includes mean (theta) standard error (std.error) group. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"compute_difference_means(group1, group2)"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"group1 list containing mean standard error group 1. Expected structure: list(vals = list(theta = x, std.error = y)). group2 list containing mean standard error group 2. Expected structure: list(vals = list(theta = x, std.error = y)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high`,           rounded 4 decimal places. Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"group1 <- list(vals = list(theta = 100, std.error = 10)) group2 <- list(vals = list(theta = 90, std.error = 5)) output <- compute_difference_means(group1, group2) cat(output$interpretation)  # Print the interpretation #> The difference in means is 10 with a standard error of 11.1803 and a 95% CI of [-11.9135, 31.9135]."},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Formula for Regression Models — construct_formula","title":"Construct a Formula for Regression Models — construct_formula","text":"function dynamically constructs regression formula based provided parameters. supports incorporating splines continuous variables can handle interaction terms, including subclass variable. function ensures subclass variable redundantly included baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"construct_formula(   Y,   X = 1,   baseline_vars,   continuous_X = FALSE,   splines = FALSE,   subclass = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Formula for Regression Models — construct_formula","text":"Y string specifying dependent variable model. X string specifying independent treatment exposure variable; defaults 1 (intercept model). baseline_vars character vector baseline covariate names include model. continuous_X logical indicating whether `X` continuous variable; TRUE `splines` TRUE, applies spline transformation `X`. splines logical indicating whether apply spline transformations treatment variable `X`. subclass optional string specifying subclass variable interaction `X` baseline covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Formula for Regression Models — construct_formula","text":"string representing constructed formula use regression modeling functions like `glm`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"# Example with basic interaction terms without subclass: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), FALSE, FALSE) #> [1] \"health_outcome ~ treatment * ( age+sex )\"  # Example with spline transformation for a continuous treatment: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), TRUE, TRUE) #> [1] \"health_outcome ~ bs( treatment ) * ( age+sex )\"  # Example including a subclass variable: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), FALSE, FALSE, \"region\") #> [1] \"health_outcome ~ region * ( treatment * ( age+sex+income ) )\"  # Example with continuous treatment, splines, and subclass interaction: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), TRUE, TRUE, \"region\") #> [1] \"health_outcome ~ region * ( bs( treatment ) * ( age+sex+income ) )\""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"function processes wide format dataframe filter create list dataframes based levels specified factor exposure variable. separates dataframes based level factor variable, one present. continuous variables specified, returns dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"create_filtered_wide_dataframes(dat_wide, exposure_vars)"},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"dat_wide wide format dataframe contains exposure variables. exposure_vars character vector listing names exposure variables. vector must include least one valid variable name dataframe.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"list dataframes, corresponding level factor exposure variable         factor present; otherwise, single dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"# Assuming wide_data is a dataframe and \"exposure_var\" includes factor or continuous variables: list_filtered_df <- create_filtered_wide_dataframes(wide_data, c(\"exposure_var1\", \"exposure_var2\")) #> Error in eval(expr, envir, enclos): object 'wide_data' not found # Access individual filtered dataframe if factor variables present: q1_df <- list_filtered_df[[\"tile_1\"]]  # For factor level \"tile_1\" #> Error in eval(expr, envir, enclos): object 'list_filtered_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","title":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","text":"function takes data frame specified variable name divides variable ordered categories based quantile breaks. number quantile divisions must specified. function designed handle non-unique breaks adjusting appropriately. returns data frame new ordered factor variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","text":"","code":"create_ordered_variable(df, var_name, n_divisions = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","text":"df data frame containing variable divided quantiles. var_name name variable within data frame divide quantiles. example, `df_nz` dataset, might use \"perfectionism\". n_divisions number quantile divisions create. must positive integer. NULL specified, function stop ask user provide parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","text":"input data frame additional column representing ordered factor         variable. new column named combining original variable name,         number divisions, suffix 'tile', e.g., 'perfectionism_5tile'         5 divisions 'perfectionism' variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Ordered Variable Based on Quantile Breaks — create_ordered_variable","text":"","code":"# Assuming df_nz is your dataset and 'perfectionism' is the column of interest: df_updated <- create_ordered_variable(df_nz, \"perfectionism\", 5)"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","title":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","text":"function creates ordered categorical variable dataframe based user-specified breaks labels. checks provided breaks labels correctly specified creating factor variable. useful creating factor custom defined intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","text":"","code":"create_ordered_variable_custom(df, var_name, breaks, labels)"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","text":"df data frame containing variable transformed. var_name name numeric variable within data frame converted ordered factor. variable ideally continuous. breaks numeric vector specifying breakpoints intervals. breakpoints cover entire range variable one number labels. labels character vector specifying labels intervals defined breaks. length labels one less length breaks.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","text":"Returns data frame additional column representing ordered factor variable.         new column named combining original variable name suffix \"_coarsen\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Ordered Variable with Custom Breaks and Labels — create_ordered_variable_custom","text":"","code":"# Assuming df_nz is your dataset and 'hours_exercise' is the numeric column: df_updated <- create_ordered_variable_custom(df_nz, \"hours_exercise\",                                              c(1, 2, 7, Inf), c(\"[1_2)\", \"[2_7)\", \"[7_up]\"))"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transition matrix for state transitions — create_transition_matrix","title":"Create transition matrix for state transitions — create_transition_matrix","text":"satisify positivity assumption causal inference, must ensure exposure occurs data. function computes transition matrix given state variable across subjects, tracking changes consecutive observations. function handles numeric factor state variables, excluding NA values transition count.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"create_transition_matrix(data, state_var, id_var)"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transition matrix for state transitions — create_transition_matrix","text":"data data frame containing observations. state_var name state variable column `data` string. variable tracks state changes analyzed. id_var name identifier variable column `data` string. variable distinguishes different subjects entities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transition matrix for state transitions — create_transition_matrix","text":"matrix indicating number transitions states. rows represent initial state (''), columns represent subsequent state (''). Diagonal entries indicate number times state change, -diagonal entries indicate transitions one state another.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create transition matrix for state transitions — create_transition_matrix","text":"function explicitly excludes NA values transition matrix calculation. treats numeric state variables converting factors, ensuring consistent analysis approach numeric factor types.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") print(transition_matrix) #>     to #> from 0 1 #>    0 0 2 #>    1 1 0"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"function provides double robust approach estimating causal effects. first computes marginal effects using `causal_contrast_marginal` function, processes tabulates results using `tab_engine_marginal`. function handles continuous categorical variables, allows specification type effect measure causal estimation tabulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"double_robust_marginal(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   nsims,   cores,   family,   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE,   delta = 1,   sd = 1,   new_name,   estimand = c(\"ATE\", \"ATT\"),   type_causal = c(\"RR\", \"RD\"),   type_tab = c(\"RR\", \"RD\") )"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"df data frame containing dataset analysis. Y name outcome variable string. X name treatment exposure variable string. baseline_vars vector covariate names included model. treat_0 reference level treatment variable. treat_1 treatment level treatment variable. nsims number simulations run, used bootstrap Monte Carlo methods. cores number processor cores use parallel computation. family description error distribution link function used model. weights name weights variable data frame, NULL weights used. continuous_X Logical, indicating whether treatment variable X continuous. splines Logical, indicating whether use spline functions continuous variables. vcov method use variance-covariance estimation. verbose Logical, indicating whether print detailed output computation. delta assumed smallest worthwhile effect, used E-value calculations tabulation. sd standard deviation effect estimate, used E-value calculations. new_name new name assign tabulated output, typically describing variable model. estimand Specifies target causal inference, \"ATE\" (Average Treatment Effect) \"ATT\" (Average Treatment Treated). type_causal type effect size (e.g., \"RR\" Risk Ratio \"RD\" Risk Difference) computed causal analysis. type_tab type effect size used tabulation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"list containing two elements: `causal_results` results causal analysis,         `tab_results` tabulated results including E-values statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"# Assuming you have a dataset `df_ate` and necessary variables defined results <- double_robust_marginal(   df = df_ate,   Y = \"t2_kessler_latent_anxiety_z\",   X = \"treatment_var\",   baseline_vars = c(\"age\", \"gender\"),   treat_1 = \"intervention\",   treat_0 = \"control\",   nsims = 200,   cores = 4,   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   estimand = \"ATE\",   type_causal = \"RD\",   type_tab = \"RD\",   vcov = \"HC2\",   new_name = \"Test Model Effect\",   delta = 1,   sd = 1 ) #> Error in eval(expr, envir, enclos): object 'df_ate' not found"},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Annotate Treatment Effect Estimates — group_tab","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports different sorting options including default descending, alphabetical, custom order.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"group_tab(   df,   type = c(\"RR\", \"RD\"),   order = c(\"default\", \"alphabetical\", \"custom\"),   custom_order = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"df Data frame containing variables interest. type Type treatment effect analyze. Expected values 'RR' Risk Ratio 'RD' Risk Difference. Defaults 'RR'. order Specifies order outcomes arranged. Can 'default' descending order estimate, 'alphabetical' alphabetical order outcome, 'custom' user-defined order. Default 'default'. custom_order vector custom ordering outcomes, applicable `order` set 'custom'. vector containing outcomes desired order.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"data frame arranged based specified order annotated treatment effect estimates, estimate labels, evidence value annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"# Example using Risk Ratio (RR) and default sorting result_df <- group_tab(df = analysis_df, type = 'RR') #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Error in eval(expr, envir, enclos): object 'analysis_df' not found  # Example using Risk Difference (RD) with alphabetical sorting result_df <- group_tab(df = analysis_df, type = 'RD', order = 'alphabetical') #> Error in eval(expr, envir, enclos): object 'analysis_df' not found  # Example using custom sorting order custom_order <- c(\"Outcome3\", \"Outcome1\", \"Outcome2\") result_df <- group_tab(df = analysis_df, type = 'RR', order = 'custom', custom_order = custom_order) #> Error in eval(expr, envir, enclos): object 'analysis_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from RDS File in a Specified Directory — here_read","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"Reads RDS file specified `name` directory defined `push_mods`, returning data frame stored within. function uses `` package resolve path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"here_read(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"name Character string specifying name RDS file read (without \".rds\" extension).","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"data frame specific R object stored RDS file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"`push_mods` variable must defined user's environment within package, pointing directory files read. presumed `push_mods` correctly set point existing directory path. function validate existence file throw error file exist.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved an RDS file named \"my_saved_dataframe.rds\" in that directory my_df <- here_read(\"my_df\") #> Error in here_read(\"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"function deprecated removed future releases. reading data frames, consider using `here_read_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"here_read_arrow(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"name Character string specifying name Parquet file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"if (FALSE) { my_df <- here_read_arrow(\"my_dataset\") }"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from qs File in a Specified Directory — here_read_qs","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"Reads `.qs` file specified `name` directory defined `dir_path`, returning data frame stored within. function uses `qs` package efficiently read `.qs` files `` package construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"","code":"here_read_qs(name, dir_path)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"name Character string specifying name `.qs` file read (without \".qs\" extension). dir_path Character string specifying directory path file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"data frame representing data stored specified `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"`dir_path` argument must point existing directory. function throw error specified file exist read `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"","code":"if (FALSE) { # Assuming you have a directory path \"~/mydata\" # and you have previously saved a `.qs` file named \"my_dataset.qs\" in that directory my_df <- here_read_qs(\"my_dataset\", \"~/mydata\") }"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame as RDS File in a Specified Directory — here_save","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Saves provided data frame RDS file using specified name, within directory defined `push_mods`. function uses `` package construct path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"here_save(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"df Data frame saved. object want persist disk. name Character string specifying base name file. \".rds\" extension automatically appended name.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Invisible NULL. primary effect function side effect saving RDS file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"`push_mods` variable defined user's environment within package point directory files saved. assumed `push_mods` correctly set point valid directory path. function create directories; assumes specified directory exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"# assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save(my_df, \"my_df\") #> Error in here_save(my_df, \"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"function deprecated removed future releases. saving data frames, consider using `here_save_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"here_save_arrow(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"df Data frame saved. name Character string specifying base name file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"if (FALSE) { my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_arrow(my_df, \"my_saved_dataframe\") }"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to qs File in a Specified Directory — here_save_qs","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"Saves provided data frame `.qs` file using specified name, within directory defined `dir_path`. function leverages `qs` package write data frames `.qs` format efficient storage quick access R.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"","code":"here_save_qs(df, name, dir_path)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"df Data frame saved. object want persist disk `.qs` format. name Character string specifying base name file (without \".qs\" extension). dir_path Character string specifying directory path file saved.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"Invisible NULL. primary effect function side effect writing `.qs` file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"`dir_path` argument must point existing directory. function create directories; assumes specified directory already exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"","code":"my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_qs(my_df, \"my_saved_dataframe\", \"~/mydata\") #> Error in qs::qsave(df, here::here(dir_path, paste0(name, \".qs\"))): For file ~/mydata/my_saved_dataframe.qs: Failed to open for writing. Does the directory exist? Do you have file permissions? Is the file name long? (>255 chars)"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"function takes list data frames, performs multiple imputation fill missing values using 'mice' package, combines imputed datasets single dataset. imputations performed separately data frame list, results combined 'mids' object, cleaned returned.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"impute_and_combine(   list_df,   m = 10,   exclude_vars = c(\"t0_sample_frame\", \"id\", \"t0_sample_origin_names_combined\") )"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"list_df list containing data frames perform multiple imputation. m number multiple imputations perform data frame. exclude_vars vector variable names excluded imputation model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"data frame combines imputed datasets, unnecessary columns removed         row names reset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"if (FALSE) {   # Assuming list_df is a list of data frames with missing values   imputed_data <- impute_and_combine(list_df, m = 5)   print(imputed_data) }"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate E-values for LMTP Output — lmtp_evalue_tab","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"function takes output `margot_tab_lmtp()`, contains estimates treatment effects, calculates E-values assess robustness estimates potential unmeasured confounding. E-values quantify minimum strength association, risk ratio scale, unmeasured confounder need treatment outcome, fully explain away observed association. function supports risk differences (RD) risk ratios (RR) scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"lmtp_evalue_tab(x, delta = 1, sd = 1, scale = c(\"RD\", \"RR\"))"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"x data frame output `margot_tab_lmtp()` containing estimates interest. delta hypothesized increase outcome, used `scale` \"RD\". Default 1. sd standard deviation outcome, used `scale` \"RD\". Default 1. scale character string indicating scale estimate: \"RD\" risk difference, \"RR\" risk ratio. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"data frame similar `x`, additional columns E-Value lower bound, excluding   'standard_error' column.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"if (FALSE) { # Assuming 'tab_contrast_hours_charity_z_null' is a data frame output from `margot_lmtp_tab()` lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RD\") lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RR\") }"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Based on Exposure Variables — margot_filter","title":"Filter Data Based on Exposure Variables — margot_filter","text":"function filters dataframe based levels single factor variable arranges dataframe identifier continuous variables present.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Based on Exposure Variables — margot_filter","text":"","code":"margot_filter(dat_wide, exposure_vars, sort_var = \"id\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Based on Exposure Variables — margot_filter","text":"dat_wide Dataframe filter. exposure_vars Vector names exposure variables consider. sort_var Optional; variable sort dataframes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Based on Exposure Variables — margot_filter","text":"list dataframes filtered levels factor variable arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"function interprets output causal effect analysis, providing textual descriptions causal effect estimates. categorises strength evidence causality based E-values confidence intervals, generates detailed interpretation effect estimates according specified causal scales (.e., \"causal_difference\" \"risk_ratio\") estimands. function now supports interpreting results causal difference risk ratio scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"","code":"margot_interpret_table(df, causal_scale, estimand)"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"df Data frame containing causal effect estimates, expected include columns outcome names, effect estimates (either differences ratios), confidence intervals, E-values, summary estimate label. structure `df` align specified `causal_scale`. causal_scale Character string specifying causal scale used analysis. Currently supports \"causal_difference\" differences means medians, \"risk_ratio\" comparing ratios probabilities risks. estimand Character string indicating type causal estimand interpreted: \"PATE\" (Population Average Treatment Effect), \"ATE\" (Average Treatment Effect), \"ATT\" (Average Treatment Effect Treated), \"CATE\" (Conditional Average Treatment Effect).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"character vector containing detailed interpretation outcome `df`, including type estimand, causal contrast, E-values, strength evidence causality. interpretation includes whether evidence causality based E-value confidence interval, tailored specified causal scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"","code":"if (FALSE) { # Assuming `group_tab_output` is the result from a causal analysis margot_interpret_table(group_tab_output, \"causal_difference\", \"ATE\") margot_interpret_table(group_tab_output, \"risk_ratio\", \"PATE\") }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"function first creates summary table output `lmtp::lmtp_contrast()` using `margot_tab_lmtp`, specifying desired scale (RD RR) new name row. calculates E-values estimates table assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"margot_lmtp_evalue(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"lmtp_output output `lmtp::lmtp_contrast()`, summarized analyzed E-values. scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". new_name Character string name row output summary table, representing treatment contrast. name applied first row summary table. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"data frame original estimates E-values. table includes columns estimate (either RD RR), E-Value, E-Value lower bound, excluding 'standard_error' column.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"if (FALSE) { # Assuming `contrast_output` is the result from `lmtp::lmtp_contrast()` summary_evalues <- margot_lmtp_evalue(   lmtp_output = contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" ) print(summary_evalues) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"margot_lmtp_tab(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"if (FALSE) { # Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_lmtp_tab(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" )  print(group_tab_all_perceived_support) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"function renders graphical representation causal effect estimates, organised effect size either risk difference (RD) risk ratio (RR) scale. categorises estimates \"positive\", \"negative\", \"zero_crossing\" based confidence intervals. function features advanced customisability graphical parameters, including error bar width application custom ggplot2 themes. Notably, avoids direct manipulation input data implements advanced labelling strategy x-axis prevent incoherent negative values RR.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"","code":"margot_plot(   .data,   type = c(\"RD\", \"RR\"),   order = c(\"default\", \"alphabetical\"),   title,   subtitle,   estimate_scale = 1,   base_size = 11,   text_size = 2.75,   point_size = 0.5,   title_size = 10,   subtitle_size = 9,   legend_text_size = 6,   legend_title_size = 6,   x_offset = ifelse(type == \"RR\", 0, -1.75),   x_lim_lo = ifelse(type == \"RR\", 0.1, -1.75),   x_lim_hi = ifelse(type == \"RR\", 2.5, 1),   linewidth = 0.5,   plot_theme = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":".data data frame causal effect estimates, ideally output `group_tab` function similar. data include confidence intervals effect estimate values. type Character string indicating scale effect estimates: \"RD\" risk difference \"RR\" risk ratio, \"RD\" default. order Character string indicating ordering output: \"default\" default descending, \"alphabetical\" alphabetical, \"custom\" custom order provided .data. title Main title plot. subtitle Subtitle plot. estimate_scale Numeric multiplier adjust horizontal offset estimate labels, aiding plot clarity. Default 1. base_size Base font size plot, applied globally unless overridden. Default 11. text_size Font size estimate labels. Default 2.75. point_size Size points representing estimates. Default 0.5. title_size Font size plot title. Default 10. subtitle_size Font size plot subtitle. Default 9. legend_text_size Font size legend text. Default 6. legend_title_size Font size legend titles. Default 6. x_offset Horizontal adjustment estimate labels, varied based `type`. Default adjustments 0 \"RR\" -1.75 \"RD\". x_lim_lo Lower limit x-axis, automatically adjusted based `type`. x_lim_hi Upper limit x-axis, automatically adjusted based `type`. linewidth Width error bars plot. Default 0.5. plot_theme ggplot2 theme object customising plot appearance. Inherits `base_size` `base_size` parameter maintain consistency. Uses `theme_classic()` default allows customisation. custom_order Optional vector specifying custom ordering 'order' set 'custom'.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"ggplot object displaying causal effect estimates categorisation error bars. plot tailored modifications direct usage.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"margot_tab_lmtp(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"# Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_tab_lmtp(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) #> Error in eval(expr, envir, enclos): object 'contrast_hours_charity_z_null' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with labels — margot_wide","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labelled included. handles multiple observations per subject across different waves, allows specification baseline variables, exposure variables, outcome variables. ensures specified variables included resulting wide-format data frame, columns prefixed time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with labels — margot_wide","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names included t0. exposure_var character vector exposure variable names tracked across time. outcome_vars character vector outcome variable names tracked across time.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"wide-format data frame subject's observations across time points         represented single row, variables prefixed respective         time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"# Defining variables as per the function's documentation baseline_vars <- c(   \"male\", \"age\",  \"eth_cat\",   \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",   \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- c(\"forgiveness\")  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",   \"hlth_bmi\", \"hours_exercise\" )  # df_nz is a synthetic dataset included in this package # wide_data <- margot_wide(df_nz, baseline_vars, exposure_var, outcome_vars) # print(wide_data)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"function transforms longitudinal data wide format performs imputation baseline variables. leverages `mice` package imputation, ensuring missing baseline data appropriately handled. function arranges data participant id time, filters based time conditions, reshapes data wide format. Imputed data merged back, maintaining structure suitable analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":".data dataframe containing longitudinal data. baseline_vars character vector baseline variable names include impute necessary. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"# df_nz is a synthetic dataset included in this package data(df_nz, package = \"margot\")  df_nz <- data.frame(df_nz) wide_data_imputed <- margot_wide_impute_baseline(df_nz,   baseline_vars = c(\"age\", \"male\", \"religion_believe_god\"),   exposure_var = (\"forgiveness\"),   outcome_vars = (\"kessler_latent_anxiety\")   ) #>  #>  iter imp variable #>   1   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   2   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   3   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   4   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   5   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":null,"dir":"Reference","previous_headings":"","what":"General Matching Function for Multiple Imputation Data — match_mi_general","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"function facilitates propensity score matching datasets, including generated multiple imputation, assess covariate balance across treatment groups. leverages WeightIt MatchThem packages calculate propensity scores apply matching techniques. Users referred packages detailed methodological specifications additional functionality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"match_mi_general(   data,   X,   baseline_vars,   estimand,   method,   subgroup = NULL,   focal = NULL,   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"data data frame 'mids' object containing data matching. X string naming treatment exposure variable within `data`. baseline_vars character vector naming covariates include propensity score model. estimand string specifying target estimand ('ATE', 'ATT', 'ATC'). method method estimating propensity scores, per WeightIt package's documentation. subgroup (Optional) string specifying variable subgroup data within-group matching. focal (Optional) Specifies focal treatment group, useful 'ATT' 'ATC' estimands. sample_weights (Optional) string indicating variable `data` representing sample weights. stabilize Logical. Indicates whether stabilize weights, defaulting TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"list matched datasets subgroup level (`subgroup` used)   single matched dataset. element typically data frame object   reflecting matched data structure, depending matching method applied.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"Detailed methodology additional options can found : - WeightIt package propensity score estimation. - MatchThem package matching within imputed datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"if (FALSE) { # Assume `df` is a data frame with treatment, covariates, and sample weights matched_data <- match_mi_general(data = df,                                  X = \"treatment_var\",                                  baseline_vars = c(\"covariate1\", \"covariate2\"),                                  estimand = \"ATE\",                                  method = \"nearest\",                                  stabilize = TRUE) }"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Regression with Covariates — regress_with_covariates","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"unitility function performs generalized linear regression specified dataset using outcome variable, exposure variable, set baseline covariates. default, function uses Gaussian family (linear regression), allows specifying families generalized linear models (GLM).","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"regress_with_covariates(   data,   outcome,   exposure,   baseline_vars,   family = gaussian(),   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"data data frame containing variables analysis. outcome character string specifying name outcome variable data frame. exposure character string specifying name main exposure variable data frame. baseline_vars character vector specifying names baseline covariates include model addition exposure variable. family family object character string naming family (default gaussian(), performs linear regression). parameter determines error distribution link function used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"object class glm representing fitted model, includes coefficients, residuals, model diagnostics. object can analyzed using standard methods GLM objects, summary() model summaries anova() analysis variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"function constructs model formula using outcome, exposure, baseline variables. fits generalized linear model using formula. baseline variables filtered exclude outcome exposure variables model fitting. function prints formula used regression analysis verification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"if (FALSE) { # using `df_nz` is your data frame with \"income\" as the continuous outcome variable, # \"age\" as an exposure variable, and other covariates outcome_var <- \"income\" exposure_var <- \"age\" baseline_vars <- c(\"age\", \"education\", \"partner\") model <- regress_with_covariates(df_nz, outcome_var, exposure_var, baseline_vars, family =  gaussian()) summary(model) }"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"Iterates column provided data frame. column numeric attributes, function removes attributes converting column basic numeric vector. particularly useful cleaning data frames operations may add undesired attributes numeric columns, aggregations merges.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"remove_numeric_attributes(df)"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"df `data.frame` object attributes numeric columns removed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"`data.frame` attributes removed numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"df <- data.frame(a = I(1:3), b = c(\"x\", \"y\", \"z\"), c = I(rnorm(3))) cleaned_df <- remove_numeric_attributes(df) str(cleaned_df) #> 'data.frame':\t3 obs. of  3 variables: #>  $ a: 'AsIs' int  1 2 3 #>  $ b: chr  \"x\" \"y\" \"z\" #>  $ c: 'AsIs' num  0.249794.... -1.34097.... -1.33980...."},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Simulations for Estimating ATE — run_simulations","title":"Run Simulations for Estimating ATE — run_simulations","text":"function simulates data estimates Average Treatment Effect (ATE) using different methods specified causal model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Simulations for Estimating ATE — run_simulations","text":"","code":"run_simulations(   num_simulations,   N,   prob_L1,   A_on_Y,   L_on_A,   L_on_Y,   method = \"ps\" )"},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Simulations for Estimating ATE — run_simulations","text":"num_simulations Integer, number simulations run. N Integer, sample size simulation. prob_L1 Double, probability parameter generating L1. A_on_Y Double, effect size Y. L_on_A Double, effect size L . L_on_Y Double, effect size L Y. method Character, method IPTW DR adjustment (\"ps\" ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Simulations for Estimating ATE — run_simulations","text":"tibble containing estimated ATEs confidence intervals method.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Rename Columns Based on Criteria — select_and_rename_cols","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"Selects columns base set match specified baseline variables renames outcome variable changing prefix. Useful longitudinal data time-point prefixes need standardized adjusted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"select_and_rename_cols(   names_base,   baseline_vars,   outcome,   from_prefix = \"t2\",   to_prefix = \"t0\" )"},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"names_base character vector column names select. baseline_vars character vector baseline variables match `names_base`. outcome name outcome variable whose prefix replaced. from_prefix original prefix outcome variable replaced, defaulting \"t2\". prefix include character immediately preceding numeric value underscore, e.g., \"t2_\". to_prefix new prefix replace original prefix outcome variable, defaulting \"t0\". prefix format `from_prefix`, including character immediately preceding numeric value underscore, e.g., \"t0_\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"character vector selected column names outcome variable name   modified reflect new prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"names_base <- c(\"t1_age\", \"t2_weight\", \"t3_height\", \"t2_outcome\") baseline_vars <- c(\"age\", \"weight\") outcome_var <- \"t2_outcome\"  final_columns <- select_and_rename_cols(names_base, baseline_vars, outcome_var, \"t2\", \"t0\") print(final_columns) #> [1] \"t1_age\"     \"t2_weight\"  \"t0_outcome\""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"Generates simulated data sample population study average treatment effects (ATE), considering presence effect modifier. function simulates differences distribution effect modifiers sample population without altering treatment effect effect-modification. Weights calculated adjust distribution differences effect modifier sample population.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 1e+05,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   beta_az = 0.5,   noise_sd = 0.5,   seed = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"n_sample Integer, size sample. Default 10000. n_population Integer, size population. Default 100000. p_z_sample Numeric, probability effect modifier sample. Default 0.1. p_z_population Numeric, probability effect modifier population. Default 0.5. beta_a Numeric, treatment effect. Default 1. beta_z Numeric, coefficient effect modifier. Default 2.5. beta_az Numeric, interaction term representing effect modification treatment effect modifier. Default 0.5. noise_sd Numeric, standard deviation noise outcome variable. Default 0.5. seed Optional. integer value setting seed ensure reproducibility. Default `NULL`, set seed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"list containing two data frames: `sample_data` `population_data`, comprising outcome variable `y`, treatment variable ``, effect modifier `z`. `sample_data` data frame also includes calculated weights observation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"data <- simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 100000,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   noise_sd = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"function processes simulation results tabulate marginal effects along E-values, providing summary suited reporting. supports risk difference (RD) risk ratio (RR) types estimates handles continuous categorical treatment variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"tab_engine_marginal(   x,   new_name,   delta = 1,   sd = 1,   type = c(\"RD\", \"RR\"),   continuous_X = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"x data frame matrix containing simulation results processed. new_name new name assign output row, typically describing variable model. delta assumed smallest worthwhile effect, used E-value calculations. sd standard deviation effect estimate, used E-value calculations. type Character vector specifying scale effect size, either \"RD\" \"RR\". parameter determines effects calculated presented. continuous_X Logical indicating whether treatment variable X continuous. TRUE, adjusts row names based type parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"data frame specified new_name row name. data frame includes         effect estimates, confidence intervals, E-values, relevant statistics formatted         easy reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"# Assuming you have results from a simulation or model in `results_df` tabulated_results <- tab_engine_marginal(x = results_df,                                          new_name = \"Treatment Effect\",                                          delta = 1,                                          sd = 0.2,                                          type = \"RD\")  # Corrected 'scale' to 'type' #> Loading required package: EValue #> Error in eval(expr, envir, enclos): object 'results_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Table — transition_table","title":"Transition Table — transition_table","text":"Generates transition table describes movements stability states one observation next. formats output markdown table, highlighting number entities remaining state (diagonal) transitioning different states (-diagonal).","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Table — transition_table","text":"","code":"transition_table(data, state_names = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Table — transition_table","text":"data data frame columns `` `` indicating initial subsequent states entities, respectively, `Freq` column indicating frequency transitions. state_names Optional; vector state names replace default state labels. NULL, states labeled \"State 1\", \"State 2\", etc., based unique values `` `` columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Table — transition_table","text":"list two elements: `explanation`, character string explaining table, `table`, markdown-formatted table transitions. diagonal entries (bold) represent count entities remained initial state, -diagonal entries show count transitions different states.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Table — transition_table","text":"","code":"if (FALSE) { df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") # Assuming `transition_matrix` is a table with the transition counts between states # First, convert `transition_matrix` to a dataframe suitable for `transition_table` df_transition <- as.data.frame.matrix(transition_matrix) df_transition$from <- rownames(df_transition) long_df_transition <- tidyr::pivot_longer(df_transition, cols = -from, names_to = \"to\", values_to = \"Freq\")  transition_table_data <- transition_table(long_df_transition) cat(transition_table_data$explanation) cat(\"\\n\") print(transition_table_data$table) }"},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0121","dir":"Changelog","previous_headings":"","what":"margot 0.1.2.1","title":"margot 0.1.2.1","text":"group_tab now works hood margot_plot, need specify explicitly group_tab now allows custom order plot, just decreasing effect size numerous small enhancements older pamameteric model options new logo","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-012","dir":"Changelog","previous_headings":"","what":"margot 0.1.2","title":"margot 0.1.2","text":"minor fixes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-011","dir":"Changelog","previous_headings":"","what":"margot 0.1.1","title":"margot 0.1.1","text":"functions interpret outputs lmtp models functions create tables functions create graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0101","dir":"Changelog","previous_headings":"","what":"margot 0.1.0.1","title":"margot 0.1.0.1","text":"Minor bug fixes performance improvements.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-010","dir":"Changelog","previous_headings":"","what":"margot 0.1.0","title":"margot 0.1.0","text":"Initial release: includes data exploration, model preparation, utility functions.","code":""}]
