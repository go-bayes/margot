[{"path":[]},{"path":[]},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"fixed","dir":"","previous_headings":"2025-08-02: Fixed compute_conditional_means to respect compute_marginal_only","what":"Fixed","title":"Development Changelog","text":"Updated margot_causal_forest() compute_conditional_means respects compute_marginal_only setting compute_marginal_only = TRUE, conditional means now skipped performance Creates defensive empty structure computed = FALSE reason pipeline compatibility","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"technical-details","dir":"","previous_headings":"2025-08-02: Fixed compute_conditional_means to respect compute_marginal_only","what":"Technical Details","title":"Development Changelog","text":"Conditional means policytree::conditional_means() heterogeneity-related metrics show expected outcomes treatment arm different covariate patterns Skipping compute_marginal_only = TRUE consistent skipping RATE QINI Maintains defensive structure pattern skipped computations","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"fixed-1","dir":"","previous_headings":"2025-08-02: Fixed label mapping for reversed variables in margot_plot()","what":"Fixed","title":"Development Changelog","text":"Updated transform_label() helpers.R prioritize exact matches label_mapping exact match found, returns immediately without processing Added automatic removal _r suffix alongside _z suffix reversed variables prevents cases partial pattern matching leave “_r” stray suffix plot labels","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"technical-details-1","dir":"","previous_headings":"2025-08-02: Fixed label mapping for reversed variables in margot_plot()","what":"Technical Details","title":"Development Changelog","text":"issue occurred label_mapping contained base reversed variable names Pattern matching match base pattern, leaving “_r” unprocessed Now exact matches take precedence returned without modification","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"fixed-2","dir":"","previous_headings":"2025-08-02: Fixed handling of reversed variables in margot_plot()","what":"Fixed","title":"Development Changelog","text":"Updated back_transform_estimates() helpers.R properly handle reversed variables _r suffix function now removes _r suffix looking variables original_df Silently skips variables found original_df instead throwing warnings fix aligns margot_interpret_policy() margot_interpret_policy_batch() handle reversed variables","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"overview","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Overview","title":"Development Changelog","text":"Started implementation new modular architecture margot functions proper train/test separation integrated functionality.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"margot_simulate_test_data","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation > Completed Functions","what":"margot_simulate_test_data()","title":"Development Changelog","text":"Creates consistent synthetic datasets known treatment effects Supports positive, negative, null, heterogeneous effect patterns Includes missing data generation censoring indicators Companion function margot_simulate_test_data_flip() testing flip forests Located : R/margot_simulate_test_data.R","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"margot_causal_forest_dev","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation > Completed Functions","what":"margot_causal_forest_dev()","title":"Development Changelog","text":"Replaces margot_causal_forest() cleaner architecture Default 50/50 train/test split (configurable) Optional evaluation forests test set DR scores Integrated missing data handling: complete cases, imputation, forest-based Toy data sampling quick testing (toy_data_prop parameter) Saves components needed downstream analysis Located : R/margot_causal_forest_dev.R","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"margot_qini_dev","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation > Completed Functions","what":"margot_qini_dev()","title":"Development Changelog","text":"Combines margot_qini() margot_interpret_qini() functionality Uses test set honest QINI evaluation Multiple baseline methods automatic fallback Bootstrap inference confidence intervals Comprehensive gain summaries specified spend levels Returns integrated results metrics interpretation Located : R/margot_qini_dev.R","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"margot_plot_qini_dev","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation > Completed Functions","what":"margot_plot_qini_dev()","title":"Development Changelog","text":"Replaces margot_plot_qini() margot_plot_qini_batch() Intelligently handles single multiple models Scale options: average (default), cumulative, population Faceting support multiple outcomes/models Enhanced annotation capabilities Method comparison functionality Located : R/margot_plot_qini_dev.R","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"test-script","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Test Script","title":"Development Changelog","text":"Created test_dev_functions.R demonstrating new workflow Shows data generation, forest fitting, QINI analysis, plotting Includes examples different scales baseline method comparisons","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"documentation","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Documentation","title":"Development Changelog","text":"Created PLANNING.md full architecture overview Lists completed pending components Outlines design principles migration strategy","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"key-improvements","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Key Improvements","title":"Development Changelog","text":"Separation Concerns: Forest fitting separate analysis functions Honest Evaluation: Consistent use test set throughout Integrated Functionality: Related features combined (e.g., QINI + interpretation) Simplified API: Fewer functions clearer purposes Better Missing Data Support: Multiple handling strategies Reproducibility: Consistent seed handling data generation","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"next-steps","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Next Steps","title":"Development Changelog","text":"Implement margot_hetero_dev() heterogeneity analysis Create margot_policy_tree_dev() integrated visualization Develop margot_rate_dev() combining rate functionality Add margot_flip_forests_dev() new architecture","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"breaking-changes","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Breaking Changes","title":"Development Changelog","text":"None - new functions use “_dev” suffix maintain compatibility","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"bug-fixes","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Bug Fixes","title":"Development Changelog","text":"N/- New implementation","code":""},{"path":"https://go-bayes.github.io/margot/CHANGELOG_DEV.html","id":"performance","dir":"","previous_headings":"2025-01-25: New Development Architecture Implementation","what":"Performance","title":"Development Changelog","text":"Toy data sampling allows quick iteration development Evaluation forests computed needed Efficient train/test splitting","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CLAUDE.md","text":"margot package provides functions MARGinal Observational Treatment-effects. streamlines causal inference workflows psychological social scientists, focus evaluating causal assumptions, modelling time-series data, reporting results, performing sensitivity analyses.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"building-and-checking","dir":"","previous_headings":"Common Development Commands","what":"Building and Checking","title":"CLAUDE.md","text":"","code":"# build and check the package devtools::check()  # install the package locally devtools::install()  # build documentation (run after adding/modifying roxygen2 comments) devtools::document()  # run all tests devtools::test()  # run a single test file testthat::test_file(\"tests/test-margot_wide_impute_baseline.R\")  # build pkgdown site pkgdown::build_site()  # check specific aspects devtools::check_man()     # check documentation devtools::check_examples() # check examples run"},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"linting-and-code-quality","dir":"","previous_headings":"Common Development Commands","what":"Linting and Code Quality","title":"CLAUDE.md","text":"","code":"# comprehensive package check devtools::check()  # r cmd check (command line) R CMD check .  # check for common issues devtools::spell_check()   # spell check documentation devtools::check_win_devel() # check on windows development version"},{"path":[]},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"core-components","dir":"","previous_headings":"Package Architecture","what":"Core Components","title":"CLAUDE.md","text":"Handle longitudinal data preparation margot_process_longitudinal_data(): Transform wide format margot_wide_impute_baseline(): Baseline imputation margot_impute_carry_forward(): Carry forward imputation Panel data management utilities margot_causal_forest(): Main causal forest implementation (grf-based) margot_lmtp(): Modified treatment policy estimation margot_policy(): Optimal policy learning Treatment effect engines causal_contrast_*.R Unified plotting interface via margot_plot() margot_plot_qini(): Qini curves treatment prioritisation margot_plot_policy_tree(): Decision tree visualisation margot_plot_tau(): Treatment effect heterogeneity margot_plot_rate(): Rate comparisons Consistent theming via margot_plot_create_options() margot_model_evalue(): E-value sensitivity analysis margot_make_tables(): Comprehensive balance tables margot_bind_tables(): Combine results across models Table formatting utilities here_save(), here_read(): File /O project paths back_transform_*(): Transform variables back original scale pretty_number(): Format numbers display","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"key-design-patterns","dir":"","previous_headings":"Package Architecture","what":"Key Design Patterns","title":"CLAUDE.md","text":"Functions prefixed margot_ exported user-facing functions Internal helper functions prefixed (e.g., helpers.R) functions work data.table internally accept data.frames Parallel processing variants exist computationally intensive operations (e.g., margot_causal_forest_parallel()) Consistent use tidyverse-style programming (dplyr, ggplot2) Extensive use cli package informative user messages Input validation start function Soft deprecation approach API changes (see R/soft-deprecation/)","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"important-dependencies","dir":"","previous_headings":"Package Architecture","what":"Important Dependencies","title":"CLAUDE.md","text":"grf: Generalised random forests causal inference lmtp: Longitudinal modified treatment policies mice: Multiple imputation chained equations policytree: Policy learning visualisation maq: Multi-armed qini curves cli: User messaging progress bars ggplot2: visualisations data.table: Internal data processing","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"data-structure","dir":"","previous_headings":"Package Architecture","what":"Data Structure","title":"CLAUDE.md","text":"package expects longitudinal data wide format time-prefixed variables: - Baseline: t0_variable - Follow-ups: t1_variable, t2_variable, etc. - included df_nz dataset demonstrates expected structure remove df_nz package move Zenodo. Data can now fetched using fetch_margot_data() converted quickstart object using here_read_qs() function. - ID variable named id - Sample weights: sample_weights time-specific weights","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"development-tools-rdev","dir":"","previous_headings":"Package Architecture","what":"Development Tools (R/dev/)","title":"CLAUDE.md","text":"Experimental internal development functions: - simulate_ate_data_with_weights.R: Generate test data - run_simulations.R: Monte Carlo simulations - margot_multi_arm_causal_forest.R: Multi-arm extensions - margot_summary_tables.R: Advanced table generation","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"CLAUDE.md","text":"package licensed CC 4.0 Version numbering follows semantic versioning Documentation built pkgdown Test coverage currently minimal - new functions include tests Many functions support batch processing multiple outcomes/exposures","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"style-and-language-guidelines","dir":"","previous_headings":"","what":"Style and Language Guidelines","title":"CLAUDE.md","text":"Always use new zealand english always use lower case code comments, please","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"task-management","dir":"","previous_headings":"Development Workflow","what":"Task Management","title":"CLAUDE.md","text":"Todo List: Maintain ongoing list tasks completed margot package Completed Work List: Track record completed tasks, milestones, achievements","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"testing-workflow","dir":"","previous_headings":"Development Workflow","what":"Testing Workflow","title":"CLAUDE.md","text":"Default writing unit tests functions using testthat, storing tests folder Use included df_nz dataset testing examples Use fetch_margot_data() get test data Test expected behaviour edge cases Include tests error messages warnings","code":""},{"path":"https://go-bayes.github.io/margot/CLAUDE.html","id":"contributing-guidelines","dir":"","previous_headings":"Development Workflow","what":"Contributing Guidelines","title":"CLAUDE.md","text":"Follow margot_ prefix convention new exported functions Add comprehensive roxygen2 documentation including @examples Use cli::cli_alert_*() user messages Include progress bars long-running operations using cli progressr Write unit tests new functionality Update NEWS.md user-facing changes Run devtools::check() submitting changes ``` lets call fetch data function ‘margot_data_fetch()’","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Development Functions Summary","text":"new development functions successfully created tested. implement cleaner architecture proper train/test separation integrated functionality.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_1-margot_simulate_test_data","dir":"","previous_headings":"Functions Created","what":"1. margot_simulate_test_data()","title":"Development Functions Summary","text":"Generates synthetic panel data known treatment effects Supports multiple effect patterns: positive, negative, null, heterogeneous introduces missing data covariates (treatment/outcomes) per GRF requirements Returns data, true effect functions, metadata","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_2-margot_simulate_test_data_flip","dir":"","previous_headings":"Functions Created","what":"2. margot_simulate_test_data_flip()","title":"Development Functions Summary","text":"Companion function testing flipped outcomes Creates reversed versions specified outcomes (suffix “_r”)","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_3-margot_causal_forest_dev","dir":"","previous_headings":"Functions Created","what":"3. margot_causal_forest_dev()","title":"Development Functions Summary","text":"Clean architecture 50/50 train/test split default Supports evaluation forests test set DR scores (TODO: fix implementation) Handles missing data: complete cases, imputation, let forest handle Toy data sampling quick iteration Returns organized results components needed analysis","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_4-margot_qini_dev","dir":"","previous_headings":"Functions Created","what":"4. margot_qini_dev()","title":"Development Functions Summary","text":"Integrates QINI computation interpretation (separate interpret function) Uses test set honest evaluation Multiple baseline methods: maq_no_covariates, simple, maq_only, auto, none Bootstrap inference confidence intervals Comprehensive gain summaries specified spend levels Returns curves, objects, summaries, metrics one structure","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_5-margot_plot_qini_dev","dir":"","previous_headings":"Functions Created","what":"5. margot_plot_qini_dev()","title":"Development Functions Summary","text":"Handles single multiple models (separate batch function) Scale options: average (default), cumulative, population Flexible faceting multiple outcomes/models Spend markers confidence intervals Enhanced styling labeling","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"id_6-additional-plotting-functions","dir":"","previous_headings":"Functions Created","what":"6. Additional plotting functions:","title":"Development Functions Summary","text":"margot_plot_qini_annotated_dev() - Adds gain annotations spend levels margot_plot_qini_compare_methods_dev() - Compares different baseline methods","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"test-results","dir":"","previous_headings":"","what":"Test Results","title":"Development Functions Summary","text":"functions successfully tested : - 1000 simulated observations - Positive homogeneous effect (Y1) heterogeneous effect (Y2) - 50/50 train/test split - QINI curves computed plotted successfully - Estimated ATEs close true values","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"known-issues","dir":"","previous_headings":"","what":"Known Issues","title":"Development Functions Summary","text":"Evaluation forest DR scores yet properly implemented test set Warning vector length mismatch baseline comparison (harmless) Functions need properly exported (add NAMESPACE via roxygen2)","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"file-locations","dir":"","previous_headings":"","what":"File Locations","title":"Development Functions Summary","text":"R/margot_simulate_test_data.R R/margot_causal_forest_dev.R R/margot_qini_dev.R R/margot_plot_qini_dev.R","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"next-steps","dir":"","previous_headings":"","what":"Next Steps","title":"Development Functions Summary","text":"Run devtools::document() export functions margot_hetero_dev() margot_policy_tree_dev() margot_rate_dev() margot_flip_forests_dev() Fix evaluation forest implementation proper DR scores Add unit tests functions Create vignette demonstrating new workflow","code":""},{"path":"https://go-bayes.github.io/margot/DEV_FUNCTIONS_SUMMARY.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage Example","title":"Development Functions Summary","text":"","code":"# Generate test data test_data <- margot_simulate_test_data(n = 1000, seed = 123)  # Fit forests cf_results <- margot_causal_forest_dev(   data = test_data$data,   outcome_vars = c(\"Y1\", \"Y2\"),   treatment = \"A\" )  # Compute QINI qini_results <- margot_qini_dev(cf_results)  # Plot plot <- margot_plot_qini_dev(qini_results, scale = \"cumulative\")"},{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":null,"dir":"","previous_headings":"","what":"Data License","title":"Data License","text":"© 2024, Curators Margot Package simulated dataset, df_nz, copyrighted curators Margot Package. rights reserved. free : - Share — copy redistribute material medium format following terms: - Attribution — must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. - NonCommercial — may use material commercial purposes. - NoDerivatives — remix, transform, build upon material, may distribute modified material. information, see https://creativecommons.org/licenses/-nc-nd/4.0/ =======================================================================","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":"creative-commons-attribution-noncommercial-noderivatives-40-international-public-license","dir":"","previous_headings":"","what":"Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","title":"Data License","text":"exercising Licensed Rights (defined ), accept agree bound terms conditions Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License (“Public License”). extent Public License may interpreted contract, granted Licensed Rights consideration acceptance terms conditions, Licensor grants rights consideration benefits Licensor receives making Licensed Material available terms conditions. Click full text Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Licensing Information","title":"Licensing Information","text":"YEAR: 2024 COPYRIGHT HOLDER: Joseph . Bulbulia","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"data-license","dir":"","previous_headings":"","what":"Data License","title":"Licensing Information","text":"simulated dataset “df_nz” contained package licensed following terms:","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"custom-data-license","dir":"","previous_headings":"Data License","what":"Custom Data License","title":"Licensing Information","text":"Non-Commercial Use: may use data non-commercial purposes . Commercial use strictly prohibited. Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Redistribution: Redistribution data form, including modified versions, permitted. includes, limited , sharing data public repositories, distributing packaged software, providing third parties. Derivatives: may distribute modified versions data. details, contact authors package.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"code-license","dir":"","previous_headings":"","what":"Code License","title":"Licensing Information","text":"code package licensed Creative Commons Attribution 4.0 International (CC 4.0) license.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"key-terms","dir":"","previous_headings":"Code License","what":"Key Terms:","title":"Licensing Information","text":"Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Sharing Adaptation: free share adapt code, even commercial purposes, provided attribute original author(s) appropriately. Additional Restrictions: may apply legal terms technological measures legally restrict others anything license permits.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"tutorials-license","dir":"","previous_headings":"","what":"Tutorials License","title":"Licensing Information","text":"tutorials provided within package licensed Creative Commons Attribution 4.0 International (CC 4.0) license.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"key-terms-1","dir":"","previous_headings":"Tutorials License","what":"Key Terms:","title":"Licensing Information","text":"Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Sharing Adaptation: free share adapt tutorials, even commercial purposes, provided attribute original author(s) appropriately. Additional Restrictions: may apply legal terms technological measures legally restrict others anything license permits.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"disclaimer-of-warranties-and-limitation-of-liability","dir":"","previous_headings":"","what":"Disclaimer of Warranties and Limitation of Liability","title":"Licensing Information","text":"UNLESS OTHERWISE SEPARATELY UNDERTAKEN LICENSOR, EXTENT POSSIBLE, LICENSOR OFFERS LICENSED MATERIAL --AVAILABLE, MAKES REPRESENTATIONS WARRANTIES KIND CONCERNING LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, . INCLUDES, WITHOUT LIMITATION, WARRANTIES TITLE, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE LATENT DEFECTS, ACCURACY, PRESENCE ABSENCE ERRORS, WHETHER KNOWN DISCOVERABLE. DISCLAIMERS WARRANTIES ALLOWED FULL PART, DISCLAIMER MAY APPLY . EXTENT POSSIBLE, EVENT LICENSOR LIABLE LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OTHERWISE DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, LOSSES, COSTS, EXPENSES, DAMAGES ARISING PUBLIC LICENSE USE LICENSED MATERIAL, EVEN LICENSOR ADVISED POSSIBILITY LOSSES, COSTS, EXPENSES, DAMAGES. LIMITATION LIABILITY ALLOWED FULL PART, LIMITATION MAY APPLY . disclaimer warranties limitation liability provided shall interpreted manner , extent possible, closely approximates absolute disclaimer waiver liability.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Development Architecture Planning","text":"document outlines new development architecture margot functions, moving monolithic approach modular, cleaner design proper train/test separation.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"overview-1","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models","what":"Overview","title":"Development Architecture Planning","text":"Currently, displaying CATEs original data scale requires passing original_df interpretation functions. Phase 2 embed transformation metadata directly model objects, making process robust eliminating need external data.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_1-update-margot_causal_forest-and-margot_flip_forest","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models > Implementation Plan","what":"1. Update margot_causal_forest() and margot_flip_forest()","title":"Development Architecture Planning","text":"Add transformation detection metadata storage:","code":"# When save_data = TRUE, also save transformation info if (save_data) {   output$transformation_info <- detect_transformations(     outcome_vars = outcome_vars,     data = data,     covariates = covariates   ) }"},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_2-transformation-detection-function","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models > Implementation Plan","what":"2. Transformation Detection Function","title":"Development Architecture Planning","text":"Create detect_transformations() analyse outcome variables:","code":"detect_transformations <- function(outcome_vars, data, covariates) {   transform_info <- list()      for (outcome in outcome_vars) {     # Detect transformation type from name     has_z <- grepl(\"_z$\", outcome)     has_log <- grepl(\"_log_\", outcome)          # Find original variable     original_var <- find_original_variable(outcome, data)          # Store metadata based on transformation type     if (has_z && has_log) {       # Compound transformation: log then z       transform_info[[outcome]] <- list(         type = \"log_z\",         original_var = original_var,         original_mean = mean(data[[original_var]], na.rm = TRUE),         original_sd = sd(data[[original_var]], na.rm = TRUE),         log_data = log(data[[original_var]] + 1),         log_mean = mean(log_data, na.rm = TRUE),         log_sd = sd(log_data, na.rm = TRUE),         log_offset = 1       )     } else if (has_z) {       # Simple z-transformation       transform_info[[outcome]] <- list(         type = \"z\",         original_var = original_var,         original_mean = mean(data[[original_var]], na.rm = TRUE),         original_sd = sd(data[[original_var]], na.rm = TRUE)       )     }   }      return(transform_info) }"},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_3-update-margot_policy_tree_stability","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models > Implementation Plan","what":"3. Update margot_policy_tree_stability()","title":"Development Architecture Planning","text":"Preserve transformation metadata stability analysis:","code":"# In the output structure output$transformation_info <- model_results$transformation_info"},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_4-update-interpretation-functions","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models > Implementation Plan","what":"4. Update Interpretation Functions","title":"Development Architecture Planning","text":"Modify margot_interpret_policy_tree() use embedded metadata:","code":"# Check for transformation info in model transform_info <- NULL if (!is.null(model$transformation_info)) {   outcome_name <- sub(\"^model_\", \"\", model_name)   transform_info <- model$transformation_info[[outcome_name]] }  # Use transform_info for inverse transformations # No need for original_df parameter"},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"benefits","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models","what":"Benefits","title":"Development Architecture Planning","text":"Self-contained models: necessary information travels model Robustness: risk mismatched data missing original_df Backwards compatibility: Old models without transformation_info still work Cleaner API: Interpretation functions don’t need original_df parameter Accurate transformations: Metadata captured model creation time","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"timeline","dir":"","previous_headings":"Phase 2 Plan: Transformation Metadata in Causal Forest Models","what":"Timeline","title":"Development Architecture Planning","text":"Phase 1 (completed): Basic functionality original_df parameter Phase 2 (planned): Embed transformation metadata models Migration: Update existing workflows use new functionality","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_1-margot_simulate_test_data-","dir":"","previous_headings":"Completed Components","what":"1. margot_simulate_test_data() ✓","title":"Development Architecture Planning","text":"Creates consistent synthetic datasets testing Supports multiple treatment effect patterns (positive, negative, null, heterogeneous) Includes missing data generation censoring companion function margot_simulate_test_data_flip() flipped outcomes","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_2-margot_causal_forest_dev-","dir":"","previous_headings":"Completed Components","what":"2. margot_causal_forest_dev() ✓","title":"Development Architecture Planning","text":"Implements proper 50/50 train/test split default Supports evaluation forests computing test set DR scores Integrated missing data handling (complete, impute, forest) Toy data sampling capability quick testing Saves necessary components downstream analysis","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_3-margot_qini_dev-","dir":"","previous_headings":"Completed Components","what":"3. margot_qini_dev() ✓","title":"Development Architecture Planning","text":"Computes QINI curves test set honest evaluation Integrates interpretation functionality (separate interpret function needed) Multiple baseline methods automatic fallback Bootstrap inference uncertainty quantification Comprehensive gain summaries metrics","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"id_4-margot_plot_qini_dev-","dir":"","previous_headings":"Completed Components","what":"4. margot_plot_qini_dev() ✓","title":"Development Architecture Planning","text":"Handles single multiple models without separate batch function Multiple scale options (average, cumulative, population) Faceting support multiple outcomes/models Enhanced annotation capabilities Method comparison functionality","code":""},{"path":[]},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_hetero_dev","dir":"","previous_headings":"Pending Components > High Priority","what":"margot_hetero_dev()","title":"Development Architecture Planning","text":"Combines functionality margot_interpret_heterogeneity() Works directly causal forest results Includes visualization heterogeneity patterns Subgroup discovery testing","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_policy_tree_dev","dir":"","previous_headings":"Pending Components > High Priority","what":"margot_policy_tree_dev()","title":"Development Architecture Planning","text":"Integrates policy tree fitting interpretation Handles multi-arm treatments Includes visualization (decision trees, QINI, etc.) separate margot_interpret_policy_tree needed","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_rate_dev","dir":"","previous_headings":"Pending Components > High Priority","what":"margot_rate_dev()","title":"Development Architecture Planning","text":"Combines margot_rate() margot_rate_batch() Supports AUTOC QINI targeting Works test set honest evaluation Integrated plotting capabilities","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_flip_forests_dev","dir":"","previous_headings":"Pending Components > High Priority","what":"margot_flip_forests_dev()","title":"Development Architecture Planning","text":"Maintains flipped forest functionality Adapts new architecture Consistent train/test splits","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_plot_rate_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_plot_rate_dev()","title":"Development Architecture Planning","text":"Visualizes RATE results AUTOC QINI Handles multiple outcomes Consistent plot_qini_dev design","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_plot_policy_tree_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_plot_policy_tree_dev()","title":"Development Architecture Planning","text":"policy tree visualizations one function Decision trees, policy plots, combined views Handles multi-arm binary treatments","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_subgroups_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_subgroups_dev()","title":"Development Architecture Planning","text":"Planned subgroup analysis Integrates forest results Multiple testing corrections","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_subset_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_subset_dev()","title":"Development Architecture Planning","text":"Subset analyses specific populations Maintains train/test consistency Proper inference subsets","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_compare_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_compare_dev()","title":"Development Architecture Planning","text":"Group comparisons Heterogeneity testing across groups Visualization differences","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_ate_dev","dir":"","previous_headings":"Pending Components > Medium Priority","what":"margot_ate_dev()","title":"Development Architecture Planning","text":"Flexible ATE computation Supports various estimands Works evaluation forests","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_bind_dev","dir":"","previous_headings":"Pending Components > Low Priority","what":"margot_bind_dev()","title":"Development Architecture Planning","text":"Combines multiple model runs Maintains metadata consistency Supports different forest specifications","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"margot_plot_tau_dev","dir":"","previous_headings":"Pending Components > Low Priority","what":"margot_plot_tau_dev()","title":"Development Architecture Planning","text":"Treatment effect visualization Individual group-level plots Uncertainty visualization","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"key-design-principles","dir":"","previous_headings":"","what":"Key Design Principles","title":"Development Architecture Planning","text":"Modularity: function clear, focused purpose Integration: Related functionality combined (e.g., qini + interpret) Consistency: Uniform interfaces naming conventions Honesty: Proper train/test separation throughout Flexibility: Support various use cases via parameters Simplicity: Reduced number functions, clearer workflow","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example Workflow","title":"Development Architecture Planning","text":"","code":"# 1. Generate test data data <- margot_simulate_test_data()  # 2. Fit causal forests forests <- margot_causal_forest_dev(   data = data$data,   outcome_vars = c(\"Y1\", \"Y2\", \"Y3\", \"Y4\"),   treatment = \"A\" )  # 3. QINI analysis qini <- margot_qini_dev(forests) plot_qini <- margot_plot_qini_dev(qini)  # 4. Heterogeneity analysis hetero <- margot_hetero_dev(forests)  # 5. Policy trees policy <- margot_policy_tree_dev(forests)  # 6. RATE analysis rate <- margot_rate_dev(forests)"},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"migration-strategy","dir":"","previous_headings":"","what":"Migration Strategy","title":"Development Architecture Planning","text":"new functions “_dev” suffix avoid conflicts Existing functions remain unchanged Documentation clearly indicates functions use Gradual migration users adopt new workflow Eventually deprecate old functions","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"testing-plan","dir":"","previous_headings":"","what":"Testing Plan","title":"Development Architecture Planning","text":"Unit tests new function Integration tests complete workflows Performance benchmarks vs old functions Missing data scenario testing Edge case validation","code":""},{"path":"https://go-bayes.github.io/margot/PLANNING.html","id":"next-steps","dir":"","previous_headings":"","what":"Next Steps","title":"Development Architecture Planning","text":"Continue implementing high-priority components: - margot_hetero_dev() - margot_policy_tree_dev() - margot_rate_dev() - margot_flip_forests_dev() Focus maintaining consistency completed components ensuring smooth integration across ecosystem.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"QINI Implementation Summary","text":"’ve created new QINI implementation margot package follows GRF/MAQ methodology exactly.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"id_1-margot_qini_alternative-in-rmargot_qini_alternativer","dir":"","previous_headings":"Key Functions Created","what":"1. margot_qini_alternative() (in R/margot_qini_alternative.R)","title":"QINI Implementation Summary","text":"Main function compute QINI curves Works existing margot_causal_forest output structure Requires save_data = TRUE (save_models) Uses test set train/test split used Computes CATE curve -priority baseline","code":""},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"id_2-margot_plot_qini_simple-in-rmargot_plot_qini_simpler","dir":"","previous_headings":"Key Functions Created","what":"2. margot_plot_qini_simple() (in R/margot_plot_qini_simple.R)","title":"QINI Implementation Summary","text":"Creates ggplot2 visualizations QINI curves Shows CATE vs baseline optional confidence intervals Works updated results structure","code":""},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"key-design-decisions","dir":"","previous_headings":"","what":"Key Design Decisions","title":"QINI Implementation Summary","text":"complex baseline methods - one baseline: target..covariates = FALSE (-priority assignment) Consistent GRF - Uses exact methodology GRF example Test set usage - Automatically uses test set train/test split performed Updates existing structure - Updates resultsmodelnamemodel_nameqini_objects qini_data","code":""},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage Example","title":"QINI Implementation Summary","text":"","code":"# Run causal forest with required parameters cf_results <- margot_causal_forest(   data = mydata,   outcome_vars = c(\"outcome1\", \"outcome2\"),   covariates = covariates,   W = treatment,   save_data = TRUE,  # Required   use_train_test_split = TRUE )  # Compute QINI curves cf_results <- margot_qini_alternative(cf_results)  # Plot results plot <- margot_plot_qini_simple(   cf_results,   model_name = \"model_outcome1\",   show_ci = TRUE )"},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"technical-notes","dir":"","previous_headings":"","what":"Technical Notes","title":"QINI Implementation Summary","text":"function uses IPW scores computed via maq::get_ipw_scores() CATE curve uses individual treatment effects targeting Baseline represents random allocation (prioritization) Different path lengths CATE baseline handled properly","code":""},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"next-steps","dir":"","previous_headings":"","what":"Next Steps","title":"QINI Implementation Summary","text":"Rename margot_qini_alternative() margot_qini() testing Update existing margot_plot_qini() use new structure Update margot_interpret_qini() simplified approach Update documentation vignettes","code":""},{"path":"https://go-bayes.github.io/margot/QINI_IMPLEMENTATION_SUMMARY.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"QINI Implementation Summary","text":"implementation tested GRF reference implementation produces similar results (differences due random seeds train/test splits).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Margot CRAN Submission Refactoring Plan","text":"Refactor margot reduce Imports 54 ~15 packages maintaining functionality active users. done gradually safely.","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"core-principles","dir":"","previous_headings":"","what":"Core Principles","title":"Margot CRAN Submission Refactoring Plan","text":"breaking changes - current code must continue work Gradual implementation - Small, tested changes Clear error messages - Users know exactly install Lab workflow priority - Teaching research use cases come first","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-1-fix-immediate-cran-blockers-week-1","dir":"","previous_headings":"Implementation Strategy","what":"Phase 1: Fix Immediate CRAN Blockers (Week 1)","title":"Margot CRAN Submission Refactoring Plan","text":"Add missing packages (future.apply, vctrs) DESCRIPTION Run R CMD check verify ERRORs Document current functionality tests","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-2-identify-core-vs-suggested-dependencies-week-2","dir":"","previous_headings":"Implementation Strategy","what":"Phase 2: Identify Core vs Suggested Dependencies (Week 2)","title":"Margot CRAN Submission Refactoring Plan","text":"Audit 54 current dependencies Categorise Core (~15) Suggested (~40) Map functions use packages","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-3-create-infrastructure-week-3","dir":"","previous_headings":"Implementation Strategy","what":"Phase 3: Create Infrastructure (Week 3)","title":"Margot CRAN Submission Refactoring Plan","text":"Implement check_suggests() helper function Add package detection utilities Set testing framework paths","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-4-gradual-function-migration-weeks-4-8","dir":"","previous_headings":"Implementation Strategy","what":"Phase 4: Gradual Function Migration (Weeks 4-8)","title":"Margot CRAN Submission Refactoring Plan","text":"Start least-used functions Add check_suggests() guards one function time Test extensively change Maintain rollback branch","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-5-documentation-and-vignettes-weeks-9-10","dir":"","previous_headings":"Implementation Strategy","what":"Phase 5: Documentation and Vignettes (Weeks 9-10)","title":"Margot CRAN Submission Refactoring Plan","text":"Write vignettes based course workflows Update function documentation Create migration guide users","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-6-testing-and-validation-weeks-11-12","dir":"","previous_headings":"Implementation Strategy","what":"Phase 6: Testing and Validation (Weeks 11-12)","title":"Margot CRAN Submission Refactoring Plan","text":"Run full test suite /without suggested packages Test multiple platforms Validate course examples","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"phase-7-cran-submission-prep-week-13","dir":"","previous_headings":"Implementation Strategy","what":"Phase 7: CRAN Submission Prep (Week 13)","title":"Margot CRAN Submission Refactoring Plan","text":"Final R CMD check –-cran Prepare cran-comments.md Submit win-builder rhub","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"core-dependencies-keep-in-imports","dir":"","previous_headings":"","what":"Core Dependencies (Keep in Imports)","title":"Margot CRAN Submission Refactoring Plan","text":"Based workflow analysis, must stay Imports:","code":"cli, data.table, dplyr, tidyr, purrr, rlang, lifecycle, stats, utils, methods, stringr, lubridate, here, tools, tibble"},{"path":[]},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"estimation-stack","dir":"","previous_headings":"Suggested Dependencies (Move to Suggests)","what":"Estimation Stack","title":"Margot CRAN Submission Refactoring Plan","text":"Note: Rather creating single margot.models meta-package, create focused packages margot.lmtp margot.grf core causal inference methods. Traditional parametric approaches available LMTP comparison purposes.","code":"grf, lmtp, policytree, maq, SuperLearner, clarify, EValue, WeightIt, MatchIt, MatchThem"},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"visualisation-stack","dir":"","previous_headings":"Suggested Dependencies (Move to Suggests)","what":"Visualisation Stack","title":"Margot CRAN Submission Refactoring Plan","text":"","code":"ggplot2, patchwork, ggokabeito, ggeffects, DiagrammeR"},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"reporting-stack","dir":"","previous_headings":"Suggested Dependencies (Move to Suggests)","what":"Reporting Stack","title":"Margot CRAN Submission Refactoring Plan","text":"","code":"gt, gtsummary, flextable, kableExtra, knitr, report, parameters, table1"},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"other","dir":"","previous_headings":"Suggested Dependencies (Move to Suggests)","what":"Other","title":"Margot CRAN Submission Refactoring Plan","text":"","code":"mice, miceadds, naniar, zoo, janitor, cobalt, crayon, doParallel, future, fastDummies, glue, magrittr, tidyverse, future.apply, vctrs, furrr, labelled"},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"helper-function-pattern","dir":"","previous_headings":"","what":"Helper Function Pattern","title":"Margot CRAN Submission Refactoring Plan","text":"","code":"# R/utils-suggests.R check_suggests <- function(pkg, fun = NULL, purpose = NULL) {   if (!requireNamespace(pkg, quietly = TRUE)) {     fun_msg <- if (!is.null(fun)) paste0(\" for \", fun, \"()\") else \"\"     purpose_msg <- if (!is.null(purpose)) paste0(\" (\", purpose, \")\") else \"\"          cli::cli_abort(c(       \"Package {.pkg {pkg}} is required{fun_msg}{purpose_msg}.\",       \"i\" = \"Install it with: {.code install.packages('{pkg}')}\",       \"i\" = \"For causal forest methods: {.code install.packages('margot.grf')}\",       \"i\" = \"For LMTP methods: {.code install.packages('margot.lmtp')}\",       \"i\" = \"For all visualisation packages: {.code install.packages('margot.viz')}\",       \"i\" = \"For all reporting packages: {.code install.packages('margot.report')}\"     ))   } }  # Usage in functions margot_causal_forest <- function(...) {   check_suggests(\"grf\", \"margot_causal_forest\", \"causal forest estimation\")   # ... rest of function }"},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"vignette-structure-based-on-course-workflow","dir":"","previous_headings":"","what":"Vignette Structure (Based on Course Workflow)","title":"Margot CRAN Submission Refactoring Plan","text":"Getting Started - Installation basic setup Data Preparation - Using margot_wide_machine() Causal Forest Analysis - Complete estimation workflow Visualisation - Plots interpretation Reporting - Tables summaries Advanced Topics - Policy learning, subgroup analysis","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"testing-strategy","dir":"","previous_headings":"","what":"Testing Strategy","title":"Margot CRAN Submission Refactoring Plan","text":"Create minimal test environment (Imports ) Create full test environment (packages) Test function environments Automated CI tests configurations","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"rollback-plan","dir":"","previous_headings":"","what":"Rollback Plan","title":"Margot CRAN Submission Refactoring Plan","text":"Tag current version v1.0.100-stable Create refactor branch Keep main branch unchanged fully tested Ability revert change within 24 hours","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"success-metrics","dir":"","previous_headings":"","what":"Success Metrics","title":"Margot CRAN Submission Refactoring Plan","text":"current code continues work R CMD check passes <20 Imports Clear error messages guide package installation Course examples run without modification Lab workflows unaffected","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"timeline","dir":"","previous_headings":"","what":"Timeline","title":"Margot CRAN Submission Refactoring Plan","text":"Start: Today Target completion: 13 weeks CRAN submission: extensive testing","code":""},{"path":"https://go-bayes.github.io/margot/REFACTOR_PLAN.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"Margot CRAN Submission Refactoring Plan","text":"Priority maintaining functionality active users change must tested real workflows Regular check-ins lab users rush - quality speed","code":""},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"why-simulate-longitudinal-data","dir":"Articles","previous_headings":"","what":"1. Why simulate longitudinal data?","title":"Simulating Longitudinal Data","text":"Synthetic panel data known data-generating mechanisms invaluable Teaching: illustrate causal ideas ground truth visible; Software testing: ensure estimators recover truth controlled violations; Power & design: gauge sample-size wave-number requirements; Method development: iterate quickly without large, confidential datasets. margot_simulate() workhorse; sections unpack interface demonstrate common scenarios.","code":""},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"anatomy-of-margot_simulate","dir":"Articles","previous_headings":"","what":"2. Anatomy of margot_simulate()","title":"Simulating Longitudinal Data","text":"simulator draws baseline covariates B, time-varying covariates L, exposures , lead outcomes Y across user-specified number waves. Figure 1 gives high-level schematic. Figure 1: data-generating process underlying margot_simulate(). Solid arrows structural paths; dashed arrows indicate optional feedback loops censoring. Key arguments (non-exhaustive): default coefficient set returned .default_sim_params(). Supply named list params argument override subset.","code":"# build a toy DAG with DiagrammeR for illustration only (not evaluated when package is built) if (requireNamespace(\"DiagrammeR\", quietly = TRUE)) {   DiagrammeR::grViz(     \"digraph {graph [rankdir = LR, bgcolor = none]       node [shape = box, fontname = Helvetica]       subgraph cluster0 {label = \\\"Wave 0\\\"; style = dashed; B; t0_L;}       subgraph cluster1 {label = \\\"Wave 1\\\"; style = dashed; t1_A; t1_L; t1_Y;}       subgraph cluster2 {label = \\\"Wave 2\\\"; style = dashed; t2_A; t2_L; t2_Y;}       B -> t1_L -> t1_A -> t1_Y       B -> t1_A       t1_Y -> t2_A [style = dashed]  // optional y_feedback       t1_A -> t2_L [style = dashed]  // covar_feedback       t1_A -> censor1 [style = dashed]       censor1 [shape = circle, label = \\\"C\\\"]     }\"   ) }"},{"path":[]},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"baseline-simple-continuous-outcome","dir":"Articles","previous_headings":"3. Worked examples","what":"3.1 Baseline: simple continuous outcome","title":"Simulating Longitudinal Data","text":"","code":"# generate data in wide format (default) basic_dat <- margot_simulate(n = 500, waves = 3, seed = 2025)  # examine structure str(basic_dat[, 1:10]) #> tibble [500 × 10] (S3: tbl_df/tbl/data.frame) #>  $ id: int [1:500] 1 2 3 4 5 6 7 8 9 10 ... #>  $ B1: num [1:500] -0.792 1.332 -0.245 -1.159 -1.712 ... #>  $ B2: num [1:500] 0.73 -1.733 0.283 -1.453 -0.11 ... #>  $ B3: num [1:500] 0.306 -2.069 -1.352 -2.105 -1.475 ... #>  $ B4: num [1:500] -0.647 0.231 -1.929 -0.545 0.299 ... #>  $ B5: num [1:500] -0.376 -0.302 -1.994 -0.312 -0.3 ... #>  $ B6: num [1:500] -0.201 -0.427 -0.402 -0.418 0.278 ... #>  $ B7: num [1:500] 0.128 1.205 -0.959 -1.054 -2.097 ... #>  $ B8: num [1:500] 0.206 0.174 -0.49 -0.459 0.583 ... #>  $ B9: num [1:500] -1.0513 0.0444 0.6933 0.0259 -0.7786 ... #>  - attr(*, \"margot_meta\")=List of 2 #>   ..$ args     : language margot_simulate(n = 500, waves = 3, seed = 2025) #>   ..$ timestamp: POSIXct[1:1], format: \"2025-10-03 00:11:57\"  # summarize treatment and outcome summary(basic_dat[c(\"t1_A1\", \"t2_A1\", \"t3_A1\", \"t4_Y\")]) #>      t1_A1            t2_A1            t3_A1             t4_Y         #>  Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :-2.4453   #>  1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:-0.5044   #>  Median :0.0000   Median :0.0000   Median :0.0000   Median : 0.1533   #>  Mean   :0.4423   Mean   :0.4652   Mean   :0.3641   Mean   : 0.1401   #>  3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.: 0.9146   #>  Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   : 2.7243   #>  NA's   :136      NA's   :227      NA's   :305      NA's   :363"},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"heterogeneous-treatment-effects-effect-modification","dir":"Articles","previous_headings":"3. Worked examples","what":"3.2 Heterogeneous treatment effects (effect modification)","title":"Simulating Longitudinal Data","text":"Suppose causal effect exposure A1 varies baseline covariate B2. encode via het sub-list: Verify interaction: Take-away. interaction term (t3_A1:B2) recovers$\\\\beta_{\\\\text{het}} \\\\approx 0.6$, matching data-generating value.","code":"het_dat <- margot_simulate(   n        = 4000,   waves    = 3,   exposures = list(     A1 = list(       type = \"binary\",       het  = list(modifier = \"B2\",  # effect modifier                   coef     = 0.6)    # γ: interaction strength     )   ),   exposure_outcome = 0.4,  # marginal main effect β   seed = 2027 ) fit_het <- lm(t4_Y ~ t3_A1 * B2, data = het_dat) summary(fit_het)$coefficients #>               Estimate Std. Error    t value     Pr(>|t|) #> (Intercept) 0.01650478 0.03845638  0.4291819 6.678640e-01 #> t3_A1       0.42220419 0.05588604  7.5547343 8.019120e-14 #> B2          0.07359943 0.03916117  1.8793981 6.042006e-02 #> t3_A1:B2    0.72038968 0.05588497 12.8905800 8.232715e-36"},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"outcome-treatment-feedback","dir":"Articles","previous_headings":"3. Worked examples","what":"3.3 Outcome → Treatment feedback","title":"Simulating Longitudinal Data","text":"Realistic behavioural processes often exhibit reflexivity: past outcomes influence future treatment uptake. Let’s compare simulations without y_feedback: Let’s examine y_feedback affects treatment patterns: Visualise treatment rates across waves:  Note: y_feedback parameter affects past outcomes influence future treatment assignment. specific pattern depends interaction outcome values, baseline covariates, simulation parameters. practice, y_feedback creates time-varying confounding making treatment assignment depend past outcomes.","code":"# Without feedback no_fb_dat <- margot_simulate(   n          = 2000,   waves      = 5,   y_feedback = 0,     # no Y → A dependency   wide       = TRUE,   seed       = 101 )  # With feedback fb_dat <- margot_simulate(   n           = 2000,   waves       = 5,   y_feedback  = 0.8,   # strong Y → A dependency   params      = list(exp_L1_coef = 0.3), # optional A → L feedback   wide        = TRUE,   seed        = 101 ) # Calculate treatment rates for both datasets get_treatment_rates <- function(data, label) {   data %>%     select(starts_with(\"t\") & ends_with(\"_A1\")) %>%     summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%     tidyr::pivot_longer(       cols = everything(),       names_to = \"wave_var\",       values_to = \"prop_treated\"     ) %>%     mutate(       wave = as.numeric(sub(\"t([0-9]+)_A1\", \"\\\\1\", wave_var)),       feedback = label     ) }  # Combine rates from both simulations combined_rates <- bind_rows(   get_treatment_rates(no_fb_dat, \"No feedback\"),   get_treatment_rates(fb_dat, \"With feedback (0.8)\") )  # Display the comparison combined_rates %>%   filter(wave > 0) %>%   tidyr::pivot_wider(names_from = feedback, values_from = prop_treated) %>%   arrange(wave) #> # A tibble: 5 × 4 #>   wave_var  wave `No feedback` `With feedback (0.8)` #>   <chr>    <dbl>         <dbl>                 <dbl> #> 1 t1_A1        1         0.444                 0.444 #> 2 t2_A1        2         0.458                 0.447 #> 3 t3_A1        3         0.452                 0.438 #> 4 t4_A1        4         0.438                 0.424 #> 5 t5_A1        5         0.477                 0.456 # Plot comparison ggplot(combined_rates %>% filter(wave > 0),         aes(x = wave, y = prop_treated, color = feedback, group = feedback)) +   geom_line(linewidth = 1.2) +   geom_point(size = 3) +   labs(     title = \"Treatment Assignment Rates Across Waves\",     subtitle = \"Comparing simulations with and without outcome feedback\",     x = \"Wave\",     y = \"Proportion Treated\",     color = \"Simulation\"   ) +   theme_minimal() +   scale_y_continuous(limits = c(0, 1)) +   scale_color_manual(values = c(\"No feedback\" = \"darkgray\",                                  \"With feedback (0.8)\" = \"steelblue\"))"},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"positivity-diagnostics","dir":"Articles","previous_headings":"","what":"3.4 Positivity diagnostics","title":"Simulating Longitudinal Data","text":"Estimators grounded g-formula, IPW, TMLE require sufficient overlap (positivity) treatment probabilities across strata measured covariates. inspect estimated propensity scores final observed wave heterogeneous-effects example.","code":"# wave-3 propensity model: A1 ~ B2 # Filter to complete cases for this analysis het_complete <- het_dat %>%   filter(!is.na(t3_A1) & !is.na(B2))  ps_mod <- glm(t3_A1 ~ B2, family = binomial, data = het_complete) het_complete$ps3 <- predict(ps_mod, type = \"response\")  ggplot(het_complete, aes(ps3, fill = factor(t3_A1))) +   geom_histogram(position = \"identity\", alpha = 0.4, bins = 30) +   labs(     x    = \"estimated propensity score\",     fill = \"A1 at wave 3\"   ) +   theme_minimal()"},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"censoring-missingness","dir":"Articles","previous_headings":"","what":"4. Censoring & missingness","title":"Simulating Longitudinal Data","text":"Attrition can depend exposure, latent frailty shared within individuals, . brevity, see dedicated Censoring vignette.","code":""},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"power-analysis-template","dir":"Articles","previous_headings":"","what":"5. Power analysis template","title":"Simulating Longitudinal Data","text":"Combined heterogeneity feedback can inflate sample-size requirements. Use batched simulations trace operating characteristics; skeleton:","code":"power_grid <- tibble::tibble(N = seq(500, 5000, by = 500))  power_grid$power <- vapply(power_grid$N, function(n) {   mean(replicate(300, {     dat <- margot_simulate(n = n, waves = 4,                            y_feedback = 0.7,                            exposures = list(A1 = list(type = \"binary\",                                                       het = list(modifier = \"B1\", coef = 0.5))),                            exposure_outcome = 0.3, wide = TRUE))     t.test(t5_Y ~ t3_A1, data = dat)$p.value < 0.05   })) }, numeric(1))  ggplot(power_grid, aes(N, power)) +   geom_line() +   geom_hline(yintercept = 0.8, linetype = \"dashed\") +   scale_y_continuous(labels = scales::percent_format()) +   labs(y = \"Power\", x = \"Sample size\")"},{"path":"https://go-bayes.github.io/margot/articles/margot-simulation.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"6. Further reading","title":"Simulating Longitudinal Data","text":"Hernán & Robins (2020) — Causal Inference: . Daniel et al. (2013) — methods time-varying confounding. Happy simulating — remember set seed.","code":""},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting Started with Margot","text":"vignette introduces key components margot package causal inference longitudinal data. package provides tools three main stages: Data Preparation: Converting longitudinal data wide format Causal Inference: Estimating treatment effects using causal forests Interpretation: Visualising understanding results","code":""},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with Margot","text":"margot package modular design. Install need:","code":"# core package (data manipulation and basic functions) install.packages(\"margot\")  # for causal inference models (optional) install.packages(c(\"grf\", \"lmtp\", \"policytree\", \"maq\"))  # for visualisation (optional) install.packages(c(\"ggplot2\", \"patchwork\", \"ggokabeito\"))  # for reporting tables (optional) install.packages(c(\"gt\", \"gtsummary\", \"flextable\"))  # or install everything at once (future) # install.packages(\"margot.models\")  # all estimation packages # install.packages(\"margot.viz\")     # all visualisation packages # install.packages(\"margot.report\")  # all reporting packages"},{"path":[]},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"loading-and-exploring-data","dir":"Articles","previous_headings":"Stage 1: Data Preparation","what":"Loading and Exploring Data","title":"Getting Started with Margot","text":"","code":"library(margot) library(dplyr)  # the package includes example data data(df_nz)  # define variable groups baseline_vars <- c(   \"male\", \"age\", \"eth_cat\", \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",    \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- \"forgiveness\"  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",    \"hours_exercise\", \"hours_work\", \"life_satisfaction\" )"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"converting-to-wide-format","dir":"Articles","previous_headings":"Stage 1: Data Preparation","what":"Converting to Wide Format","title":"Getting Started with Margot","text":"margot_wide_machine() function handles complete data preparation pipeline:","code":"# prepare data for causal inference wide_data <- margot_wide_machine(   data = df_nz,   baseline_vars = baseline_vars,   exposure_var = exposure_var,   outcome_vars = outcome_vars )  # check the structure str(wide_data)"},{"path":[]},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"estimating-treatment-effects","dir":"Articles","previous_headings":"Stage 2: Causal Inference","what":"Estimating Treatment Effects","title":"Getting Started with Margot","text":"","code":"# run causal forest (requires grf package) results <- margot_causal_forest(   data = wide_data,   exposure = exposure_var,   outcomes = outcome_vars,   baseline_vars = baseline_vars,   weights = \"sample_weights\" )"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"screening-for-heterogeneity","dir":"Articles","previous_headings":"Stage 2: Causal Inference","what":"Screening for Heterogeneity","title":"Getting Started with Margot","text":"","code":"# identify which outcomes show treatment effect heterogeneity heterogeneity_results <- margot_rate(results)"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"policy-learning","dir":"Articles","previous_headings":"Stage 2: Causal Inference","what":"Policy Learning","title":"Getting Started with Margot","text":"","code":"# learn optimal treatment policies policy_results <- margot_policy(   results,   outcomes = outcome_vars,   baseline_vars = baseline_vars )"},{"path":[]},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"visualising-treatment-effects","dir":"Articles","previous_headings":"Stage 3: Interpretation and Visualisation","what":"Visualising Treatment Effects","title":"Getting Started with Margot","text":"","code":"# plot average treatment effects (requires ggplot2) margot_plot(   results,   type = \"effects\",   title = \"Average Treatment Effects of Forgiveness\" )  # create table output (requires gt) margot_plot(   results,   type = \"table\",   format = \"publication\" )"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"understanding-heterogeneity","dir":"Articles","previous_headings":"Stage 3: Interpretation and Visualisation","what":"Understanding Heterogeneity","title":"Getting Started with Margot","text":"","code":"# visualise policy trees margot_plot_policy_tree(   policy_results,   outcome = \"hours_exercise\" )  # plot qini curves margot_plot_qini(   policy_results,   outcome = \"hours_exercise\" )"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"working-with-missing-packages","dir":"Articles","previous_headings":"","what":"Working with Missing Packages","title":"Getting Started with Margot","text":"haven’t installed optional packages, margot provides helpful error messages:","code":"# example: trying to use causal forest without grf installed # margot_causal_forest(wide_data) # Error: Package 'grf' is required for margot_causal_forest() (causal forest estimation). # Install it with: install.packages('grf') # For all estimation packages: install.packages('margot.models')"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"simulating-data-for-testing","dir":"Articles","previous_headings":"","what":"Simulating Data for Testing","title":"Getting Started with Margot","text":"margot_simulate() function allows generate synthetic longitudinal data known treatment effects:","code":"# simulate data with known treatment effect sim_data <- margot_simulate(   n = 500,                    # 500 individuals   waves = 3,                  # 3 time points   p_covars = 2,               # 2 time-varying covariates   exposure_outcome = 0.6,     # true treatment effect   positivity = \"good\",        # well-behaved propensity scores   outcome_type = \"continuous\",# continuous outcomes   wide = TRUE,                # return wide format   seed = 123                  # for reproducibility )  # simulate with treatment feedback and censoring complex_sim <- margot_simulate(   n = 1000,   waves = 5,   y_feedback = 0.5,           # past outcome affects future treatment   covar_feedback = 0.3,       # treatment affects future covariates   censoring = list(     rate = 0.2,     exposure_dependence = TRUE # censoring depends on treatment   ),   seed = 456 )"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example Analysis","title":"Getting Started with Margot","text":"’s minimal example get started:","code":"# load packages library(margot) library(dplyr)  # prepare data data(df_nz)  # define variables baseline_vars <- c(\"male\", \"age\", \"partner\") exposure_var <- \"forgiveness\" outcome_vars <- c(\"hours_exercise\")  # run complete pipeline wide_data <- margot_wide_machine(   df_nz, baseline_vars, exposure_var, outcome_vars )  # estimate effects (requires grf) if (requireNamespace(\"grf\", quietly = TRUE)) {   results <- margot_causal_forest(     wide_data, exposure_var, outcome_vars, baseline_vars   )      # extract and view the average treatment effect   ate <- results$ate   cat(\"Average Treatment Effect:\", round(ate$estimate, 3), \"\\n\")   cat(\"95% CI: [\", round(ate$ci_lower, 3), \",\", round(ate$ci_upper, 3), \"]\\n\")      # visualise if ggplot2 is available   if (requireNamespace(\"ggplot2\", quietly = TRUE)) {     margot_plot(results, type = \"effects\")   } } else {   message(\"Install the 'grf' package to run causal forest analysis\") }"},{"path":"https://go-bayes.github.io/margot/articles/margot-workflow.html","id":"further-resources","dir":"Articles","previous_headings":"","what":"Further Resources","title":"Getting Started with Margot","text":"Package documentation: https://go-bayes.github.io/margot/ GitHub repository: https://github.com/go-bayes/margot Course materials: https://go-bayes.github.io/psych-434-2025/","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). margot: MARGinal Observational Treatment-effects. doi:10.5281/zenodo.10907724, R package version 1.0 Functions obtain MARGinal Observational Treatment-effects observational data., https://go-bayes.github.io/margot/.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 1.0 Functions to obtain MARGinal Observational Treatment-effects from observational data.},   url = {https://go-bayes.github.io/margot/},   doi = {10.5281/zenodo.10907724}, }"},{"path":"https://go-bayes.github.io/margot/index.html","id":"margot","dir":"","previous_headings":"","what":"MARGinal Observational Treatment-effects","title":"MARGinal Observational Treatment-effects","text":"⚠️ IMPORTANT NOTICE: development version margot package undergoing significant refactoring transition margotverse suite packages. package currently author’s lab use . package split focused, single-responsibility packages including margot.core, margot.lmtp, margot.grf, margot.viz, others. Please expect breaking changes upcoming releases. MARGinal Observational Treatment-effects.1 Causal inference requires balance across treatments compared. observational studies, balance guaranteed; quantifying causality therefore requires careful, multi-step workflows. goal margot enhance understanding causality observational research. package offers functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses streamlining estimation (Marginal) Average Treatment Effects (ATT, ATE), also supports workflows Heterogeneous Treatment Effects (CATE) (estimated via grf), well Longitudinal Modified Treatment Policies (estimated via lmtp). extensive graphical reporting functions ease burdens understanding.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"highlevel-package-map-","dir":"","previous_headings":"","what":"high‑level package map ———————————————–","title":"summary —————————————————————","text":"margotverse_map <- list( margot.core = c(“panel data class”, “coercion + validation”), margot.wrangle = c(“long‑‑wide”, “missing data tags”), margot.sim = c(“data‑generating mechanisms”, “diagnostic plots”), margot.lmtp = c(“batch lmtp estimators”, “assumption checks”), # margot.grf = c(“batch causal & policy forests”, “effect heterogeneity”), # margot.viz = c(“graphs, tables, text”, “tidy presentation”), margot.report= c(“boilerplate templates”, “quarto helpers”), margotverse = c(“meta‑package umbrella”, “imports ”) )","code":""},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"helper-create-a-skeleton-subpackage-","dir":"","previous_headings":"","what":"helper: create a skeleton sub‑package ———————————","title":"summary —————————————————————","text":"setup_subpackage <- function(path, licence = “MIT”, open = FALSE) { # creates bare package using usethis ——————————- (!requireNamespace(“usethis”, quietly = TRUE)) stop(“install usethis first”) usethis::create_package(path, open = open) # usethis::use_mit_license(“Joseph .Bulbulia”) usethis::use_git() usethis::use_github(repo_spec = paste0(“go-bayes/”, basename(path))) # initialise renv isolated deps ———————————- renv::init(bare = TRUE) # # add standard ci, pkgdown ——————————————- usethis::use_github_action_check_standard() usethis::use_pkgdown() }","code":""},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"helper-declare-common-imports-","dir":"","previous_headings":"","what":"helper: declare common imports —————————————","title":"summary —————————————————————","text":"add_core_dep <- function(pkg_path) { desc <- file.path(pkg_path, “DESCRIPTION”) usethis::use_package(“margot.core”, type = “Imports”, pkg = pkg_path) usethis::use_package(“rlang”, type = “Imports”, pkg = pkg_path) }","code":""},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"define-the-shared-s3-class--","dir":"","previous_headings":"","what":"define the shared s3 class ——————————————-","title":"summary —————————————————————","text":"#’ construct margot_panel object #’ @param data data.frame long format #’ @param id unit identifier #’ @param time time index #’ @return object class margot_panel margot_panel <- function(data, id, time) { stopifnot((c(id, time) %% names(data))) structure( data, id_col = id, time_col = time, class = c(“margot_panel”, class(data)) ) }","code":""},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"method-convert-to-wide--","dir":"","previous_headings":"","what":"method: convert to wide ———————————————-","title":"summary —————————————————————","text":"as_wide.margot_panel <- function(x, keep_ids = TRUE) { tidyr::pivot_wider( x, id_cols = attr(x, “id_col”), names_from = attr(x, “time_col”), values_fn = dplyr::first ) }","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"inside-each-analysis-repo-create-_targetsr","dir":"","previous_headings":"","what":"inside each analysis repo create _targets.R","title":"summary —————————————————————","text":"write_targets_template <- function(path = “analysis/_targets.R”) { lines <- c( “library(targets)”, “library(margot.lmtp)”, # bring estimators “tar_option_set(packages = c(‘margot.core’, ‘margot.wrangle’))”, ““,”list(“,” tar_target(raw, readr::read_csv(‘data/panel.csv’)),“,” tar_target(panel, margot_panel(raw, id = ‘participant’, time = ‘wave’)),“,” tar_target(wide, as_wide.margot_panel(panel)),“,” tar_target(lmtp_res, batch_lmtp(wide, spec_file = ‘analysis/spec.yml’))“,”)” ) dir.create(dirname(path), recursive = TRUE, showWarnings = FALSE) writeLines(lines, path) } # batch wrappers ——————————————————– batch_lmtp <- function(data, spec_file) { # iterate interventions defined yaml, fit lmtp parallel – spec <- yaml::read_yaml(spec_file) future.apply::future_lapply( spec$interventions,     \\(pol) lmtp::lmtp_tmle(data = data, shift = pol$fn, = polA,Y=polA, Y = polY) ) } batch_grf <- function(data, treat, outcome, covars) { forest <- grf::causal_forest( X = data[covars], Y = data[[outcome]], W = data[[treat]] ) grf::predict(forest)$predictions }","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"metapackage-assembly--","dir":"","previous_headings":"","what":"meta‑package assembly ————————————————-","title":"summary —————————————————————","text":"build_margotverse <- function() { (!requireNamespace(“usethis”, quietly = TRUE)) stop(“usethis needed”) usethis::create_package(“margotverse”, open = FALSE) # usethis::use_description(fields = list( Title = “margotverse”, Description = “family packages longitudinal causal inference.” )) # import child package expose nothing; user attaches meta‑pkg (pkg names(margotverse_map)[-length(margotverse_map)]) { usethis::use_package(pkg, type = “Imports”, pkg = “margotverse”) } # convenience re‑exports usethis::use_package(“magrittr”, type = “Imports”, pkg = “margotverse”) cat(“margotverse skeleton created – remember add pkgdown site.”) }","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/margotverse-plan.html","id":"run-this-occasionally-in-each-repo-to-drop-unused-imports-","dir":"","previous_headings":"","what":"run this occasionally in each repo to drop unused imports ———–","title":"summary —————————————————————","text":"renv_clean <- function() renv::dependencies() #","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/analyse_concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze concordance between methods — analyse_concordance","title":"Analyze concordance between methods — analyse_concordance","text":"Analyze concordance methods","code":""},{"path":"https://go-bayes.github.io/margot/reference/analyse_concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze concordance between methods — analyse_concordance","text":"","code":"analyse_concordance(evidence_summary)"},{"path":"https://go-bayes.github.io/margot/reference/analyze_concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze concordance between methods — analyze_concordance","title":"Analyze concordance between methods — analyze_concordance","text":"Analyze concordance methods","code":""},{"path":"https://go-bayes.github.io/margot/reference/analyze_concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze concordance between methods — analyze_concordance","text":"","code":"analyze_concordance(evidence_summary)"},{"path":"https://go-bayes.github.io/margot/reference/apply_covariate_exclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply covariate exclusions (copied from margot_recalculate_policy_trees.R) — apply_covariate_exclusions","title":"Apply covariate exclusions (copied from margot_recalculate_policy_trees.R) — apply_covariate_exclusions","text":"Apply covariate exclusions (copied margot_recalculate_policy_trees.R) Apply covariate exclusions","code":""},{"path":"https://go-bayes.github.io/margot/reference/apply_covariate_exclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply covariate exclusions (copied from margot_recalculate_policy_trees.R) — apply_covariate_exclusions","text":"","code":"apply_covariate_exclusions(covariates, exclude_patterns, verbose = TRUE)  apply_covariate_exclusions(covariates, exclude_patterns, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/average_gain.qini_simple_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Average Gain for Simple Baseline — average_gain.qini_simple_baseline","title":"Compute Average Gain for Simple Baseline — average_gain.qini_simple_baseline","text":"Compute Average Gain Simple Baseline","code":""},{"path":"https://go-bayes.github.io/margot/reference/average_gain.qini_simple_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Average Gain for Simple Baseline — average_gain.qini_simple_baseline","text":"","code":"average_gain.qini_simple_baseline(object, spend, ...)"},{"path":"https://go-bayes.github.io/margot/reference/average_gain.qini_simple_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Average Gain for Simple Baseline — average_gain.qini_simple_baseline","text":"object qini_simple_baseline object spend spend level (proportion treated) ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/average_gain.qini_simple_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Average Gain for Simple Baseline — average_gain.qini_simple_baseline","text":"list estimate std.err","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"function takes z-scores transforms back original values data originally log-transformed. performs two-step transformation: first converting z-scores back log values using log-scale mean standard deviation, exponentiating return original scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"","code":"back_transform_log_z(z_scores, log_mean, log_sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"z_scores numeric value vector z-scores transformed back original scale. log_mean mean log-transformed dataset z-scores calculated. log_sd standard deviation log-transformed dataset z-scores calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"","code":"# Given log-transformed data with log_mean = 1.5 and log_sd = 0.5 original_value <- back_transform_log_z(z_scores = 1.2, log_mean = 1.5, log_sd = 0.5) print(original_value) #> [1] 8.16617  # Multiple z-scores can be transformed at once z_scores <- c(-1, 0, 1, 2) original_values <- back_transform_log_z(z_scores = z_scores, log_mean = 1.5, log_sd = 0.5) print(original_values) #> [1]  2.718282  4.481689  7.389056 12.182494  # Real-world example: back-transforming household income z-scores # Get mean and sd from original log-transformed data log_mean_inc <- mean(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found log_sd_inc <- sd(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found  # Back-transform all z-scores in the dataset original_data_scale <- back_transform_log_z(   df_grf$t0_log_household_inc_z,   log_mean = log_mean_inc,   log_sd = log_sd_inc ) #> Error: object 'df_grf' not found head(original_data_scale) #> Error: object 'original_data_scale' not found  # Interpret key points on the distribution (-1 SD, mean, +1 SD) z_scores <- c(-1, 0, 1) scale_values <- back_transform_log_z(   z_scores,   log_mean = log_mean_inc,   log_sd = log_sd_inc ) #> Error: object 'log_mean_inc' not found  # Create a data frame to display the relationship between z-scores and original values results_df <- data.frame(   z_score = z_scores,   data_scale = scale_values ) #> Error: object 'scale_values' not found print(results_df) # Shows what values on the original scale correspond to each z-score #> Error: object 'results_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Back-transform Log-transformed Mean — back_transform_logmean","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"Back-transforms log-transformed mean (using log(x + 1) transformation) original scale. utility function useful interpreting results original data transformed using log(x + 1) handle zero values normalize distribution data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"back_transform_logmean(log_mean)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"log_mean mean log scale, original data transformed using log(x + 1).","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"list containing mean original scale (`mean_original`). standard deviation back-transformed function due complexity introduced log(x + 1) transformation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"log_mean <- 1.098612 # true mean is 2. We add + 1 to the log to handle zero: log(2+1) = log(3) back_transformed_result <- back_transform_logmean(log_mean) print(back_transformed_result) #> $mean_original #> [1] 1.999999 #>"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Scale — back_transform_zscore","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"function takes z-score transforms back original scale using specified mean standard deviation original data. Often, standardization applied original scale values needed interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"back_transform_zscore(z, mean, sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"z numeric value vector z-scores transformed back original scale. mean mean original dataset z-score calculated. sd standard deviation original dataset z-score calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"# Given a dataset with mean = 100 and sd = 15 original_value <- back_transform_zscore(z = 1.5, mean = 100, sd = 15) print(original_value) #> [1] 122.5  # Multiple z-scores can be transformed at once z_scores <- c(-1, 0, 1, 2) original_values <- back_transform_zscore(z = z_scores, mean = 50, sd = 10) print(original_values) #> [1] 40 50 60 70"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_variables()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"","code":"boilerplate_measures(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_variables(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_methods()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"","code":"boilerplate_methods(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_methods(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"`r lifecycle::badge(\"deprecated\")` Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_additional_sections` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"","code":"boilerplate_methods_additional_sections(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_causal_interventions()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"","code":"boilerplate_methods_causal_interventions(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_causal_interventions(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_confounding_control()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"","code":"boilerplate_methods_confounding_control(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_confounding_control(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_eligibility_criteria()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"","code":"boilerplate_methods_eligibility_criteria(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_eligibility_criteria(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_identification_assumptions()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"","code":"boilerplate_methods_identification_assumptions(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_identification_assumptions(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_missing_data()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"","code":"boilerplate_methods_missing_data(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_missing_data(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_sample()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"","code":"boilerplate_methods_sample(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_sample(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_statistical_estimator()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"","code":"boilerplate_methods_statistical_estimator(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_statistical_estimator(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_target_population()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"","code":"boilerplate_methods_target_population(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_target_population(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_variables()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"","code":"boilerplate_methods_variables(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_variables(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/bootstrap_single_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap analysis for a single model — bootstrap_single_model","title":"Bootstrap analysis for a single model — bootstrap_single_model","text":"Bootstrap analysis single model","code":""},{"path":"https://go-bayes.github.io/margot/reference/bootstrap_single_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap analysis for a single model — bootstrap_single_model","text":"","code":"bootstrap_single_model(   model_result,   model_name,   covariates,   not_missing,   custom_covariates,   exclude_covariates,   covariate_mode,   n_bootstrap,   vary_type,   depths,   actual_train_props,   all_seeds,   consensus_threshold,   return_consensus_trees,   label_mapping,   verbose,   seed,   tree_method )"},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Margot plot — build_margot_plot","title":"Build Margot plot — build_margot_plot","text":"Build Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Margot plot — build_margot_plot","text":"","code":"build_margot_plot(   .data,   type,   options,   include_coefficients,   standardize_label )"},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Margot plot — build_margot_plot","text":".data Prepared data frame type Type effect (RD RR) options Options list include_coefficients Whether include coefficient text standardize_label Type standardization label (NZ, US, none)","code":""},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Margot plot — build_margot_plot","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/calculate_covariate_balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate covariate balance — calculate_covariate_balance","title":"Calculate covariate balance — calculate_covariate_balance","text":"Calculate covariate balance","code":""},{"path":"https://go-bayes.github.io/margot/reference/calculate_covariate_balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate covariate balance — calculate_covariate_balance","text":"","code":"calculate_covariate_balance(covariates, W, W_hat, top_vars = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/calculate_overlap_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate overlap statistics — calculate_overlap_statistics","title":"Calculate overlap statistics — calculate_overlap_statistics","text":"Calculate overlap statistics","code":""},{"path":"https://go-bayes.github.io/margot/reference/calculate_overlap_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate overlap statistics — calculate_overlap_statistics","text":"","code":"calculate_overlap_statistics(W, W_hat, exposure_name)"},{"path":"https://go-bayes.github.io/margot/reference/calculate_trimming_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate trimming summary — calculate_trimming_summary","title":"Calculate trimming summary — calculate_trimming_summary","text":"Calculate trimming summary","code":""},{"path":"https://go-bayes.github.io/margot/reference/calculate_trimming_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate trimming summary — calculate_trimming_summary","text":"","code":"calculate_trimming_summary(W_hat, bounds = c(0.05, 0.95))"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Causal Contrasts — causal_contrast_engine","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Estimates causal contrasts using generalized linear models different types treatment effects (ATE, ATT) outcomes (RR, RD). Supports handling multiply imputed datasets allows flexibility model specification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Causal Contrasts — causal_contrast_engine","text":"","code":"causal_contrast_engine(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Causal Contrasts — causal_contrast_engine","text":"df Data frame `mids` object containing data. Y Response variable name string. X Treatment exposure variable name string. baseline_vars Vector baseline covariate names. treat_0 Reference level treatment variable. treat_1 Treatment level interest comparison. estimand Type causal estimand (\"ATE\", \"ATT\"); defaults . type Type effect size (\"RR\" Risk Ratio, \"RD\" Risk Difference); defaults . nsims Number simulations bootstrap; defaults 200. cores Number cores parallel processing; uses available cores default. family Model family string family object; defaults \"gaussian\". weights name weights variable data frame, NULL weights used. continuous_X Whether X continuous variable; defaults FALSE. splines Whether apply spline transformation X; defaults FALSE. vcov Type variance-covariance matrix standard error estimation; defaults \"HC2\". verbose Whether print detailed output; defaults FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Depending configuration, returns summary object containing estimated causal contrasts, confidence intervals, potentially diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"function estimates average treatment effect (ATE) average treatment effect treated (ATT) using generalized linear models (GLMs). supports handling continuous categorical treatments, optional use spline transformations, adjustments multiple imputation datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"causal_contrast_marginal(   df,   Y,   X,   baseline_vars = \"1\",   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = NULL,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"df Data frame containing data. Y response variable data frame. X treatment exposure variable data frame. baseline_vars vector names baseline covariates adjust model. treat_0 reference level treatment variable, corresponding treatment control condition. treat_1 active level treatment variable, corresponding receiving treatment. estimand character vector specifying estimand; \"ATE\" Average Treatment Effect \"ATT\" Average Treatment Effect Treated. type character vector specifying type effect size; \"RD\" Risk Difference \"RR\" Risk Ratio. nsims Number simulations perform, relevant handling multiple imputation datasets. cores Number cores use parallel processing. family family GLM used (e.g., \"gaussian\" linear models). weights name weights variable data frame, NULL weights used. continuous_X Logical indicating whether treatment variable X continuous. splines Logical indicating whether use spline transformations treatment variable X. vcov method use variance-covariance matrix estimation. verbose Logical indicating whether display detailed output model fitting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"Depending 'type' specified, returns summary object containing either risk differences risk ratios along additional statistics like confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"# Assume that df is your dataset with variables 'outcome', 'treatment', 'age', and 'gender' result <- causal_contrast_marginal(   df = df, Y = \"outcome\", X = \"treatment\",   baseline_vars = c(\"age\", \"gender\"),   treat_0 = \"control\", treat_1 = \"exposed\",   estimand = \"ATE\", type = \"RD\", nsims = 100,   cores = 2, family = \"gaussian\", weights = \"weight_var\",   continuous_X = FALSE, splines = FALSE,   vcov = \"HC3\", verbose = TRUE ) #> Error in causal_contrast_marginal(df = df, Y = \"outcome\", X = \"treatment\",     baseline_vars = c(\"age\", \"gender\"), treat_0 = \"control\",     treat_1 = \"exposed\", estimand = \"ATE\", type = \"RD\", nsims = 100,     cores = 2, family = \"gaussian\", weights = \"weight_var\", continuous_X = FALSE,     splines = FALSE, vcov = \"HC3\", verbose = TRUE): could not find function \"causal_contrast_marginal\""},{"path":"https://go-bayes.github.io/margot/reference/clear_margot_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear Margot Data Cache — clear_margot_cache","title":"Clear Margot Data Cache — clear_margot_cache","text":"Removes cached margot datasets free disk space force re-downloading","code":""},{"path":"https://go-bayes.github.io/margot/reference/clear_margot_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear Margot Data Cache — clear_margot_cache","text":"","code":"clear_margot_cache(version = \"all\", confirm = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/clear_margot_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear Margot Data Cache — clear_margot_cache","text":"version Character string specifying version clear, \"\" clear entire cache confirm Logical. TRUE (default), asks confirmation deleting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/clear_margot_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear Margot Data Cache — clear_margot_cache","text":"NULL (invisibly)","code":""},{"path":"https://go-bayes.github.io/margot/reference/clear_margot_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear Margot Data Cache — clear_margot_cache","text":"","code":"if (FALSE) { # \\dontrun{ # clear specific version clear_margot_cache(\"v1\")  # clear all cached data clear_margot_cache(\"all\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_shift()` instead. function generates histogram specific ranges highlighted indicate highest /lowest values within unit specified limits. allows customization bin width, unit change highlighting, range highlighted. useful settings modified treatment policies clarifying part distribution shifted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"","code":"coloured_histogram(   df,   col_name,   binwidth = 1,   unit_of_change = 1,   scale_min = NULL,   scale_max = NULL,   highlight_range = \"highest\" )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"df dataframe containing data plotted. col_name name column histogram generated. binwidth width bins histogram; defaults 1. unit_of_change unit change used define highlight range. subtitle mention unit. also adjusts calculation highlight thresholds slightly less unit go range data. Defaults 1. scale_min minimum value used scaling histogram. `NULL`, minimum value `col_name` used. scale_max maximum value used scaling histogram. `NULL`, maximum value `col_name` used. highlight_range Specifies range highlight: \"lowest\", \"highest\", \"\". Defaults \"highest\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"ggplot object histogram highlighted ranges specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"","code":"if (FALSE) { # \\dontrun{ # assuming df_19 is your dataframe and contains the column 'forgiveness' graph <- coloured_histogram(   df = df_19,   col_name = \"forgiveness\",   scale_min = 1,   scale_max = 7,   highlight_range = \"highest\",   binwidth = .1, # adjust binwidth as needed   unit_of_change = 1 # specify the unit of change ) print(graph) } # }"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_categorical()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"","code":"coloured_histogram_quantiles(   df,   col_name,   n_divisions = NULL,   breaks = NULL,   binwidth = NULL,   n_bins = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colours = NULL,   hist_fill = \"lightgray\",   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"df dataframe containing data visualised col_name name column create histogram n_divisions number divisions create. null, user must provide breaks breaks optional. numeric vector specifying custom breakpoints binwidth width bins histogram n_bins optional. number bins histogram. overrides binwidth specified cutpoint_inclusive character string specifying whether cutpoints included lower upper category. must either \"lower\" \"upper\". default \"upper\" ties.method character string specifying ties handled colours optional. vector colours quantile lines hist_fill colour histogram fill. default \"lightgray\" hist_colour colour histogram outline. default \"black\" line_type line type quantile lines. default \"solid\" line_width line width quantile lines. default 0.75 title custom title plot. null, default title used subtitle custom subtitle plot. null, default subtitle used x_lab custom x-axis label. null, column name used y_lab custom y-axis label. default \"count\" theme_choice ggplot2 theme use. default theme_classic() text_size base text size plot. default 12 axis_text_angle angle x-axis text. default 45 add_density logical. true, adds density curve plot add_rug logical. true, adds rug plot x-axis facet_var optional. name variable use faceting x_scale_transform optional. transformation x-axis (e.g., \"log10\") y_scale_transform optional. transformation y-axis (e.g., \"log10\") additional_layers optional list additional ggplot2 layers add plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"ggplot object representing histogram highlighted quantiles","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"function creates histogram specified column dataframe, highlighting mean one standard deviation mean. draws vertical lines mean (black) plus/minus one standard deviation (blue gold, respectively), arrows mean standard deviation marker. title plot includes capitalized column name, achieved using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"coloured_histogram_sd(df, col_name, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"ggplot object representing histogram highlights mean   standard deviations. plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `df_margot_example` is a dataframe with a numeric column 'forgiveness' # and a factor or integer column 'wave' for subsetting: df_19 <- dplyr::filter(df_margot_example, wave == 1)  graph_density_of_exposure <- coloured_histogram_sd(   df = df_19,   col_name = \"forgiveness\",   binwidth = 0.5 # Adjust binwidth as needed ) } # } print(graph_density_of_exposure) #> Error: object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_shift()` instead. function creates histogram highlights specified range values visualize shifts data distributions. highlighted range can indicate areas interest, shifts distribution. visualization useful understanding implications causal contrasts, modified treatment policies. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"","code":"coloured_histogram_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"df dataframe containing variable interest. col_name name column `df` visualized histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data create meaningful visualization. range_highlight numeric vector length 2 specifying start end range highlight. `NULL`, range highlighted. shift character string indicating direction shift, \"\" highlighting gold \"\" highlighting dodger blue. default \"\". show_avg_line logical value indicating whether display vertical line representing average value specified column using red dashed line. Default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"`ggplot` object representing histogram specified highlights. object can printed modified using `ggplot2` functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_margot_example is your dataframe and it includes a numeric variable 'forgiveness' # Filter to a specific subset, for example, wave 1 df_19 <- dplyr::filter(df_margot_example, wave == 1)  # Create and print the histogram graph_density_of_exposure <- coloured_histogram_shift(   df = df_19,   shift = \"down\",   col_name = \"forgiveness\",   binwidth = .5, # Adjust binwidth for your data   range_highlight = c(3.9, 10) ) print(graph_density_of_exposure) } # }"},{"path":"https://go-bayes.github.io/margot/reference/compare_cv_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare CV AUTOC and QINI Results — compare_cv_targets","title":"Compare CV AUTOC and QINI Results — compare_cv_targets","text":"Compare CV AUTOC QINI Results","code":""},{"path":"https://go-bayes.github.io/margot/reference/compare_cv_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare CV AUTOC and QINI Results — compare_cv_targets","text":"","code":"compare_cv_targets(cv_data, flipped_outcomes = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/compute_baseline_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute baseline QINI curve — compute_baseline_qini","title":"Compute baseline QINI curve — compute_baseline_qini","text":"Compute baseline QINI curve","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_baseline_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute baseline QINI curve — compute_baseline_qini","text":"","code":"compute_baseline_qini(   tau_hat,   dr_scores,   weights,   method = \"maq_no_covariates\",   n_bootstrap = 200,   seed = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/compute_conditional_means_interpretation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute conditional means interpretation for policy tree leaves — compute_conditional_means_interpretation","title":"Compute conditional means interpretation for policy tree leaves — compute_conditional_means_interpretation","text":"Compute conditional means interpretation policy tree leaves","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_conditional_means_interpretation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute conditional means interpretation for policy tree leaves — compute_conditional_means_interpretation","text":"","code":"compute_conditional_means_interpretation(   model,   model_name,   policy_tree_obj,   max_depth,   act_labels,   transform_var,   use_math_notation = FALSE,   output_format = \"bullet\",   original_df = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/compute_consensus_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute consensus information from accumulator — compute_consensus_info","title":"Compute consensus information from accumulator — compute_consensus_info","text":"Compute consensus information accumulator Compute consensus information accumulator","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_consensus_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute consensus information from accumulator — compute_consensus_info","text":"","code":"compute_consensus_info(accumulator, n_iterations, consensus_threshold)  compute_consensus_info(accumulator, n_iterations, consensus_threshold)"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"`r lifecycle::badge(\"deprecated\")` function deprecated removed future release. Please use new `margot_compare_groups()` function associated workflow instead. function calculates either difference average treatment effects (ATE) relative risk ratio (RRR) two independent subgroups. subgroup represented list includes estimated effect (theta) standard error (std.error) effect. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc. subgroups expected outputs `lmtp::lmtp_contrast()` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"","code":"compute_difference(group1, group2, type = \"RD\")"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"group1 list containing estimated effect standard error subgroup 1. Expected structure: list(vals = data.frame(theta = x, std.error = y)). group2 list containing estimated effect standard error subgroup 2. Expected structure: list(vals = data.frame(theta = x, std.error = y)). type character string specifying type calculation. \"RD\" risk difference (default), \"RR\" relative risk ratio.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high` type \"RD\",           `rrr`, `std_error_log`, `conf_low`, `conf_high` type \"RR\", rounded 4 decimal places.           Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"function calculates difference means, standard error difference, 95 list includes mean (theta) standard error (std.error) group. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"compute_difference_means(group1, group2)"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"group1 list containing mean standard error group 1. Expected structure: list(vals = list(theta = x, std.error = y)). group2 list containing mean standard error group 2. Expected structure: list(vals = list(theta = x, std.error = y)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high`,           rounded 4 decimal places. Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"group1 <- list(vals = list(theta = 100, std.error = 10)) group2 <- list(vals = list(theta = 90, std.error = 5)) output <- compute_difference_means(group1, group2) cat(output$interpretation)  # Print the interpretation #> The difference in means is 10 with a standard error of 11.1803 and a 95% CI of [-11.9135, 31.9135]."},{"path":"https://go-bayes.github.io/margot/reference/compute_gain_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute gain summaries at spend levels — compute_gain_summaries","title":"Compute gain summaries at spend levels — compute_gain_summaries","text":"Compute gain summaries spend levels","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_gain_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute gain summaries at spend levels — compute_gain_summaries","text":"","code":"compute_gain_summaries(cate_qini, baseline_qini, spend_levels, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/compute_leaf_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute average conditional means within leaves — compute_leaf_means","title":"Compute average conditional means within leaves — compute_leaf_means","text":"Compute average conditional means within leaves","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_leaf_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute average conditional means within leaves — compute_leaf_means","text":"","code":"compute_leaf_means(   leaf_idx,   predictions,   conditional_means,   act_labels,   leaf_names,   use_math_notation = FALSE,   output_format = \"bullet\",   original_df = NULL,   model_name = NULL,   display_original_scale = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/compute_policy_trees_for_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute policy trees for a single model — compute_policy_trees_for_model","title":"Compute policy trees for a single model — compute_policy_trees_for_model","text":"Compute policy trees single model","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_policy_trees_for_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute policy trees for a single model — compute_policy_trees_for_model","text":"","code":"compute_policy_trees_for_model(   model_result,   model_name,   covariates,   not_missing,   custom_covariates,   exclude_covariates,   covariate_mode,   compute_depth1,   compute_depth2,   train_proportion,   verbose,   seed )"},{"path":"https://go-bayes.github.io/margot/reference/compute_policy_value_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute compact policy-value summary if available — compute_policy_value_summary","title":"Compute compact policy-value summary if available — compute_policy_value_summary","text":"Compute compact policy-value summary available","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_policy_value_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute compact policy-value summary if available — compute_policy_value_summary","text":"","code":"compute_policy_value_summary(results)"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"DEPRECATED: function longer functional removed future version. Please use `compute_qini_curves_binary()` binary treatments `compute_qini_curves_multi_arm()` multi-arm treatments instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"","code":"compute_qini_curves(tau_hat, Y, W = NULL, W_multi = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"tau_hat Matrix vector estimated treatment effects. Y Vector observed outcomes. W Vector treatment assignments binary treatment. W_multi Factor treatment assignments multi-arm treatment.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"data frame containing Qini curve data plotting.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"Compute Qini Curves Binary Treatments","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"","code":"compute_qini_curves_binary(   tau_hat,   Y,   W,   weights = NULL,   seed = 12345,   verbose = TRUE,   treatment_cost = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"function computes Qini curves multi-arm treatment effects using maq package. handles various edge cases provides detailed information computation process. function computes Qini curves multi-arm causal forests using doubly robust scores. handles various edge cases provides fallback mechanisms ensure valid outputs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"","code":"compute_qini_curves_multi_arm(   model,   tau_hat,   Y,   W_multi,   W.hat = NULL,   cost = NULL,   verbose = TRUE )  compute_qini_curves_multi_arm(   model,   tau_hat,   Y,   W_multi,   W.hat = NULL,   cost = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"model fitted GRF multi-arm causal forest model. tau_hat Matrix estimated treatment effects (one column per treatment arm comparison). Y Vector matrix observed outcomes. W_multi Factor vector multi-arm treatment assignments. W.hat Optional vector treatment probabilities (one arm). cost Optional vector costs (one arm). verbose Logical; TRUE, print diagnostic information execution.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"list containing: qini_data data frame containing Qini curve data plotting. qini_objects list maq objects curve, can used compute average gain. qini_data attribute \"imputed\" TRUE curves imputed zeros. list containing: qini_data data frame containing Qini curve data plotting. qini_objects list maq objects treatment comparison. Returns NULL error occurs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"function computes Qini curves arms combined, baseline (covariates), individual treatment arm. handles cases Qini objects zero length NULL, extending curves zeros necessary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_improved.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute QINI Curves with Improved DR Scores (Internal) — compute_qini_improved","title":"Compute QINI Curves with Improved DR Scores (Internal) — compute_qini_improved","text":"Compute QINI Curves Improved DR Scores (Internal)","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_improved.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute QINI Curves with Improved DR Scores (Internal) — compute_qini_improved","text":"","code":"compute_qini_improved(   Y,   W,   X,   tau_hat,   weights = NULL,   seed = 12345,   n_bootstrap = 200,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute QINI summary metrics — compute_qini_metrics","title":"Compute QINI summary metrics — compute_qini_metrics","text":"Compute QINI summary metrics","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute QINI summary metrics — compute_qini_metrics","text":"","code":"compute_qini_metrics(cate_qini, baseline_qini, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/compute_rate_on_demand.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","title":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","text":"internal helper function computes RATE metrics (AUTOC QINI) -demand causal forest treatment effect estimates. ensures proper --sample validation possible.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_rate_on_demand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","text":"","code":"compute_rate_on_demand(   forest,   tau_hat = NULL,   target = c(\"AUTOC\", \"QINI\"),   q = seq(0.1, 1, by = 0.1),   policy = c(\"treat_best\", \"withhold_best\"),   subset = NULL,   use_oob_predictions = TRUE,   verbose = FALSE,   seed = 12345,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/compute_rate_on_demand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","text":"forest causal_forest object grf tau_hat Optional vector treatment effect estimates. NULL, computed forest using --bag predictions default. target Character; either \"AUTOC\" \"QINI\" q Numeric vector quantiles evaluate TOC. Default seq(0.1, 1, = 0.1) matches GRF default. policy Character; either \"treat_best\" (default) \"withhold_best\" subset Optional indices subsetting evaluation data use_oob_predictions Logical; TRUE tau_hat NULL, use --bag predictions better validity (default TRUE) verbose Logical; print informative messages (default FALSE) seed Random seed reproducibility (default 12345) ... Additional arguments passed grf::rank_average_treatment_effect()","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_rate_on_demand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","text":"rank_average_treatment_effect object grf","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_rate_on_demand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute RATE (Rank Average Treatment Effect) On-Demand — compute_rate_on_demand","text":"valid statistical performance, prioritization scores (tau_hat) constructed independently evaluation forest training data. function attempts ensure : - Using --bag predictions tau_hat provided - Supporting subset indices proper train/test splitting - Warning validation might compromised","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_stability_summary_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary metrics across all models for stability analysis — compute_stability_summary_metrics","title":"Compute summary metrics across all models for stability analysis — compute_stability_summary_metrics","text":"Compute summary metrics across models stability analysis","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_stability_summary_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary metrics across all models for stability analysis — compute_stability_summary_metrics","text":"","code":"compute_stability_summary_metrics(results, verbose)"},{"path":"https://go-bayes.github.io/margot/reference/compute_summary_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary metrics across all models — compute_summary_metrics","title":"Compute summary metrics across all models — compute_summary_metrics","text":"Compute summary metrics across models","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_summary_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary metrics across all models — compute_summary_metrics","text":"","code":"compute_summary_metrics(results, verbose)"},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Formula for Regression Models — construct_formula","title":"Construct a Formula for Regression Models — construct_formula","text":"function dynamically constructs regression formula based provided parameters. supports incorporating splines continuous variables can handle interaction terms, including subclass variable. function ensures subclass variable redundantly included baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"construct_formula(   Y,   X = 1,   baseline_vars,   continuous_X = FALSE,   splines = FALSE,   subclass = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Formula for Regression Models — construct_formula","text":"Y string specifying dependent variable model. X string specifying independent treatment exposure variable; defaults 1 (intercept model). baseline_vars character vector baseline covariate names include model. continuous_X logical indicating whether `X` continuous variable; TRUE `splines` TRUE, applies spline transformation `X`. splines logical indicating whether apply spline transformations treatment variable `X`. subclass optional string specifying subclass variable interaction `X` baseline covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Formula for Regression Models — construct_formula","text":"string representing constructed formula use regression modeling functions like `glm`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"# Example with basic interaction terms without subclass: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), FALSE, FALSE) #> [1] \"health_outcome ~ treatment * ( age+sex )\"  # Example with spline transformation for a continuous treatment: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), TRUE, TRUE) #> [1] \"health_outcome ~ bs( treatment ) * ( age+sex )\"  # Example including a subclass variable: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), FALSE, FALSE, \"region\") #> [1] \"health_outcome ~ region * ( treatment * ( age+sex+income ) )\"  # Example with continuous treatment, splines, and subclass interaction: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), TRUE, TRUE, \"region\") #> [1] \"health_outcome ~ region * ( bs( treatment ) * ( age+sex+income ) )\""},{"path":"https://go-bayes.github.io/margot/reference/convert_cv_to_rate_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert CV Results to Rate Results Format — convert_cv_to_rate_results","title":"Convert CV Results to Rate Results Format — convert_cv_to_rate_results","text":"Internal function convert CV results format expected margot_interpret_heterogeneity.","code":""},{"path":"https://go-bayes.github.io/margot/reference/convert_cv_to_rate_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert CV Results to Rate Results Format — convert_cv_to_rate_results","text":"","code":"convert_cv_to_rate_results(cv_results, flipped_outcomes = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/create_accumulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create accumulator for bootstrap statistics — create_accumulator","title":"Create accumulator for bootstrap statistics — create_accumulator","text":"Create accumulator bootstrap statistics","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_accumulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create accumulator for bootstrap statistics — create_accumulator","text":"","code":"create_accumulator(vars, n_actions)"},{"path":"https://go-bayes.github.io/margot/reference/create_cv_interpretation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interpretation for CV Results — create_cv_interpretation","title":"Create Interpretation for CV Results — create_cv_interpretation","text":"Create Interpretation CV Results","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_cv_interpretation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interpretation for CV Results — create_cv_interpretation","text":"","code":"create_cv_interpretation(cv_results, alpha, adjust, num_folds, target)"},{"path":"https://go-bayes.github.io/margot/reference/create_cv_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formatted Tables from CV Results — create_cv_tables","title":"Create Formatted Tables from CV Results — create_cv_tables","text":"Internal function create formatted tables similar margot_rate() output cross-validation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_cv_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formatted Tables from CV Results — create_cv_tables","text":"","code":"create_cv_tables(cv_results, alpha = 0.05)"},{"path":"https://go-bayes.github.io/margot/reference/create_cv_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formatted Tables from CV Results — create_cv_tables","text":"cv_results Data frame CV results alpha Significance level highlighting","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_evidence_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create evidence summary table — create_evidence_summary","title":"Create evidence summary table — create_evidence_summary","text":"Create evidence summary table","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_evidence_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create evidence summary table — create_evidence_summary","text":"","code":"create_evidence_summary(   model_ids,   rate_results,   qini_results,   omnibus_results,   label_mapping,   use_cross_validation = FALSE,   rate_results_list = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"Creates basic data frame use Qini calculations fail.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"","code":"create_fallback_qini_data(tau_hat, W_multi)"},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"tau_hat Matrix treatment effect estimates. W_multi Factor vector treatment assignments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"data frame proportion, gain, curve columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"Creates basic Qini objects use calculations fail.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"","code":"create_fallback_qini_objects(tau_hat, W_multi)"},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"tau_hat Matrix treatment effect estimates. W_multi Factor vector treatment assignments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"list Qini objects minimal structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"function processes wide format dataframe filter create list dataframes based levels specified factor exposure variable. separates dataframes based level factor variable, one present. continuous variables specified, returns dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"create_filtered_wide_dataframes(dat_wide, exposure_vars)"},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"dat_wide wide format dataframe contains exposure variables. exposure_vars character vector listing names exposure variables. vector must include least one valid variable name dataframe.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"list dataframes, corresponding level factor exposure variable         factor present; otherwise, single dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"# Assuming wide_data is a dataframe and \"exposure_var\" includes factor or continuous variables: list_filtered_df <- create_filtered_wide_dataframes(wide_data, c(\"exposure_var1\", \"exposure_var2\")) #> Error in eval(expr, envir, enclos): object 'wide_data' not found # Access individual filtered dataframe if factor variables present: q1_df <- list_filtered_df[[\"tile_1\"]]  # For factor level \"tile_1\" #> Error in eval(expr, envir, enclos): object 'list_filtered_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"function divides numeric variable categories based either quantile breaks custom-specified breaks, creates ordered factor variable informative labels. now includes rich CLI reporting better user feedback.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"","code":"create_ordered_variable(   df,   var_name,   n_divisions = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   custom_breaks = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"df data frame containing variable divided categories. var_name name variable within data frame divide categories. n_divisions number quantile divisions create. Required custom_breaks provided. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". ties.method character string specifying ties handled calculating quantiles. Must one \"first\", \"last\", \"random\", \"ordered\", \"average\". NULL (default), set \"last\" cutpoint_inclusive \"upper\", \"first\" cutpoint_inclusive \"lower\". custom_breaks numeric vector break points use categorisation. provided, overrides quantile-based division specified n_divisions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"input data frame additional column representing ordered factor variable.         new column name original variable name \"_binary\" appended         2 divisions, \"_cat\" otherwise.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"function deprecated. Please use `create_ordered_variable()` instead. Create Ordered Variable Custom Breaks Auto-generated Labels function creates ordered categorical variable dataframe based user-specified breaks. automatically generates labels reflecting break points handles various edge cases.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"create_ordered_variable_custom(   df,   var_name,   breaks,   include_lowest = TRUE,   right = TRUE,   cutpoint_inclusive = \"upper\",   inf_label = \"Inf\",   neg_inf_label = \"-Inf\" )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"df data frame containing variable transformed. var_name name numeric variable within data frame converted ordered factor. variable ideally continuous. breaks numeric vector specifying breakpoints intervals. breakpoints cover entire range variable. include_lowest Logical, lowest value included first interval? Default TRUE. right Logical, intervals closed right (open left)? Default TRUE. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". inf_label string use infinity labels. Default \"Inf\". neg_inf_label string use negative infinity labels. Default \"-Inf\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"Returns data frame additional column representing ordered factor variable.         new column named combining original variable name suffix \"_cat\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"df <- data.frame(x = runif(100, 0, 10)) df_updated <- create_ordered_variable_custom(df, \"x\", c(0, 2, 5, 10)) #> Error in create_ordered_variable_custom(df, \"x\", c(0, 2, 5, 10)): could not find function \"create_ordered_variable_custom\""},{"path":"https://go-bayes.github.io/margot/reference/create_propensity_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create propensity score plot — create_propensity_plot","title":"Create propensity score plot — create_propensity_plot","text":"Create propensity score plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_propensity_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create propensity score plot — create_propensity_plot","text":"","code":"create_propensity_plot(W, W_hat, exposure_name, theme = \"classic\")"},{"path":"https://go-bayes.github.io/margot/reference/create_stability_accumulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create accumulator for stability statistics — create_stability_accumulator","title":"Create accumulator for stability statistics — create_stability_accumulator","text":"Create accumulator stability statistics","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_stability_accumulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create accumulator for stability statistics — create_stability_accumulator","text":"","code":"create_stability_accumulator(vars, n_actions)"},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Tau Hat Plot — create_tau_hat_plot","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"Creates histogram plot tau hat values treatment comparison.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"","code":"create_tau_hat_plot(tau_hat, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"tau_hat matrix estimated treatment effects. outcome character string specifying name outcome variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"ggplot object representing distribution tau hat values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transition matrix for state transitions — create_transition_matrix","title":"Create transition matrix for state transitions — create_transition_matrix","text":"satisify positivity assumption causal inference, must ensure exposure occurs data. function computes transition matrix given state variable across subjects, tracking changes consecutive observations. function handles numeric factor state variables, excluding NA values transition count.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"create_transition_matrix(data, state_var, id_var)"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transition matrix for state transitions — create_transition_matrix","text":"data data frame containing observations. state_var name state variable column `data` string. variable tracks state changes analyzed. id_var name identifier variable column `data` string. variable distinguishes different subjects entities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transition matrix for state transitions — create_transition_matrix","text":"matrix indicating number transitions states. rows represent initial state (''), columns represent subsequent state (''). Diagonal entries indicate number times state change, -diagonal entries indicate transitions one state another.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create transition matrix for state transitions — create_transition_matrix","text":"function explicitly excludes NA values transition matrix calculation. treats numeric state variables converting factors, ensuring consistent analysis approach numeric factor types.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"df <- read.table(header = TRUE, text = \" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") #> Error in create_transition_matrix(df, \"religion_believe_god\", \"id\"): could not find function \"create_transition_matrix\" print(transition_matrix) #> Error: object 'transition_matrix' not found"},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"internal function processes policy tree object calculates positions nodes visualisation purposes. extracts relevant information policy tree computes x y coordinates node.","code":""},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"","code":"debug_node_data_with_positions(policy_tree, node_distance_adjustment = -1.5)"},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"policy_tree policy tree object, typically obtained causal forest model. node_distance_adjustment adjustment spacing nodes. Default -1.5.","code":""},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"data frame containing information node policy tree,   including ID, whether leaf node, split variable, split value, action,   left right child node IDs, x y coordinates visualization.","code":""},{"path":"https://go-bayes.github.io/margot/reference/detect_effect_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to detect effect column and type — detect_effect_column","title":"Helper function to detect effect column and type — detect_effect_column","text":"Helper function detect effect column type","code":""},{"path":"https://go-bayes.github.io/margot/reference/detect_effect_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to detect effect column and type — detect_effect_column","text":"","code":"detect_effect_column(data)"},{"path":"https://go-bayes.github.io/margot/reference/detect_variable_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect variable units from name — detect_variable_units","title":"Detect variable units from name — detect_variable_units","text":"Detect variable units name","code":""},{"path":"https://go-bayes.github.io/margot/reference/detect_variable_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect variable units from name — detect_variable_units","text":"","code":"detect_variable_units(var_name)"},{"path":"https://go-bayes.github.io/margot/reference/determine_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"works with transform to original scale — determine_transformation","title":"works with transform to original scale — determine_transformation","text":"works transform original scale","code":""},{"path":"https://go-bayes.github.io/margot/reference/determine_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"works with transform to original scale — determine_transformation","text":"","code":"determine_transformation(var_name)"},{"path":"https://go-bayes.github.io/margot/reference/df_margot_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Margot Example Dataset — df_margot_example","title":"Margot Example Dataset — df_margot_example","text":"small simulated dataset demonstrating margot functionality. dataset mimics structure longitudinal panel data contains entirely simulated data real participant information.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_margot_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Margot Example Dataset — df_margot_example","text":"","code":"df_margot_example"},{"path":"https://go-bayes.github.io/margot/reference/df_margot_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Margot Example Dataset — df_margot_example","text":"data frame 300 rows (100 participants × 3 waves) 15 variables: id Participant identifier wave Measurement wave (0, 1, 2) year Year measurement (2018, 2019, 2020) male Binary gender indicator (0 = male, 1 = male) age Age years partner Relationship status (0 = partner, 1 = partner) eth_cat Ethnicity category (euro, maori, pacific, asian) sample_weights Survey sampling weights forgiveness Forgiveness scale score (1-7) gratitude Gratitude scale score (1-7) modesty Modesty scale score (1-7) alcohol_frequency Frequency alcohol consumption (0-7) alcohol_intensity Intensity alcohol consumption (0-7) hours_exercise Hours exercise per week ego_rubin Ego resilience scale (1-7)","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_margot_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Margot Example Dataset — df_margot_example","text":"lightweight example dataset suitable package examples testing. larger, comprehensive simulated datasets better reflect real longitudinal studies, use `fetch_margot_data()` version = \"v1\" \"v2\".","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/df_margot_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Margot Example Dataset — df_margot_example","text":"","code":"# load the example data data(df_margot_example)  # check structure str(df_margot_example) #> tibble [300 × 15] (S3: tbl_df/tbl/data.frame) #>  $ id               : int [1:300] 1 1 1 2 2 2 3 3 3 4 ... #>  $ wave             : int [1:300] 0 1 2 0 1 2 0 1 2 0 ... #>  $ year             : int [1:300] 2018 2019 2020 2018 2019 2020 2018 2019 2020 2018 ... #>  $ male             : int [1:300] 1 1 1 0 0 0 1 1 1 0 ... #>  $ age              : num [1:300] 51 52 53 27 28 29 43 44 45 61 ... #>  $ partner          : num [1:300] 1 1 0 0 0 1 0 1 0 1 ... #>  $ eth_cat          : chr [1:300] \"euro\" \"euro\" \"euro\" \"euro\" ... #>  $ sample_weights   : num [1:300] 0.971 0.982 0.723 1.055 0.917 ... #>  $ forgiveness      : num [1:300] 3.93 4.12 4.54 1.55 1.41 ... #>  $ gratitude        : num [1:300] 4.48 3.88 4.19 4.39 5.04 ... #>  $ modesty          : num [1:300] 3.76 4 3.93 2.77 3.11 ... #>  $ alcohol_frequency: num [1:300] 7 6 6 4 2 7 7 5 5 6 ... #>  $ alcohol_intensity: num [1:300] 4 1 0 6 2 3 3 0 NA 2 ... #>  $ hours_exercise   : num [1:300] 9.6 1 0.2 3.3 4.1 NA 3.6 9.6 NA 1.6 ... #>  $ ego_rubin        : num [1:300] 5.44 5.22 5.43 4.56 4.75 ...  # basic summary by wave table(df_margot_example$wave) #>  #>   0   1   2  #> 100 100 100"},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":null,"dir":"Reference","previous_headings":"","what":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"`r lifecycle::badge(\"deprecated\")` dataset deprecated removed future version. Please use `fetch_margot_data()` instead. dataset contains simulated data New Zealand Attitudes Values Study.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"","code":"df_nz  data(df_nz)"},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"data frame (see `?df_margot_example` similar structure) data frame X rows Y variables: age participant age years agreeableness Score agreeableness scale. Includes items : . sympathize others' feelings. ii. interested people's problems. (reversed) iii. feel others' emotions. iv. really interested others. (reversed)  ... variables","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"Simulated data. Copyright (c) 2024 margot package contributors.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"large dataset (27MB) phased reduce package size. Use `fetch_margot_data(version = \"v1\")` download equivalent dataset Open Science Framework. dataset licensed custom license. may use data non-commercial purposes appropriate credit, redistribution data form, including modified versions, permitted protect privacy. code margot package licensed GNU General Public License (GPL) v3.0. can redistribute /modify terms GPL published Free Software Foundation. See <http://www.gnu.org/licenses/>.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legacy New Zealand Attitudes and Values Study (NZAVS) Simulated Data — df_nz","text":"","code":"if (FALSE) { # \\dontrun{ # old approach (deprecated) data(df_nz)  # new approach df <- fetch_margot_data(version = \"v1\") } # }  data(df_nz) head(df_nz) #>   id wave      age agreeableness alcohol_frequency alcohol_intensity #> 1  1 2018 40.31341      6.235760          4.031045         6.0138428 #> 2  1 2019 41.33449      6.216993          3.964873        10.0320085 #> 3  1 2020 42.24450      6.539885          3.950068         9.9997619 #> 4  2 2018 43.85094      6.790531          4.024855         1.0030336 #> 5  2 2019       NA            NA                NA                NA #> 6  2 2020 45.80632      5.484677          3.985040         0.9976499 #>   alert_level_combined_lead   belong belong_accept belong_beliefs #> 1                  no_alert 4.958810      7.000000       4.964069 #> 2                  no_alert 6.039168      6.954222       5.985981 #> 3                  no_alert 5.382137      6.017268       2.950767 #> 4                      <NA> 6.311607      5.976047       6.018113 #> 5                  no_alert       NA            NA             NA #> 6                      <NA> 5.991122      6.015296       5.985946 #>   belong_routside_reversed  bodysat born_nz charity_donate conscientiousness #> 1                 2.978316 1.969601       1     0.00000000          5.781907 #> 2                 5.046594 3.039433       1     0.01373293          6.004211 #> 3                 7.000000 6.042476       1   399.96241829          4.719577 #> 4                 6.980109 5.958325       1   199.96546646          5.238591 #> 5                       NA       NA       1             NA                NA #> 6                 5.972425 6.030989       1   200.03938746          6.467995 #>   edu emotion_regulation_change_thinking_to_calm #> 1   8                                   6.999934 #> 2   8                                   6.979494 #> 3   8                                   6.981677 #> 4   7                                   4.963946 #> 5   7                                         NA #> 6   7                                   2.003005 #>   emotion_regulation_hide_neg_emotions emotion_regulation_out_control #> 1                             6.044651                       2.028738 #> 2                             6.984203                       1.984919 #> 3                             6.043920                       2.018791 #> 4                             5.024856                       1.000000 #> 5                                   NA                             NA #> 6                             4.995746                       1.000000 #>   emp_job_sat emp_job_secure emp_job_valued employed eth_cat extraversion #> 1    5.971694       7.000000       6.023997        1    euro     4.740896 #> 2    6.019789       6.967036       6.022545        1    euro     4.737648 #> 3    7.000000       6.974346       6.006828        1    euro     4.724690 #> 4    5.987723       6.976047       7.000000        1    euro     3.960051 #> 5          NA             NA             NA       NA    euro           NA #> 6    6.032520       6.961107       5.986527        1    euro     2.764532 #>   forgiveness gen_cohort gratitude hlth_bmi hlth_fatigue hlth_height #> 1    4.020353      gen_X  6.986113 34.61469    0.9535594    1.856696 #> 2    4.969327      gen_X  7.000000 34.05344    2.0103681    1.826995 #> 3    5.366853      gen_X  6.999204 35.19452    2.9981118    1.786924 #> 4    5.618090      gen_X  6.367532 19.84119    0.9943821    1.620493 #> 5          NA      gen_X        NA       NA           NA          NA #> 6    5.315945      gen_X  6.683664 19.87911    0.9742263    1.614109 #>   hlth_sleep_hours hlth_weight home_owner honesty_humility hours_charity #> 1         8.546112   115.99149          1         5.954770   0.008159268 #> 2         8.019429   113.99033         NA         3.970874   0.000000000 #> 3         7.995631   117.95184          1         4.988354   0.028743272 #> 4         7.004173    54.01207          1         6.969159   6.011909720 #> 5               NA          NA         NA               NA            NA #> 6         8.018394    53.95457          1         7.000000   0.000000000 #>   hours_exercise household_inc impermeability_group kessler_depressed #> 1     0.51959112        200000             2.012835        0.00000000 #> 2     0.01974342        200000             4.964448        0.00000000 #> 3     0.00000000        140000             2.030814        0.00000000 #> 4     1.98318873        200000             4.994408        0.00000000 #> 5             NA            NA                   NA                NA #> 6     7.02405270        160000             2.008591        0.02017855 #>   kessler_effort kessler_hopeless kessler_latent_anxiety #> 1      0.9546004       0.00000000              0.9685371 #> 2      0.9633998       0.02006575              0.9830208 #> 3      1.9808154       0.04983561              1.7149373 #> 4      1.0289347       1.04402955              0.9997136 #> 5             NA               NA                    NaN #> 6      0.9598355       0.00000000              0.6297783 #>   kessler_latent_depression kessler_nervous kessler_restless kessler_worthless #> 1               0.037011885      0.98849863        0.9815225       0.046843363 #> 2               0.000000000      0.95881162        0.9716739       0.021033094 #> 3               0.006337577      3.03015091        0.0000000       0.009060714 #> 4               0.377568407      0.99305306        0.9758989       0.026907402 #> 5                       NaN              NA               NA                NA #> 6               0.003030027      0.02515866        1.0125775       0.000000000 #>   kessler6_sum lifemeaning  lifesat lifesat_ideal lifesat_satlife male #> 1     3.044502    6.468932 6.004578      5.970138        6.018526    1 #> 2     2.960963    5.978561 5.996101      6.018253        5.978932    1 #> 3     5.005375    5.549235 5.969862      5.961114        6.015522    1 #> 4     4.008829    5.971437 6.472409      6.000709        7.000000    0 #> 5           NA          NA       NA            NA              NA    0 #> 6     2.007682    5.954844 6.045588      5.016755        7.000000    0 #>   meaning_purpose meaning_sense  modesty neighbourhood_community neuroticism #> 1        6.012352      7.000000 6.786189                6.951882    2.543777 #> 2        5.975751      6.044783 6.002267                6.005449    3.049655 #> 3        4.956256      5.997665 5.702049                5.986452    2.960180 #> 4        6.024632      6.043560 6.955113                3.012109    4.224377 #> 5              NA            NA       NA                      NA          NA #> 6        5.979999      5.952246 6.977462                2.010986    4.456901 #>        nwi nz_dep2018 nzsei_13_l openness parent partner perfectionism #> 1 8.020139   5.953996         48 6.502722      1       1      4.303349 #> 2 6.668893   6.023145         65 6.469405      1       1      3.670650 #> 3 4.618780   6.024971         65 6.237941      1       1      3.337095 #> 4 7.627521   3.048911         69 2.031197      1       1      2.363609 #> 5       NA   2.967774         69       NA     NA      NA            NA #> 6 5.640812   3.036816         72 3.473353      1       1      2.953873 #>   permeability_individual pers_agreeable_feel_others_emotions #> 1                7.000000                            6.038855 #> 2                7.000000                            6.005890 #> 3                6.964188                            6.010749 #> 4                5.027991                            7.000000 #> 5                      NA                                  NA #> 6                5.021921                            7.000000 #>   pers_agreeable_no_interest_others pers_agreeable_no_interest_others_probs #> 1                          6.028096                                6.017042 #> 2                          5.956827                                6.025382 #> 3                          7.000000                                7.000000 #> 4                          6.983117                                6.037968 #> 5                                NA                                      NA #> 6                          6.037822                                2.013026 #>   pers_agreeable_sympathise_others pers_conscientious_chores_done #> 1                         7.000000                       5.003450 #> 2                         7.000000                       5.978509 #> 3                         5.951258                       2.976528 #> 4                         7.000000                       7.000000 #> 5                               NA                             NA #> 6                         6.960945                       5.998471 #>   pers_conscientious_forget_putback pers_conscientious_like_order #> 1                          6.035918                      5.972150 #> 2                          6.048918                      5.988758 #> 3                          2.951705                      5.991320 #> 4                          1.003034                      6.969415 #> 5                                NA                            NA #> 6                          7.000000                      6.977218 #>   pers_conscientious_make_mess pers_extraversion_dont_talkalot #> 1                     5.955233                        6.040438 #> 2                     6.045258                        3.985668 #> 3                     6.990426                        4.970881 #> 4                     5.961425                        6.012815 #> 5                           NA                              NA #> 6                     6.045320                        3.036480 #>   pers_extraversion_keepbackground pers_extraversion_life_party #> 1                         3.998360                     6.039570 #> 2                         5.020996                     4.998691 #> 3                         4.991396                     6.031292 #> 4                         4.995249                     2.963147 #> 5                               NA                           NA #> 6                         2.957594                     3.014112 #>   pers_extraversion_talk_peopleparties pers_honestyhumility_deserve_more #> 1                             3.006411                          5.986706 #> 2                             5.025187                          3.976311 #> 3                             2.966148                          5.973563 #> 4                             1.976786                          7.000000 #> 5                                   NA                                NA #> 6                             2.009894                          7.000000 #>   pers_honestyhumility_feel_entitled #> 1                           7.000000 #> 2                           6.950590 #> 3                           6.038719 #> 4                           7.000000 #> 5                                 NA #> 6                           7.000000 #>   pers_honestyhumility_pleasure_expensivegoods #> 1                                     5.022716 #> 2                                     1.984692 #> 3                                     2.023260 #> 4                                     6.993182 #> 5                                           NA #> 6                                     6.952615 #>   pers_honestyhumility_seen_expensivecar pers_neuroticism_mood_swings #> 1                               5.955832                     1.994415 #> 2                               3.020957                     6.033852 #> 3                               6.048881                     2.045891 #> 4                               7.000000                     5.032754 #> 5                                     NA                           NA #> 6                               7.000000                     6.043157 #>   pers_neuroticism_mostly_relaxed pers_neuroticism_seldom_blue #> 1                        2.027604                     4.953003 #> 2                        1.977769                     2.038987 #> 3                        2.993304                     4.964138 #> 4                        4.966090                     1.964646 #> 5                              NA                           NA #> 6                        1.997013                     5.952084 #>   pers_neuroticism_upset_easily pers_openness_difficult_abstraction #> 1                      1.000000                            6.022979 #> 2                      2.021009                            4.962520 #> 3                      2.031607                            4.954873 #> 4                      5.002216                            2.012435 #> 5                            NA                                  NA #> 6                      3.993217                            4.987355 #>   pers_openness_good_imagination pers_openness_interested_abstraction #> 1                       7.000000                             6.014076 #> 2                       6.978520                             7.000000 #> 3                       6.995509                             6.048047 #> 4                       2.955771                             1.000000 #> 5                             NA                                   NA #> 6                       4.989866                             1.000000 #>   pers_openness_vivid_imagination pol_wing political_conservative #> 1                        7.000000 1.020237               1.000000 #> 2                        6.989238 1.000000               1.022343 #> 3                        6.960658 1.000000               1.042282 #> 4                        2.033375 4.014205               4.960227 #> 5                              NA       NA                     NA #> 6                        2.960342 3.969545               4.954690 #>   power_no_control_composite power_no_control_composite_reversed #> 1                   1.519361                            6.537026 #> 2                   3.457300                            4.531562 #> 3                   1.501127                            6.545508 #> 4                   1.011948                            7.000000 #> 5                        NaN                                 NaN #> 6                   1.000000                            7.000000 #>   power_others_control power_self_nocontrol pwb_standard_living #> 1             1.000000             2.025217            7.042358 #> 2             4.954861             1.999267            8.981462 #> 3             1.976260             1.035171            6.960540 #> 4             1.002600             1.000000            9.993654 #> 5                   NA                   NA                  NA #> 6             1.000000             1.037436            9.969491 #>   pwb_your_future_security pwb_your_health pwb_your_relationships regc_2022_l #> 1                 8.973228        7.023662               9.961455           2 #> 2                 7.963623        1.970227               9.038338           2 #> 3                 8.993340        7.984213               9.964077           2 #> 4                10.000000        9.954387              10.000000          13 #> 5                       NA              NA                     NA          13 #> 6                10.000000        9.986748               9.032489          13 #>   religion_believe_god religion_believe_spirit religion_bigger_denominations #> 1                    0                       1                       not_rel #> 2                    0                       0                       not_rel #> 3                    0                       1                       not_rel #> 4                    0                       0                       not_rel #> 5                   NA                      NA                          <NA> #> 6                    0                       1                       not_rel #>   religion_identification_level religion_perceive_religious_discrim #> 1                             1                            1.000000 #> 2                             1                            1.035010 #> 3                             1                            1.000000 #> 4                             1                            1.020197 #> 5                            NA                                  NA #> 6                             1                            1.000000 #>   religion_religious rumination rural_gch_2018_l sample_frame #> 1                  0 0.03677838                1          1.1 #> 2                  0 0.01604958                1          1.1 #> 3                  0 0.00000000                1          1.1 #> 4                  0 0.04074371                1          1.1 #> 5                 NA         NA                1          1.1 #> 6                  0 0.00000000                1          1.1 #>   sample_frame_opt_in sample_weights self_control_have_lots #> 1                   0      0.6495057               4.987928 #> 2                   0      0.7789180               3.001922 #> 3                   0      0.8119713               5.026771 #> 4                   0      0.4022481               5.033600 #> 5                   0             NA                     NA #> 6                   0      0.4794723               7.000000 #>   self_control_wish_more_reversed self_esteem selfesteem_failure_reversed #> 1                        2.024191    5.983263                    5.049517 #> 2                        2.035422    6.024637                    6.010825 #> 3                        2.027122    6.016682                    5.038861 #> 4                        2.962663    6.697360                    7.000000 #> 5                              NA          NA                          NA #> 6                        2.983433    6.285690                    7.000000 #>   selfesteem_postiveself selfesteem_satself sexual_satisfaction sfhealth #> 1               5.959428           6.976774            5.963785 2.370515 #> 2               5.995463           6.045321            5.031907 3.692035 #> 3               5.979329           6.956274            6.030893 5.708331 #> 4               5.959445           7.000000            6.047659 7.000000 #> 5                     NA                 NA                  NA       NA #> 6               6.020617           5.990747            3.965026 6.035785 #>   sfhealth_expect_worse_health_reversed sfhealth_get_sick_easier_reversed #> 1                              1.000000                          3.048580 #> 2                              1.000000                          7.000000 #> 3                              6.005024                          6.006699 #> 4                              7.000000                          6.961256 #> 5                                    NA                                NA #> 6                              3.991105                          7.000000 #>   sfhealth_your_health smoker  support support_help support_noguidance_reversed #> 1             3.047783      0 7.000000     6.972380                    6.999528 #> 2             3.014775      0 6.959343     7.000000                    6.997369 #> 3             5.022465      0 6.967418     7.000000                    7.000000 #> 4             6.977021      0 7.000000     7.000000                    7.000000 #> 5                   NA     NA       NA           NA                          NA #> 6             7.000000      0 7.000000     6.984364                    6.975150 #>   support_turnto vengeful_rumin year_measured #> 1       6.959850       3.975229             1 #> 2       7.000000       3.014252             1 #> 3       7.000000       2.626865             1 #> 4       6.994214       2.363377             1 #> 5             NA             NA             0 #> 6       7.000000       2.678659             1"},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal wrapper for policy tree computation — .compute_policy_tree","title":"Internal wrapper for policy tree computation — .compute_policy_tree","text":"Internal function wraps either policytree::policy_tree() fastpolicytree::fastpolicytree() depending user preference package availability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal wrapper for policy tree computation — .compute_policy_tree","text":"","code":".compute_policy_tree(   X,   Gamma,   depth,   tree_method = \"policytree\",   min_node_size = getOption(\"margot.policy_tree.min_node_size\", 1L) )"},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal wrapper for policy tree computation — .compute_policy_tree","text":"X Covariate matrix Gamma Matrix doubly robust scores depth Integer depth tree (1 2) tree_method Character string: \"policytree\" \"fastpolicytree\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal wrapper for policy tree computation — .compute_policy_tree","text":"Policy tree object","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_value_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute policy value using DR scores for consensus trees (internal helper) — .compute_policy_value_internal","title":"Compute policy value using DR scores for consensus trees (internal helper) — .compute_policy_value_internal","text":"Compute policy value using DR scores consensus trees (internal helper)","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-compute_policy_value_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute policy value using DR scores for consensus trees (internal helper) — .compute_policy_value_internal","text":"","code":".compute_policy_value_internal(   model,   depth = 2L,   R = 499L,   seed = NULL,   baseline = c(\"control_all\", \"treat_all\") )"},{"path":"https://go-bayes.github.io/margot/reference/dot-get_tree_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get policy tree method with fallback — .get_tree_method","title":"Get policy tree method with fallback — .get_tree_method","text":"Get policy tree method fallback","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-get_tree_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get policy tree method with fallback — .get_tree_method","text":"","code":".get_tree_method(requested_method = \"policytree\", verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/dot-get_tree_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get policy tree method with fallback — .get_tree_method","text":"requested_method requested tree method verbose Whether print messages fallback","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-get_tree_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get policy tree method with fallback — .get_tree_method","text":"method use (may differ requested package unavailable)","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-has_fastpolicytree.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if fastpolicytree is available — .has_fastpolicytree","title":"Check if fastpolicytree is available — .has_fastpolicytree","text":"Check fastpolicytree available","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-has_fastpolicytree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if fastpolicytree is available — .has_fastpolicytree","text":"","code":".has_fastpolicytree()"},{"path":"https://go-bayes.github.io/margot/reference/dot-has_fastpolicytree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if fastpolicytree is available — .has_fastpolicytree","text":"Logical indicating fastpolicytree package installed","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-normalize_policy_actions.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise policy tree actions to 1-based indexing — .normalize_policy_actions","title":"Normalise policy tree actions to 1-based indexing — .normalize_policy_actions","text":"Normalise policy tree actions 1-based indexing","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-normalize_policy_actions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise policy tree actions to 1-based indexing — .normalize_policy_actions","text":"","code":".normalize_policy_actions(actions)"},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"function processes wide-format longitudinal data multiple time points: - wave t < final wave:   - wave t+1 **exposure columns**, participant remains \"lost\" wave t     ** exposures wave t+1 present (missing). Otherwise, censored wave t.   - wave t+1 **exposures** (.e., final wave purely outcomes),     require ** final-wave outcomes present. ** final-wave outcome missing,     participant censored wave t onward. Censoring sets future waves `NA`, censored, participants remain censored.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"","code":".strict_exposure_outcome_censoring(   df_wide,   exposure_vars,   ordinal_columns = NULL,   continuous_columns_keep = NULL,   scale_exposure = FALSE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = \"lost_following_wave\",   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"df_wide wide-format dataframe columns like t0_X, t1_X, t2_X, etc. exposure_vars Character vector exposure names (e.g. c(\"aaron_antagonism\", \"aaron_disinhibition\", ...)). ordinal_columns Character vector ordinal (factor) variables dummy-coded. continuous_columns_keep Numeric columns want scale (e.g. must remain original units). scale_exposure FALSE, scale exposures; TRUE, exposures also scaled. not_lost_in_following_wave Name \"lost\" indicator (default \"not_lost_following_wave\"). lost_in_following_wave Name \"lost\" indicator (default \"lost_following_wave\"). remove_selected_columns TRUE, remove original columns dummy-coding ordinal columns. time_point_prefixes Optional vector wave prefixes (like c(\"t0\",\"t1\",\"t2\")); NULL, auto-detect via regex. time_point_regex Regex used detect wave prefixes `time_point_prefixes` NULL. save_observed_y FALSE, set missing final-wave outcomes NA. TRUE, keep partial final-wave outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"processed dataframe, strict --nothing censoring exposures earlier waves,         outcome-based censoring final wave lacks exposures.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"**Core Logic** wave t 0 T-2 (.e., penultimate wave): wave t+1 final wave exposures, fallback final wave's outcome columns. \"not_lost[t] = 1 ** final-wave outcomes present, else 0\". \"strict\" approach: ** exposure missing wave t+1, censor wave t onward.","code":"needed_exposures <- paste0(t+1, \"_\", exposure_vars)   not_lost[t] = 1 if rowSums(!is.na(needed_exposures)) == length(needed_exposures)                else 0    if not_lost[t] = 0, set waves t+1..T to NA"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"function provides double robust approach estimating causal effects. first computes marginal effects using `causal_contrast_marginal` function, processes tabulates results using `tab_engine_marginal`. function handles continuous categorical variables, allows specification type effect measure causal estimation tabulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"double_robust_marginal(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   nsims,   cores,   family,   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE,   delta = 1,   sd = 1,   new_name,   estimand = c(\"ATE\", \"ATT\"),   type_causal = c(\"RR\", \"RD\"),   type_tab = c(\"RR\", \"RD\") )"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"df data frame containing dataset analysis. Y name outcome variable string. X name treatment exposure variable string. baseline_vars vector covariate names included model. treat_0 reference level treatment variable. treat_1 treatment level treatment variable. nsims number simulations run, used bootstrap Monte Carlo methods. cores number processor cores use parallel computation. family description error distribution link function used model. weights name weights variable data frame, NULL weights used. continuous_X Logical, indicating whether treatment variable X continuous. splines Logical, indicating whether use spline functions continuous variables. vcov method use variance-covariance estimation. verbose Logical, indicating whether print detailed output computation. delta assumed smallest worthwhile effect, used E-value calculations tabulation. sd standard deviation effect estimate, used E-value calculations. new_name new name assign tabulated output, typically describing variable model. estimand Specifies target causal inference, \"ATE\" (Average Treatment Effect) \"ATT\" (Average Treatment Treated). type_causal type effect size (e.g., \"RR\" Risk Ratio \"RD\" Risk Difference) computed causal analysis. type_tab type effect size used tabulation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"list containing two elements: `causal_results` results causal analysis,         `tab_results` tabulated results including E-values statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"# Assuming you have a dataset `df_ate` and necessary variables defined results <- double_robust_marginal(   df = df_ate,   Y = \"t2_kessler_latent_anxiety_z\",   X = \"treatment_var\",   baseline_vars = c(\"age\", \"gender\"),   treat_1 = \"intervention\",   treat_0 = \"control\",   nsims = 200,   cores = 4,   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   estimand = \"ATE\",   type_causal = \"RD\",   type_tab = \"RD\",   vcov = \"HC2\",   new_name = \"Test Model Effect\",   delta = 1,   sd = 1 ) #> Error in double_robust_marginal(df = df_ate, Y = \"t2_kessler_latent_anxiety_z\",     X = \"treatment_var\", baseline_vars = c(\"age\", \"gender\"),     treat_1 = \"intervention\", treat_0 = \"control\", nsims = 200,     cores = 4, family = \"gaussian\", weights = TRUE, continuous_X = FALSE,     splines = FALSE, estimand = \"ATE\", type_causal = \"RD\", type_tab = \"RD\",     vcov = \"HC2\", new_name = \"Test Model Effect\", delta = 1,     sd = 1): could not find function \"double_robust_marginal\""},{"path":"https://go-bayes.github.io/margot/reference/extract_from_diff_gain.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract estimate and SE from diff_gain string — extract_from_diff_gain","title":"Extract estimate and SE from diff_gain string — extract_from_diff_gain","text":"Extract estimate SE diff_gain string","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_from_diff_gain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract estimate and SE from diff_gain string — extract_from_diff_gain","text":"","code":"extract_from_diff_gain(dg)"},{"path":"https://go-bayes.github.io/margot/reference/extract_gain_from_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract gain value from plot data at specific spend level — extract_gain_from_plot_data","title":"Extract gain value from plot data at specific spend level — extract_gain_from_plot_data","text":"Extract gain value plot data specific spend level","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_gain_from_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract gain value from plot data at specific spend level — extract_gain_from_plot_data","text":"","code":"extract_gain_from_plot_data(qini_data, curve_name, spend_level)"},{"path":"https://go-bayes.github.io/margot/reference/extract_grf_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GRF parameters from models — extract_grf_params","title":"Extract GRF parameters from models — extract_grf_params","text":"Extract GRF parameters models","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_grf_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GRF parameters from models — extract_grf_params","text":"","code":"extract_grf_params(models)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract QINI curve data — extract_qini_curves","title":"Extract QINI curve data — extract_qini_curves","text":"Extract QINI curve data","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract QINI curve data — extract_qini_curves","text":"","code":"extract_qini_curves(qini_objects, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Plotting — extract_qini_data","title":"Extract Qini Data for Plotting — extract_qini_data","text":"Extracts Qini curve data Qini object prepares plotting. function handles cases Qini objects may NULL missing required components, extending data needed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Plotting — extract_qini_data","text":"","code":"extract_qini_data(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Plotting — extract_qini_data","text":"qini_obj Qini object. name Name treatment arm. max_index Maximum index extend curve . verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Plotting — extract_qini_data","text":"data frame extracted Qini data containing: proportion Proportion population ranked predicted treatment effect gain Gain proportion curve Name curve (e.g., \"cate\" \"ate\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"Extract Qini Data Binary Treatment Plotting","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"","code":"extract_qini_data_binary(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"Extracts formats Qini curve data maq object multi-arm treatments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"","code":"extract_qini_data_multi(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"qini_obj Qini object maq. name Name treatment comparison. max_index Maximum index extend curve . verbose Logical indicating whether display detailed messages.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"data frame proportion, gain, curve columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_tree_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract essential information from a policy tree — extract_tree_info","title":"Extract essential information from a policy tree — extract_tree_info","text":"Extract essential information policy tree Extract essential information policy tree","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_tree_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract essential information from a policy tree — extract_tree_info","text":"","code":"extract_tree_info(tree, var_names)  extract_tree_info(tree, var_names)"},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Margot Example Data — fetch_margot_data","title":"Fetch Margot Example Data — fetch_margot_data","text":"Downloads loads margot example datasets. default, returns small simulated dataset suitable examples. full dataset used publications teaching, specify version = \"full\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Margot Example Data — fetch_margot_data","text":"","code":"fetch_margot_data(version = \"example\", cache = TRUE, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Margot Example Data — fetch_margot_data","text":"version Character string specifying dataset version fetch. Options : - \"example\" (default): Small simulated dataset (~1MB) included package - \"v1\": Original full simulated NZAVS-style data (~27MB) - \"v2\": Updated simulated data additional waves (~35MB) - \"latest\": recent version available cache Logical. TRUE (default), caches downloaded data locally avoid repeated downloads. quiet Logical. FALSE (default), shows download progress.","code":""},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Margot Example Data — fetch_margot_data","text":"data frame containing requested margot example data","code":""},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch Margot Example Data — fetch_margot_data","text":"example dataset small simulated dataset included package, suitable running examples tests. full datasets (v1, v2) larger simulated datasets mirror structure New Zealand Attitudes Values Study (NZAVS) contain real participant data. Full datasets hosted Open Science Framework (OSF) downloaded first use. Subsequent calls use cached version unless cache = FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/fetch_margot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Margot Example Data — fetch_margot_data","text":"","code":"# load small example dataset (included in package) df_example <- fetch_margot_data() #> ℹ Loading built-in example dataset  if (FALSE) { # \\dontrun{ # fetch full simulated dataset from OSF df_full <- fetch_margot_data(version = \"v1\")  # fetch latest version df_latest <- fetch_margot_data(version = \"latest\")  # force re-download df_fresh <- fetch_margot_data(version = \"v1\", cache = FALSE) } # }"},{"path":"https://go-bayes.github.io/margot/reference/format_ate_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ATE value — format_ate_value","title":"Format ATE value — format_ate_value","text":"Format ATE value","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_ate_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ATE value — format_ate_value","text":"","code":"format_ate_value(model_id, models)"},{"path":"https://go-bayes.github.io/margot/reference/format_evidence_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Format evidence section with detailed statistics — format_evidence_section","title":"Format evidence section with detailed statistics — format_evidence_section","text":"Format evidence section detailed statistics","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_evidence_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format evidence section with detailed statistics — format_evidence_section","text":"","code":"format_evidence_section(   evidence_summary,   evidence_type,   header_text,   rate_results_list,   qini_results,   omnibus_results,   models,   spend_levels,   label_mapping )"},{"path":"https://go-bayes.github.io/margot/reference/format_evidence_section_by_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Format evidence section by category — format_evidence_section_by_category","title":"Format evidence section by category — format_evidence_section_by_category","text":"Format evidence section category","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_evidence_section_by_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format evidence section by category — format_evidence_section_by_category","text":"","code":"format_evidence_section_by_category(   evidence_summary,   category,   header_text,   rate_results_list,   qini_results,   omnibus_results,   models,   spend_levels,   label_mapping,   include_qini = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/format_minimal_decimals.html","id":null,"dir":"Reference","previous_headings":"","what":"Format number with minimal decimal places — format_minimal_decimals","title":"Format number with minimal decimal places — format_minimal_decimals","text":"Format number minimal decimal places","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_minimal_decimals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format number with minimal decimal places — format_minimal_decimals","text":"","code":"format_minimal_decimals(x, max_decimals = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/format_omnibus_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Format omnibus test results — format_omnibus_results","title":"Format omnibus test results — format_omnibus_results","text":"Format omnibus test results","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_omnibus_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format omnibus test results — format_omnibus_results","text":"","code":"format_omnibus_results(model_id, model_name, omnibus_results)"},{"path":"https://go-bayes.github.io/margot/reference/format_outcome_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Format detailed statistics for a single outcome — format_outcome_details","title":"Format detailed statistics for a single outcome — format_outcome_details","text":"Format detailed statistics single outcome","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_outcome_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format detailed statistics for a single outcome — format_outcome_details","text":"","code":"format_outcome_details(   model_id,   model_name,   evidence_row,   rate_results_list,   qini_results,   omnibus_results,   models,   spend_levels,   include_qini = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/format_qini_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format QINI differences at spend levels — format_qini_differences","title":"Format QINI differences at spend levels — format_qini_differences","text":"Format QINI differences spend levels","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_qini_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format QINI differences at spend levels — format_qini_differences","text":"","code":"format_qini_differences(model_id, qini_results, spend_levels)"},{"path":"https://go-bayes.github.io/margot/reference/format_rate_with_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Format RATE estimate with confidence interval — format_rate_with_ci","title":"Format RATE estimate with confidence interval — format_rate_with_ci","text":"Format RATE estimate confidence interval","code":""},{"path":"https://go-bayes.github.io/margot/reference/format_rate_with_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format RATE estimate with confidence interval — format_rate_with_ci","text":"","code":"format_rate_with_ci(rate_row, type)"},{"path":"https://go-bayes.github.io/margot/reference/generate_bootstrap_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bootstrap seeds from metaseed — generate_bootstrap_seeds","title":"Generate bootstrap seeds from metaseed — generate_bootstrap_seeds","text":"Generate bootstrap seeds metaseed","code":""},{"path":"https://go-bayes.github.io/margot/reference/generate_bootstrap_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bootstrap seeds from metaseed — generate_bootstrap_seeds","text":"","code":"generate_bootstrap_seeds(metaseed, n_bootstrap)"},{"path":"https://go-bayes.github.io/margot/reference/generate_extended_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate extended academic-style report — generate_extended_report","title":"Generate extended academic-style report — generate_extended_report","text":"Generate extended academic-style report","code":""},{"path":"https://go-bayes.github.io/margot/reference/generate_extended_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate extended academic-style report — generate_extended_report","text":"","code":"generate_extended_report(   evidence_summary,   selection_results,   rate_results_list,   rate_results,   qini_results,   omnibus_results,   models,   spend_levels,   label_mapping,   alpha = 0.05,   adjust = \"BH\",   use_cross_validation = FALSE,   cv_num_folds = NULL,   cv_results = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/generate_interpretation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate interpretation text — generate_interpretation","title":"Generate interpretation text — generate_interpretation","text":"Generate interpretation text","code":""},{"path":"https://go-bayes.github.io/margot/reference/generate_interpretation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate interpretation text — generate_interpretation","text":"","code":"generate_interpretation(   evidence_summary,   selection_results,   rate_results,   qini_results,   omnibus_results,   spend_levels )"},{"path":"https://go-bayes.github.io/margot/reference/generate_stability_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate stability seeds from metaseed — generate_stability_seeds","title":"Generate stability seeds from metaseed — generate_stability_seeds","text":"Generate stability seeds metaseed","code":""},{"path":"https://go-bayes.github.io/margot/reference/generate_stability_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate stability seeds from metaseed — generate_stability_seeds","text":"","code":"generate_stability_seeds(metaseed, n_iterations)"},{"path":"https://go-bayes.github.io/margot/reference/get_bootstrap_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bootstrap indices based on variation type — get_bootstrap_indices","title":"Get bootstrap indices based on variation type — get_bootstrap_indices","text":"Get bootstrap indices based variation type","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_bootstrap_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bootstrap indices based on variation type — get_bootstrap_indices","text":"","code":"get_bootstrap_indices(   not_missing,   vary_type,   train_prop,   sample_seed,   split_seed )"},{"path":"https://go-bayes.github.io/margot/reference/get_consensus_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get consensus tree information — get_consensus_info","title":"Get consensus tree information — get_consensus_info","text":"Get consensus tree information","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_consensus_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get consensus tree information — get_consensus_info","text":"","code":"get_consensus_info(object, model_name, depth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/get_consensus_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get consensus tree information — get_consensus_info","text":"object Object class \"margot_bootstrap_policy_tree\" model_name Model name extract depth Tree depth (1 2)","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_consensus_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get consensus tree information — get_consensus_info","text":"List consensus split information","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_outcome_transformation_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get outcome transformation information for inverse transformation — get_outcome_transformation_info","title":"Get outcome transformation information for inverse transformation — get_outcome_transformation_info","text":"Get outcome transformation information inverse transformation","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_outcome_transformation_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get outcome transformation information for inverse transformation — get_outcome_transformation_info","text":"","code":"get_outcome_transformation_info(model_name, original_df)"},{"path":"https://go-bayes.github.io/margot/reference/get_stability_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stability indices based on variation type — get_stability_indices","title":"Get stability indices based on variation type — get_stability_indices","text":"Get stability indices based variation type","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_stability_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stability indices based on variation type — get_stability_indices","text":"","code":"get_stability_indices(   not_missing,   vary_type,   train_prop,   sample_seed,   split_seed )"},{"path":"https://go-bayes.github.io/margot/reference/get_variable_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variable importance from bootstrap results — get_variable_importance","title":"Extract variable importance from bootstrap results — get_variable_importance","text":"Extract variable importance bootstrap results","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_variable_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variable importance from bootstrap results — get_variable_importance","text":"","code":"get_variable_importance(object, model_name = NULL, depth = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/get_variable_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variable importance from bootstrap results — get_variable_importance","text":"object Object class \"margot_bootstrap_policy_tree\" model_name Optional model name extract. NULL, returns . depth Tree depth (1 2). NULL, returns average across depths.","code":""},{"path":"https://go-bayes.github.io/margot/reference/get_variable_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variable importance from bootstrap results — get_variable_importance","text":"Data frame variable importance scores","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Results by Comparison — group_results_by_comparison","title":"Group Results by Comparison — group_results_by_comparison","text":"Groups results multi-arm causal forest analysis comparison levels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Results by Comparison — group_results_by_comparison","text":"","code":"group_results_by_comparison(results_list)"},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Results by Comparison — group_results_by_comparison","text":"results_list list results margot_multi_arm_causal_forest.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Results by Comparison — group_results_by_comparison","text":"list grouped results comparison levels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Annotate Treatment Effect Estimates — group_tab","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports variety sorting options including alphabetical, magnitude (ascending descending), E-value bound (ascending descending), custom order, default alias backward compatibility. also handles original scale estimates available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"group_tab(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"df Data frame containing variables interest, list containing results data frame label mapping transform_to_original_scale(). type Type treatment effect analyze. One 'RR' (Risk Ratio) 'RD' (Risk Difference). Defaults 'RD'. order Sorting option outcomes. Options : 'alphabetical': sort outcome name (–Z) 'magnitude_desc': sort absolute effect size, descending (default 'magnitude') 'magnitude_asc': sort absolute effect size, ascending 'evaluebound_desc': sort E-value bound, descending 'evaluebound_asc': sort E-value bound, ascending 'custom': user-defined order (requires custom_order) 'default': alias 'magnitude_desc' (deprecated) Default 'default'. custom_order Character vector specifying custom outcome ordering, used order = 'custom'. Must contain outcomes exactly .","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"data frame arranged according `order`, annotated : Estimate category (positive, negative, reliable) Formatted label effect confidence interval Optional original-scale label _original columns present","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function detects whether `df` list output transform_to_original_scale() extracts `results_df` `label_mapping` accordingly. ensures `outcome` column, applies label mapping, sorts based chosen `order`. New options 'magnitude_desc' 'magnitude_asc' sort absolute effect size; 'evaluebound_desc' 'evaluebound_asc' sort E-Value bound; 'alphabetical' sorts outcome name; 'custom' respects user-provided vector; 'default' alias 'magnitude_desc'.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"# descending magnitude (default for 'default') result_df <- group_tab(df = analysis_df, order = \"default\") #> Error in group_tab(df = analysis_df, order = \"default\"): could not find function \"group_tab\"  # ascending magnitude result_df <- group_tab(df = analysis_df, order = \"magnitude_asc\") #> Error in group_tab(df = analysis_df, order = \"magnitude_asc\"): could not find function \"group_tab\"  # strongest E-value bound first result_df <- group_tab(df = analysis_df, order = \"evaluebound_desc\") #> Error in group_tab(df = analysis_df, order = \"evaluebound_desc\"): could not find function \"group_tab\"  # alphabetical result_df <- group_tab(df = analysis_df, order = \"alphabetical\") #> Error in group_tab(df = analysis_df, order = \"alphabetical\"): could not find function \"group_tab\"  # custom ordering custom_order <- c(\"Outcome3\", \"Outcome1\", \"Outcome2\") result_df <- group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order) #> Error in group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order): could not find function \"group_tab\""},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports variety sorting options including alphabetical, magnitude (ascending descending), E-value bound (ascending descending), custom order, default alias backward compatibility. also handles original scale estimates available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"","code":"group_tab_deprecated(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"df Data frame containing variables interest, list containing results data frame label mapping transform_to_original_scale(). type Type treatment effect analyze. One 'RR' (Risk Ratio) 'RD' (Risk Difference). Defaults 'RD'. order Sorting option outcomes. Options : 'alphabetical': sort outcome name (–Z) 'magnitude_desc': sort absolute effect size, descending (default 'magnitude') 'magnitude_asc': sort absolute effect size, ascending 'evaluebound_desc': sort E-value bound, descending 'evaluebound_asc': sort E-value bound, ascending 'custom': user-defined order (requires custom_order) 'default': alias 'magnitude_desc' (deprecated) Default 'default'. custom_order Character vector specifying custom outcome ordering, used order = 'custom'. Must contain outcomes exactly .","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"data frame arranged according `order`, annotated : Estimate category (positive, negative, reliable) Formatted label effect confidence interval Optional original-scale label _original columns present","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"function detects whether `df` list output transform_to_original_scale() extracts `results_df` `label_mapping` accordingly. ensures `outcome` column, applies label mapping, sorts based chosen `order`. New options 'magnitude_desc' 'magnitude_asc' sort absolute effect size; 'evaluebound_desc' 'evaluebound_asc' sort E-Value bound; 'alphabetical' sorts outcome name; 'custom' respects user-provided vector; 'default' alias 'magnitude_desc'.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab_deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and Annotate Treatment Effect Estimates — group_tab_deprecated","text":"","code":"# descending magnitude (default for 'default') result_df <- group_tab(df = analysis_df, order = \"default\") #> Error in group_tab(df = analysis_df, order = \"default\"): could not find function \"group_tab\"  # ascending magnitude result_df <- group_tab(df = analysis_df, order = \"magnitude_asc\") #> Error in group_tab(df = analysis_df, order = \"magnitude_asc\"): could not find function \"group_tab\"  # strongest E-value bound first result_df <- group_tab(df = analysis_df, order = \"evaluebound_desc\") #> Error in group_tab(df = analysis_df, order = \"evaluebound_desc\"): could not find function \"group_tab\"  # alphabetical result_df <- group_tab(df = analysis_df, order = \"alphabetical\") #> Error in group_tab(df = analysis_df, order = \"alphabetical\"): could not find function \"group_tab\"  # custom ordering custom_order <- c(\"Outcome3\", \"Outcome1\", \"Outcome2\") result_df <- group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order) #> Error in group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order): could not find function \"group_tab\""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"Reads RDS file specified `name` directory defined `dir_path` `push_mods`, returning data frame object stored within. .rds file found, searches file without .rds extension. function uses `` package resolve path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"","code":"here_read(name, dir_path = NULL, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"name Character string specifying name file read (without \".rds\" extension). dir_path Character string specifying directory path file read. NULL (default), uses `push_mods`. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"data frame R object stored file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"`dir_path` NULL, `push_mods` variable must defined user's environment within package, pointing directory files read. function first try read .rds file. found, attempt read file without .rds extension.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved an RDS file named \"my_df.rds\" in that directory my_df <- here_read(\"my_df\") #> Error in here_read(\"my_df\"): object 'push_mods' not found  # Reading from a custom directory my_df <- here_read(\"my_df\", dir_path = \"~/custom_dir\") #> Error in here_read(\"my_df\", dir_path = \"~/custom_dir\"): File not found: ~/custom_dir/my_df.rds or ~/custom_dir/my_df"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"function deprecated removed future releases. reading data frames, consider using `here_read_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"here_read_arrow(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"name Character string specifying name Parquet file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- here_read_arrow(\"my_dataset\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"Reads `.qs` file specified `name` directory defined `dir_path`, returning data frame object stored within. function uses `qs` package efficiently read `.qs` files `` package construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"","code":"here_read_qs(name, dir_path = NULL, nthreads = 1, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"name Character string specifying name `.qs` file read (without \".qs\" extension). dir_path Character string specifying directory path file read. NULL (default), uses `push_mods`. nthreads Integer specifying number threads use decompression. Default 1. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"data frame object representing data stored specified `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"`dir_path` NULL, `push_mods` variable must defined user's environment within package, pointing directory files read. function throw error specified file exist read `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved a `.qs` file named \"my_dataset.qs\" in that directory my_df <- here_read_qs(\"my_dataset\") #> Error in here_read_qs(\"my_dataset\"): object 'push_mods' not found  # Reading from a custom directory with multiple threads my_df <- here_read_qs(\"my_dataset\", dir_path = \"~/custom_dir\", nthreads = 4) #> Error in here_read_qs(\"my_dataset\", dir_path = \"~/custom_dir\", nthreads = 4): File not found: ~/custom_dir/my_dataset.qs"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame as RDS File in a Specified Directory — here_save","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Saves provided data frame RDS file using specified name, within directory defined `push_mods` function uses `` package construct path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"here_save(df, name, dir_path = NULL, compress = TRUE, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"df Data frame object saved. object want persist disk. name Character string specifying base name file. \".rds\" extension automatically appended name. dir_path Character string specifying directory path file saved. NULL (default), uses `push_mods`. compress Logical character string specifying type compression use. See `?saveRDS` details. Default TRUE. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Invisibly returns full path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"`dir_path` NULL, `push_mods` variable defined user's environment within package point directory files saved. assumed specified directory exists. function create directories.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"# assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save(my_df, \"my_df\") #> Error in here_save(my_df, \"my_df\"): object 'push_mods' not found  # specifying a custom directory here_save(my_df, \"my_df\", dir_path = \"~/custom_dir\", compress = \"xz\") #> Warning: cannot open compressed file '/Users/joseph/custom_dir/my_df.rds', probable reason 'No such file or directory' #> Error in xzfile(file, mode): cannot open the connection"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"function deprecated removed future releases. saving data frames, consider using `here_save_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"here_save_arrow(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"df Data frame saved. name Character string specifying base name file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_arrow(my_df, \"my_saved_dataframe\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"Saves provided data frame object `.qs` file using specified name, within directory defined `dir_path`. function leverages `qs` package write data `.qs` format enhanced compression efficient storage quick access R.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"","code":"here_save_qs(obj, name, dir_path, preset = \"high\", nthreads = 1)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"obj Data frame object saved. object want persist disk `.qs` format. name Character string specifying base name file (without \".qs\" extension). dir_path Character string specifying directory path file saved. preset Character string specifying compression preset. Default \"high\" better compression. nthreads Integer specifying number threads use compression. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"Invisible NULL. primary effect function side effect writing `.qs` file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"`dir_path` argument must point existing directory. function create directories; assumes specified directory already exists. function uses enhanced compression settings default minimize file size.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"","code":"my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_qs(my_df, \"my_saved_dataframe\", \"~/mydata\") #> Error in qs::qsave(obj, file_path, preset = preset, nthreads = nthreads): For file ~/mydata/my_saved_dataframe.qs: Failed to open for writing. Does the directory exist? Do you have file permissions? Is the file name long? (>255 chars)"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"function takes list data frames, performs multiple imputation fill missing values using 'mice' package, combines imputed datasets single dataset. imputations performed separately data frame list, results combined 'mids' object, cleaned returned.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"impute_and_combine(   list_df,   m = 10,   exclude_vars = c(\"t0_sample_frame\", \"id\", \"t0_sample_origin_names_combined\") )"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"list_df list containing data frames perform multiple imputation. m number multiple imputations perform data frame. exclude_vars vector variable names excluded imputation model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"data frame combines imputed datasets, unnecessary columns removed         row names reset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming list_df is a list of data frames with missing values imputed_data <- impute_and_combine(list_df, m = 5) print(imputed_data) } # }"},{"path":"https://go-bayes.github.io/margot/reference/integrated_difference_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Integrated Difference for Simple Baseline — integrated_difference_simple","title":"Compute Integrated Difference for Simple Baseline — integrated_difference_simple","text":"comparing simple baseline, computes integrated difference comparison curve simple baseline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/integrated_difference_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Integrated Difference for Simple Baseline — integrated_difference_simple","text":"","code":"integrated_difference_simple(object, baseline, spend, ...)"},{"path":"https://go-bayes.github.io/margot/reference/integrated_difference_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Integrated Difference for Simple Baseline — integrated_difference_simple","text":"object maq object (comparison curve) baseline qini_simple_baseline object spend spend level integrate ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/integrated_difference_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Integrated Difference for Simple Baseline — integrated_difference_simple","text":"list estimate std.err","code":""},{"path":"https://go-bayes.github.io/margot/reference/interpret_depth2_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret depth-2 only bootstrap results — interpret_depth2_only","title":"Interpret depth-2 only bootstrap results — interpret_depth2_only","text":"Interpret depth-2 bootstrap results","code":""},{"path":"https://go-bayes.github.io/margot/reference/interpret_depth2_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret depth-2 only bootstrap results — interpret_depth2_only","text":"","code":"interpret_depth2_only(   object,   model_name,   outcome_name,   outcome_label,   metrics,   n_bootstrap,   stability_threshold,   decimal_places,   format,   include_theory = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/interpret_depth2_only_stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret depth-2 only stability results — interpret_depth2_only_stability","title":"Interpret depth-2 only stability results — interpret_depth2_only_stability","text":"Interpret depth-2 stability results","code":""},{"path":"https://go-bayes.github.io/margot/reference/interpret_depth2_only_stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret depth-2 only stability results — interpret_depth2_only_stability","text":"","code":"interpret_depth2_only_stability(   object,   model_name,   outcome_name,   outcome_label,   metrics,   n_iterations,   stability_threshold,   decimal_places,   format,   include_theory = TRUE,   label_mapping = NULL,   include_ci = FALSE,   ci_level = 0.95 )"},{"path":"https://go-bayes.github.io/margot/reference/interpret_single_cv_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Single CV Target Results — interpret_single_cv_target","title":"Interpret Single CV Target Results — interpret_single_cv_target","text":"Interpret Single CV Target Results","code":""},{"path":"https://go-bayes.github.io/margot/reference/interpret_single_cv_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Single CV Target Results — interpret_single_cv_target","text":"","code":"interpret_single_cv_target(cv_data, target, flipped_outcomes = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/list_margot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Margot Datasets — list_margot_data","title":"List Available Margot Datasets — list_margot_data","text":"Shows information available margot example datasets","code":""},{"path":"https://go-bayes.github.io/margot/reference/list_margot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Margot Datasets — list_margot_data","text":"","code":"list_margot_data(verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/list_margot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available Margot Datasets — list_margot_data","text":"verbose Logical. TRUE (default), prints formatted table. FALSE, returns data silently.","code":""},{"path":"https://go-bayes.github.io/margot/reference/list_margot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Margot Datasets — list_margot_data","text":"tibble information available datasets (invisibly verbose = TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/list_margot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available Margot Datasets — list_margot_data","text":"","code":"# show available datasets list_margot_data() #>  #> ── Available Margot Datasets ── #>  #>  #> ℹ example: Small example dataset (built-in, ~1MB) #> ℹ v1: Original simulated NZAVS-style data (27MB) (27.2 MB) #> ℹ v2: Updated simulated data with additional waves (35 MB) #>  #> Use `fetch_margot_data(version = '...')` to load a dataset  # get as tibble datasets <- list_margot_data(verbose = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate E-values for LMTP Output — lmtp_evalue_tab","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"function takes output `margot_tab_lmtp()`, contains estimates treatment effects, calculates E-values assess robustness estimates potential unmeasured confounding. E-values quantify minimum strength association, risk ratio scale, unmeasured confounder need treatment outcome, fully explain away observed association. function supports risk differences (RD) risk ratios (RR) scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"lmtp_evalue_tab(x, delta = 1, sd = 1, scale = c(\"RD\", \"RR\"))"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"x data frame output `margot_tab_lmtp()` containing estimates interest. delta hypothesized increase outcome, used `scale` \"RD\". Default 1. sd standard deviation outcome, used `scale` \"RD\". Default 1. scale character string indicating scale estimate: \"RD\" risk difference, \"RR\" risk ratio. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"data frame similar `x`, additional columns E-Value lower bound, excluding   'standard_error' column.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'tab_contrast_hours_charity_z_null' is a data frame output from `margot_lmtp_tab()` lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RD\") lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RR\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"","code":"manager_boilerplate_measures(...)"},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"attach policy-value tests to a subset of outcomes — margot_add_policy_batch","title":"attach policy-value tests to a subset of outcomes — margot_add_policy_batch","text":"pared-back replacement earlier, complex batch helper. simply iterates outcomes pass `keep`, calls `margot_add_policy_p()` model, invisibly returns updated `cf_out` can keep piping.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"attach policy-value tests to a subset of outcomes — margot_add_policy_batch","text":"","code":"margot_add_policy_batch(cf_out, keep, depth = 2L, R = 999L, seed = 2025L)"},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"attach policy-value tests to a subset of outcomes — margot_add_policy_batch","text":"cf_out list. full **margot** result. keep character. outcome names update (without `model_` prefix). depth integer. policy-tree depth. default 2. R, seed bootstrap settings underlying test (defaults 999 / 2025).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"attach policy-value tests to a subset of outcomes — margot_add_policy_batch","text":"modified `cf_out` (invisibly).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_p.html","id":null,"dir":"Reference","previous_headings":"","what":"add or refresh a policy‑value test for one model — margot_add_policy_p","title":"add or refresh a policy‑value test for one model — margot_add_policy_p","text":"add refresh policy‑value test one model","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add or refresh a policy‑value test for one model — margot_add_policy_p","text":"","code":"margot_add_policy_p(model, depth = 2L, R = 999L, seed = 2025L)"},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add or refresh a policy‑value test for one model — margot_add_policy_p","text":"model list. One element `margot$results`. R, seed Passed [margot_compute_policy_value()].","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bootstrap policy-value tests for multiple depths — margot_add_policy_values","title":"Add bootstrap policy-value tests for multiple depths — margot_add_policy_values","text":"Add bootstrap policy-value tests multiple depths","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bootstrap policy-value tests for multiple depths — margot_add_policy_values","text":"","code":"margot_add_policy_values(model, depths = c(1L, 2L), R = 499L, seed = 42L)"},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bootstrap policy-value tests for multiple depths — margot_add_policy_values","text":"model list. One element `margot$results`. depths integer vector. Depths evaluate (default `c(1, 2)`). R, seed Passed [margot_compute_policy_value()].","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bootstrap policy-value tests for multiple depths — margot_add_policy_values","text":"modified `model` (invisibly).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach policy-value tests to a batch of models — margot_add_policy_values_batch","title":"Attach policy-value tests to a batch of models — margot_add_policy_values_batch","text":"Runs `margot_compute_policy_value()` specified depths outcome, optionally parallel via **future**/**furrr**. runs `margot_compute_policy_value()` requested depths outcome, parallel (via **future**/**furrr**) sequentially.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach policy-value tests to a batch of models — margot_add_policy_values_batch","text":"","code":"margot_add_policy_values_batch(   cf_out,   outcomes = NULL,   depths = c(1L, 2L),   R = 499L,   seed = 42L,   parallel = FALSE )  margot_add_policy_values_batch(   cf_out,   outcomes = NULL,   depths = c(1L, 2L),   R = 499L,   seed = 42L,   parallel = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach policy-value tests to a batch of models — margot_add_policy_values_batch","text":"cf_out list. margot result containing `$results` `$outcome_vars`. outcomes character NULL; outcome names without `model_` prefix. `NULL` → outcomes. depths integer vector; tree depths evaluate. default `c(1L, 2L)`. R integer ≥ 199; bootstrap replicates. default `499L`. seed integer; rng seed. default `42L`. parallel logical; run parallel via **furrr**? default `FALSE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_add_policy_values_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach policy-value tests to a batch of models — margot_add_policy_values_batch","text":"invisibly returns modified `cf_out` added policy-value tests invisibly returns modified `cf_out`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_policy_p.html","id":null,"dir":"Reference","previous_headings":"","what":"adjust policy-value p-values for multiplicity — margot_adjust_policy_p","title":"adjust policy-value p-values for multiplicity — margot_adjust_policy_p","text":"adds adjusted p-values. caller can flag result significant using metric.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_policy_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adjust policy-value p-values for multiplicity — margot_adjust_policy_p","text":"","code":"margot_adjust_policy_p(tbl, method = \"bonferroni\", alpha = 0.05)"},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_policy_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adjust policy-value p-values for multiplicity — margot_adjust_policy_p","text":"tbl data frame returned [margot_collect_policy_values()]. must include columns `p_value` (raw two-sided) `estimate`. method character. multiplicity correction `p_adj` column: option [stats::p.adjust()]. default \"bonferroni\". alpha numeric. threshold defines `significant` flag. default 0.05.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_policy_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adjust policy-value p-values for multiplicity — margot_adjust_policy_p","text":"`tbl` two extra columns: * `p_adj`        – adjusted p-value * `significant`  – logical; TRUE p_adj < `alpha`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"function calculates adjusts weights censoring, combining sample weights provided. also offers options trimming normalising resulting weights. Progress reported using cli package.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"","code":"margot_adjust_weights(   pscore,   censoring_indicator,   sample_weights = NULL,   trim = TRUE,   normalize = TRUE,   lower_percentile = 0.01,   upper_percentile = 0.99,   na.rm = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"pscore Numeric vector predicted probabilities censoring model. Values must 0 1. censoring_indicator Logical vector 0/1 numeric vector indicating censoring status (TRUE/1 censored, FALSE/0 ). sample_weights Optional numeric vector sample weights. trim Logical; whether trim weights (default TRUE). normalize Logical; whether normalise weights (default TRUE). lower_percentile Numeric; lower percentile trimming (default 0.01). upper_percentile Numeric; upper percentile trimming (default 0.99). na.rm Logical; whether remove NA values (default TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"list containing adjusted weights summary statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":null,"dir":"Reference","previous_headings":"","what":"convert an amelia object to a mice object — margot_amelia_to_mice","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"convert amelia object mice object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"","code":"margot_amelia_to_mice(amelia_obj)"},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"amelia_output object class `amelia`, containing imputed datasets Amelia package","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"`mids` object compatible `mice` package, structured original dataset imputed values","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"","code":"# load Amelia package and perform imputation library(Amelia) #> Loading required package: Rcpp #> ##  #> ## Amelia II: Multiple Imputation #> ## (Version 1.8.3, built: 2024-11-07) #> ## Copyright (C) 2005-2025 James Honaker, Gary King and Matthew Blackwell #> ## Refer to http://gking.harvard.edu/amelia/ for more information #> ##  data(africa) # example dataset from Amelia package amelia_output <- amelia(x = africa, m = 5, idvars = \"country\") # impute data #> -- Imputation 1 -- #>  #>   1  2  3  4 #>  #> -- Imputation 2 -- #>  #>   1  2  3 #>  #> -- Imputation 3 -- #>  #>   1  2  3  4 #>  #> -- Imputation 4 -- #>  #>   1  2 #>  #> -- Imputation 5 -- #>  #>   1  2 #>   # convert amelia object to mice object mids_obj <- margot_amelia_to_mice(amelia_output) #> Error in margot_amelia_to_mice(amelia_output): could not find function \"margot_amelia_to_mice\"  # verify mids object print(mids_obj) #> Error: object 'mids_obj' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"function analyzes propensity score overlap covariate balance outputs margot_causal_forest() margot_flip_forests(). provides diagnostics assessing validity causal estimates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"","code":"margot_assess_overlap(   model_results,   model_names = NULL,   exposure_name = NULL,   label_mapping = NULL,   plot = TRUE,   save_plots = FALSE,   output_dir = NULL,   theme = \"classic\",   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"model_results Output margot_causal_forest() margot_flip_forests() model_names Character vector model names assess. NULL, models. exposure_name Character string naming exposure/treatment variable. NULL, defaults \"Treatment\". label_mapping Named list mapping variable names custom labels exposure. plot Logical indicating whether create overlap plots. Default TRUE. save_plots Logical indicating whether save plots. Default FALSE. output_dir Directory save plots save_plots TRUE. theme Character string specifying ggplot2 theme. Default \"classic\". Options include \"classic\", \"minimal\", \"bw\", \"gray\", \"light\", \"dark\", \"void\". verbose Logical detailed messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"list containing: overlap_summaryData frame overlap statistics model propensity_plotsList ggplot objects (plot = TRUE) balance_tablesCovariate balance tables model trimming_summarySummary observations trimmed due poor overlap text_summaryCharacter string prose summary suitable reports","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"function assesses overlap using several metrics: Propensity score distributions treatment group Common support region statistics Test calibration grf (differential prediction test) Covariate balance within propensity score strata Poor overlap (propensity scores near 0 1) indicates limited comparability treatment groups may lead unreliable causal estimates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess Covariate Overlap from Causal Forest Models — margot_assess_overlap","text":"","code":"if (FALSE) { # \\dontrun{ # assess overlap for all models overlap_results <- margot_assess_overlap(model_results)  # assess specific models only overlap_results <- margot_assess_overlap(   model_results,   model_names = c(\"model_outcome1\", \"model_outcome2\") )  # save plots overlap_results <- margot_assess_overlap(   model_results,   save_plots = TRUE,   output_dir = \"output/overlap_diagnostics\" )  # use text summary in a report cat(overlap_results$text_summary)  # use different theme overlap_results <- margot_assess_overlap(   model_results,   theme = \"minimal\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_variable_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Variable Correlations for Policy Tree Analysis — margot_assess_variable_correlation","title":"Assess Variable Correlations for Policy Tree Analysis — margot_assess_variable_correlation","text":"Analyzes correlations among covariates used policy tree analysis. helps identify groups correlated variables may substitute tree splits, explaining apparent instability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_variable_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Variable Correlations for Policy Tree Analysis — margot_assess_variable_correlation","text":"","code":"margot_assess_variable_correlation(   model_results,   model_name,   correlation_threshold = 0.5,   method = c(\"pearson\", \"spearman\", \"kendall\"),   plot = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_variable_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Variable Correlations for Policy Tree Analysis — margot_assess_variable_correlation","text":"model_results List returned margot_causal_forest() (bootstrap results). Must run save_data = TRUE access covariate data. model_name Character string specifying model analyze correlation_threshold Numeric threshold considering variables correlated (default 0.5) method Correlation method: \"pearson\", \"spearman\", \"kendall\" (default \"pearson\") plot Logical: Create correlation heatmap (default TRUE) label_mapping Optional named list mapping variable names labels. NULL, uses automatic transformation via transform_var_name()","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_assess_variable_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Variable Correlations for Policy Tree Analysis — margot_assess_variable_correlation","text":"List containing: correlation_matrix: Full correlation matrix (labelled row/column names) high_correlations: Pairs variables |r| > threshold (labels) correlation_clusters: Groups intercorrelated variables (labels) summary_text: Narrative summary findings (using labels)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"function creates data frame maps standard z-scores corresponding values original data scale log-transformed data. uses `back_transform_log_z` function perform back-transformation presents results tidy data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"","code":"margot_back_transform_log_z(   log_mean,   log_sd,   z_scores = c(-2, -1, -0.5, 0, 0.5, 1, 2),   label = \"data_scale\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"log_mean mean log-transformed dataset z-scores calculated. log_sd standard deviation log-transformed dataset z-scores calculated. z_scores Optional vector z-scores transform. Defaults c(-2, -1, -0.5, 0, 0.5, 1, 2) representing common points normal distribution. label Optional string label data scale column. Defaults \"data_scale\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"data frame two columns: z_score original data scale values.   name second column value `label` parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"","code":"# Get mean and sd from original log-transformed income data log_mean_inc <- mean(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found log_sd_inc <- sd(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found  # Create mapping table with default z-scores income_mapping <- margot_back_transform_log_z(   log_mean = log_mean_inc,   log_sd = log_sd_inc,   label = \"household_income\" ) #> Error: object 'log_mean_inc' not found print(income_mapping) #> Error: object 'income_mapping' not found  # Create mapping with custom z-scores custom_mapping <- margot_back_transform_log_z(   log_mean = log_mean_inc,   log_sd = log_sd_inc,   z_scores = c(-1, 0, 1),   label = \"household_income\" ) #> Error: object 'log_mean_inc' not found print(custom_mapping) #> Error: object 'custom_mapping' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"function deprecated margot 0.2.1.65. Please use margot_policy() instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"","code":"margot_batch_policy(   result_outcomes,   policy_tree_args = list(),   decision_tree_args = list(),   dpi = 600,   width = 12,   height = 12,   save_plots = TRUE,   output_dir = here::here(push_mods),   spend_levels = 0.1,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"result_outcomes list containing results margot_multi_arm_causal_forest(). policy_tree_args list arguments pass margot_plot_policy_tree(). Default list(). decision_tree_args list arguments pass margot_plot_decision_tree(). Default list(). dpi resolution saved plots dots per inch. Default 600. width width saved plots inches. Default 12. height height saved plots inches. Default 12. save_plots Logical indicating whether save plots disk. Default TRUE. output_dir directory save plots . Default ::(push_mods). spend_levels vector spend levels use difference gain summaries. Default 0.1. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"list element corresponds model input   `result_outcomes`. element list containing: policy_tree_plot ggplot object policy tree plot policy_tree_interpretation character string interpreting policy tree qini_plot ggplot object Qini plot decision_tree_visualisation ggplot object visualizing decision tree policy_combo_plot ggplot object policy combo plot diff_gain_summaries nested list containing difference gain summaries spend level","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple batched model outputs (with covariates & metadata) — margot_bind_models","title":"Combine multiple batched model outputs (with covariates & metadata) — margot_bind_models","text":"function combines either \"causal forest\" \"lmtp\" batched model outputs single object, provided share compatible structures.  now also preserves `covariates`, `data`, `weights`, flip rescue metadata binding causal forest outputs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple batched model outputs (with covariates & metadata) — margot_bind_models","text":"","code":"margot_bind_models(..., quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple batched model outputs (with covariates & metadata) — margot_bind_models","text":"... One batched model output objects. quiet Logical; TRUE, suppresses CLI feedback messages. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple batched model outputs (with covariates & metadata) — margot_bind_models","text":"single combined model output object.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind and format domain-specific tables or a single table — margot_bind_tables","title":"Bind and format domain-specific tables or a single table — margot_bind_tables","text":"function binds named list domain-specific tables, handles single data frame. optionally sorts raw E_Val_bound column, renames columns, highlights rows threshold, groups rows domain provided. Works latex, html, markdown output.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind and format domain-specific tables or a single table — margot_bind_tables","text":"","code":"margot_bind_tables(   tables_list,   sort_E_val_bound = c(\"none\", \"asc\", \"desc\"),   e_val_bound_threshold = 1.1,   highlight_color = \"yellow\",   bold = TRUE,   output_format = \"markdown\",   rename_cols = TRUE,   col_renames = list(`E-Value` = \"E_Value\", `E-Value bound` = \"E_Val_bound\"),   rename_ate = FALSE,   threshold_col = \"E_Val_bound\",   kbl_args = list(booktabs = TRUE, caption = \"Combined Results\", align = NULL) )"},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind and format domain-specific tables or a single table — margot_bind_tables","text":"tables_list named list data frames, domain table, single data frame. lists, row names captured \"Outcome\" column; data frames, applies. sort_E_val_bound character: one \"none\", \"asc\", \"desc\". default \"none\". e_val_bound_threshold numeric; threshold highlighting rows. default 1.1. highlight_color character NULL; background colour highlighted rows. default \"yellow\". bold logical; whether bold highlighted rows. default TRUE. output_format character; one \"latex\", \"html\", \"markdown\". default \"markdown\". rename_cols logical; whether apply column renaming. default TRUE. col_renames named list; mapping new_name = old_name renaming. default list(\"E-Value\" = \"E_Value\", \"E-Value bound\" = \"E_Val_bound\"). rename_ate logical; TRUE, renames effect column \"ATE\". default FALSE. threshold_col character; name (pre-rename) column test. default \"E_Val_bound\". kbl_args list; extra arguments kableExtra::kbl(). default list(booktabs=TRUE, caption=\"Combined Results\", align=NULL).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"function runs multiple GRF causal forest models enhanced features. addition estimating causal effects, can compute Rank-Weighted Average Treatment Effect (RATE) model. also gives option train separate \"Qini forest\" subset data compute Qini curves held-data, thereby avoiding -sample optimism Qini plots.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"","code":"margot_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 15,   save_models = TRUE,   train_proportion = 0.5,   train_prop = NULL,   qini_train_prop = NULL,   compute_conditional_means = TRUE,   compute_marginal_only = FALSE,   verbose = TRUE,   qini_treatment_cost = 1,   seed = 12345,   use_train_test_split = TRUE,   flip_outcomes = NULL,   flip_method = \"zscore\",   flip_scale_bounds = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modelled. covariates matrix covariates used GRF models. W vector binary treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. Note: Direct computation RATE, QINI, policy trees within function may deprecated future versions. Use margot_rate(), margot_qini(), margot_policy_tree() instead. top_n_vars Integer specifying number top variables use additional computations. Default 15. save_models Logical indicating whether save full GRF model objects. Default TRUE. train_proportion Numeric value 0 1 indicating proportion data use training set, NULL. Used policy trees QINI evaluation compute_marginal_only=FALSE. Must NULL compute_marginal_only=TRUE. Default 0.5. train_prop Deprecated. Use train_proportion instead. qini_train_prop Deprecated. Use train_proportion instead. compute_conditional_means Logical indicating whether compute conditional means using policytree::conditional_means(). represent expected outcomes treatment arm. Default TRUE. compute_marginal_only Logical indicating whether compute marginal (average) treatment effects, skipping heterogeneity metrics (QINI curves, RATE, policy trees). TRUE, train_proportion must NULL. FALSE (default), heterogeneity metrics computed using train/test splits. verbose Logical indicating whether display detailed messages execution. Default TRUE. qini_treatment_cost Scalar treatment cost per unit QINI calculations. Default 1. Lower values (e.g., 0.2) represent cheap treatments creating steeper QINI curves; higher values (e.g., 5) represent expensive treatments creating shallower curves. seed Integer. Random seed reproducibility train/test splits policy trees QINI evaluation. Default 12345. use_train_test_split Logical. TRUE (default), uses consistent train/test split : - main causal forest trained data (following GRF best practices honesty) - reported results (ATE, E-values, combined_table) computed TEST SET - Policy trees QINI also use train/test split - -data results stored split_info reference FALSE, main forest uses data estimation policy trees/QINI get splits. flip_outcomes Character vector list specifying outcomes flip (reverse score). - Character vector: applies default flip_method flip_scale_bounds listed outcomes - List: allows per-outcome specification, e.g., list(anxiety = list(method = \"ordinal\", scale_bounds = c(1, 7))) Flipped outcomes appended \"_r\" suffix results. flip_method Character string specifying default inversion method flip_outcomes provided: - \"zscore\": Simple negation (default). Assumes data already standardized (e.g., outcomes ending \"_z\"). - \"ordinal\": Invert ordinal scale using bounds. Use Likert scales bounded measures. flip_scale_bounds Numeric vector length 2 [min, max] named list bounds per outcome. Required flip_method = \"ordinal\" unless bounds inferred data. Example: c(1, 7) 7-point Likert scale, list(anxiety = c(1, 7), depression = c(0, 21)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"list containing:   * `results` - per-outcome diagnostics objects   * `combined_table` - combined e-value table across outcomes   * `outcome_vars` - vector outcome names   * `not_missing` - indices complete-case rows   * (`data`, `covariates`, `weights`, `W`) `save_data = TRUE`   * `full_models` `save_models = TRUE`   * `flip_info` `flip_outcomes` used - contains mapping metadata flipped outcomes","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"development version implements new architecture proper train/test splits, evaluation forests, integrated missing data handling. maintains 50/50 train/test split default supports toy data sampling.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"","code":"margot_causal_forest_dev(   data,   outcome_vars,   treatment = \"A\",   covariates = NULL,   weights = NULL,   train_prop = 0.5,   toy_data_prop = NULL,   grf_defaults = list(),   eval_forest = TRUE,   save_data = TRUE,   save_forests = TRUE,   handle_missing = \"complete\",   seed = 12345,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"data Data frame containing variables outcome_vars Character vector outcome variable names treatment Character name treatment variable (default: \"\") covariates Character vector covariate names. NULL, uses variables except outcomes, treatment, special columns. weights Optional weights vector column name train_prop Numeric. Proportion train/test split (default: 0.5) toy_data_prop Numeric. provided, uses random sample proportion testing (default: NULL) grf_defaults List parameters passed grf::causal_forest() eval_forest Logical. Whether create evaluation forest test set doubly robust scores (default: TRUE) save_data Logical. Whether save input data (default: TRUE) save_forests Logical. Whether save forest objects (default: TRUE) handle_missing Character. handle missing data: \"complete\" (default), \"impute\", \"forest\" (let forest handle ) seed Integer. Random seed (default: NULL) verbose Logical. Whether print progress (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"List containing: results List model results outcome data_info Information data splits missing values forests Causal forest objects (save_forests = TRUE) eval_forests Evaluation forest objects (eval_forest = TRUE) data Original data (save_data = TRUE) metadata Model metadata parameters","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"Key differences original margot_causal_forest(): - Consistent 50/50 train/test split analyses - Optional evaluation forests computing test set DR scores - Integrated missing data handling options - Support toy data sampling - Simplified structure focused forest estimation - Returns data needed downstream analysis functions evaluation forest trained training data used compute doubly robust scores test set, ensuring proper --sample evaluation QINI curves metrics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Development Version of Causal Forest with Enhanced Features — margot_causal_forest_dev","text":"","code":"if (FALSE) { # \\dontrun{ # Generate test data test_data <- margot_simulate_test_data()  # Run causal forest with default settings cf_results <- margot_causal_forest_dev(   data = test_data$data,   outcome_vars = c(\"Y1\", \"Y2\", \"Y3\", \"Y4\"),   treatment = \"A\" )  # Run with toy data for quick testing cf_results_toy <- margot_causal_forest_dev(   data = test_data$data,   outcome_vars = c(\"Y1\", \"Y2\"),   treatment = \"A\",   toy_data_prop = 0.1 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","title":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","text":"Parallelised, diagnostic‑rich variant `margot_causal_forest()`.  outcome‑specific forest estimated R worker via **future**.  `cli` messages checks sequential original preserved, still get granular reporting (dimension checks, Qini status, warnings, etc.).  Live progress bars emitted **progressr** using `cli` handler.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","text":"","code":"margot_causal_forest_parallel(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 15,   save_models = TRUE,   train_proportion = 0.5,   qini_split = TRUE,   train_prop = 0.5,   qini_train_prop = NULL,   compute_conditional_means = TRUE,   n_cores = future::availableCores() - 1,   verbose = TRUE,   qini_treatment_cost = 1,   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modelled. covariates matrix covariates used GRF models. W vector binary treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. Note: Direct computation RATE, QINI, policy trees within function may deprecated future versions. Use margot_rate(), margot_qini(), margot_policy_tree() instead. top_n_vars Integer specifying number top variables use additional computations. Default 15. save_models Logical indicating whether save full GRF model objects. Default TRUE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.5. qini_split Logical indicating whether separate train/test split exclusively Qini calculation. Default TRUE (.e., Qini computed --sample). train_prop Proportion data use training set qini_split=TRUE. Default 0.5. qini_train_prop Deprecated. Use train_prop instead. provided, override train_prop warning. compute_conditional_means Logical indicating whether compute conditional means using policytree::conditional_means(). represent expected outcomes treatment arm. Default TRUE. n_cores integer. number parallel workers (default = cores − 1). verbose Logical indicating whether display detailed messages execution. Default TRUE. qini_treatment_cost Scalar treatment cost per unit QINI calculations. Default 1. Lower values (e.g., 0.2) represent cheap treatments creating steeper QINI curves; higher values (e.g., 5) represent expensive treatments creating shallower curves. seed Integer. Random seed reproducibility train/test splits policy trees QINI evaluation. Default 12345.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","text":"list elements:   * `results`         – per‑outcome diagnostics objects   * `combined_table`  – rbind‑ed e‑value table across outcomes   * `outcome_vars`    – vector (successful) outcome names   * `not_missing`     – indices complete‑case rows   * (`data`, `covariates`, `weights`, `W`) `save_data = TRUE`   * `full_models` `save_models = TRUE`","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest_parallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Multiple Generalised Random Forest (GRF) Causal Forest Models in Parallel — margot_causal_forest_parallel","text":"Messages produced inside workers captured **future**   dispatched master session.  Progress bars update real time.    silence progress, call `progressr::handlers(\"\")` running.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"Transform year_measured Variable Based Clustered Conditions Within Waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"","code":"margot_censor(   dt,   cluster_id = \"rel_num\",   id_var = \"id\",   wave_var = \"wave\",   condition_var = \"rel_complete\",   condition_value = 0,   year_measured_var = \"year_measured\",   censor_final_wave = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"dt data.frame data.table long format containing repeated measures. cluster_id string specifying cluster identifier variable. Default \"rel_num\". id_var string specifying individual identifier variable. Default \"id\". wave_var string specifying variable indicating wave. Default \"wave\". condition_var string specifying condition variable. Default \"rel_complete\". condition_value value condition_var triggers transformation. Default 0. year_measured_var string specifying year_measured variable. Default \"year_measured\". censor_final_wave Logical. TRUE, censoring applied final wave; FALSE (default), final wave exempt.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"modified data.table updated year_measured values based condition.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor_lead.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Lead-Based Censoring to Longitudinal Data — margot_censor_lead","title":"Apply Lead-Based Censoring to Longitudinal Data — margot_censor_lead","text":"Apply Lead-Based Censoring Longitudinal Data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor_lead.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Lead-Based Censoring to Longitudinal Data — margot_censor_lead","text":"","code":"margot_censor_lead(   dt,   cluster_id = NULL,   id_var = \"id\",   wave_var = \"wave\",   condition_var,   condition_value = 0,   year_measured_var = \"year_measured\",   cluster_condition = \"ANY\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_censor_lead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Lead-Based Censoring to Longitudinal Data — margot_censor_lead","text":"dt data.frame data.table long format containing repeated measures. cluster_id string specifying cluster identifier variable. NULL, defaults id_var. id_var string specifying individual identifier variable. Default \"id\". wave_var string specifying variable indicating wave. Default \"wave\". condition_var string specifying condition variable create lead . condition_value value lead condition_var triggers transformation. Default 0. year_measured_var string specifying year_measured variable. Default \"year_measured\". cluster_condition String specifying cluster censoring logic: \"\" (default) \"\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor_lead.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Lead-Based Censoring to Longitudinal Data — margot_censor_lead","text":"modified data.table updated year_measured values based lead conditions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_collect_policy_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect policy-value summaries — margot_collect_policy_values","title":"Collect policy-value summaries — margot_collect_policy_values","text":"Collect policy-value summaries","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_collect_policy_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect policy-value summaries — margot_collect_policy_values","text":"","code":"margot_collect_policy_values(cf_out, depths = c(1L, 2L))"},{"path":"https://go-bayes.github.io/margot/reference/margot_collect_policy_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect policy-value summaries — margot_collect_policy_values","text":"cf_out list. **Normalised** margot result `policy_value_depth_*` slots present. depths integer vector. Depths include.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_collect_policy_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect policy-value summaries — margot_collect_policy_values","text":"`tibble` one row per outcome × depth.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"Takes multiple results tables `margot_plot` objects combines single formatted table using kableExtra, optional group headers section.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"","code":"margot_combine_results(   results,   options = NULL,   format = \"latex\",   digits = 2,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"results named list data frames, typically extracted `margot_plot` objects using `$transformed_table`. Names used section headers options provided. options Optional list options created `margot_plot_create_options()`. names results list. option object can include 'subtitle' used section header. format Output format kable. Default \"latex\". digits Number decimal places rounding numeric values. Default 2. ... Additional arguments passed kable().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"kable object can customized using kableExtra functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"group_rows function exists dplyr kableExtra packages.   function uses kableExtra::group_rows, causes harmless namespace   warning loading package.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"","code":"if (FALSE) { # \\dontrun{ # Suppose we have domain-based results: results_list <- list(   Health = list(     transformed_table = health_religious_vs_secular$transformed_table,     interpretation = health_religious_vs_secular$interpretation   ),   Psychological = list(     transformed_table = psych_religious_vs_secular$transformed_table,     interpretation = psych_religious_vs_secular$interpretation   ) )  # And corresponding options: options_list <- list(   Health = margot_plot_create_options(     subtitle = \"Health: Religious vs Secular (baseline)\",   ),   Psychological = margot_plot_create_options(     subtitle = \"Psychological: Religious vs Secular (baseline)\",   ) )  # Combine the results and print: combined_table <- margot_combine_results(   results = results_list,   options = options_list,   format = \"latex\",   booktabs = TRUE,   longtable = TRUE,   digits = 2 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare subgroups from a causal forest model. — margot_compare_groups","title":"Compare subgroups from a causal forest model. — margot_compare_groups","text":"Compare two sets treatment-effect estimates report differences.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare subgroups from a causal forest model. — margot_compare_groups","text":"","code":"margot_compare_groups(   group,   subgroup,   type = c(\"RD\", \"RR\"),   label_mapping = NULL,   decimal_places = 3,   group1_name = \"Group 1\",   group2_name = \"Group 2\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare subgroups from a causal forest model. — margot_compare_groups","text":"group data frame treatment effects confidence intervals primary group subgroup data frame treatment effects confidence intervals contrast group type Character; one `\"RD\"` `\"RR\"` (default: allowed) label_mapping Optional named vector nicer row labels decimal_places Number digits CI formatting (default: 3) group1_name Character; name use primary group (default: \"Group 1\") group2_name Character; name use contrast group (default: \"Group 2\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare subgroups from a causal forest model. — margot_compare_groups","text":"list :   - `results`: data frame columns `Outcomes` `Group Differences`   - `interpretation`: character string summarising reliable differences","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"function computes sample weights based gender achieve target gender balance population. assumes binary gender classification 1 represents male 0 represents female.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"","code":"margot_compute_gender_weights(data, male_col = \"male\", target_male_prop = 0.5)"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"data data frame containing gender information. male_col Character string specifying name column `data` indicates male gender (1 male, 0 female). Default \"male\". target_male_prop Numeric value 0 1 specifying target proportion males population. Default 0.5 (50% male).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"numeric vector sample weights. weight corresponds row input data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"function calculates weights , applied, adjust sample match specified target gender proportion. upweights underrepresented gender downweights overrepresented gender.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"","code":"# Create a sample dataset dat <- data.frame(id = 1:100, male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)))  # Compute weights weights <- margot_compute_gender_weights(dat, male_col = \"male\", target_male_prop = 0.5) #> Warning: `margot_compute_gender_weights()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_compute_gender_weights_by_wave()` instead.  # Check weight distribution table(round(weights, 3)) #>  #> 0.725 1.613  #>    69    31"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"Compute sample weights gender adjustment based baseline wave proportions. Compute sample weights gender adjustment based baseline wave proportions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"","code":"margot_compute_gender_weights_by_wave(   data,   male_col = \"male\",   wave_col = \"wave\",   target_wave,   target_male_prop = 0.5 )  margot_compute_gender_weights_by_wave(   data,   male_col = \"male\",   wave_col = \"wave\",   target_wave,   target_male_prop = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"data data frame containing gender wave information. male_col character string specifying column indicates male gender (1 male, 0 female). Default \"male\". wave_col character string specifying column indicating wave. Default \"wave\". target_wave value wave_col identifies baseline wave. target_male_prop numeric value 0 1 representing target proportion males. Default 0.5.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"numeric vector sample weights rows. numeric vector sample weights rows.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"function calculates gender proportions baseline wave computes weights overall sample aligns target gender distribution. weights applied rows. function computes sample proportions baseline wave calculates weights comparing proportions target proportions. upweights underrepresented gender downweights overrepresented gender. resulting weights applied full dataset. function calculates gender proportions baseline wave computes weights overall sample aligns target gender distribution. weights applied rows. function computes sample proportions baseline wave calculates weights comparing proportions target proportions. upweights underrepresented gender downweights overrepresented gender. resulting weights applied full dataset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"","code":"dat <- data.frame(   id = 1:100,   male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)),   wave = rep(1:2, each = 50) ) weights <- margot_compute_gender_weights_by_wave(dat,   male_col = \"male\",   wave_col = \"wave\",   target_wave = 1,   target_male_prop = 0.52 ) head(weights) #> [1] 0.7058824 0.7058824 1.6250000 0.7058824 0.7058824 1.6250000  dat <- data.frame(   id = 1:100,   male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)),   wave = rep(1:2, each = 50) ) weights <- margot_compute_gender_weights_by_wave(dat,   male_col = \"male\",   wave_col = \"wave\",   target_wave = 1,   target_male_prop = 0.52 ) head(weights) #> [1] 1.3 1.3 0.8 0.8 1.3 1.3"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_policy_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap test-set policy value — margot_compute_policy_value","title":"Bootstrap test-set policy value — margot_compute_policy_value","text":"Non-parametric bootstrap doubly-robust gain stored `policy_tree`. Computes difference mean gain policy average treatment effect evaluation fold.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_policy_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap test-set policy value — margot_compute_policy_value","text":"","code":"margot_compute_policy_value(model, depth = 2L, R = 499L, seed = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_policy_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap test-set policy value — margot_compute_policy_value","text":"model List; one outcome entry `margot` result. depth Integer; depth stored `policy_tree` (1 2). Default: 2. R Integer ≥ 199; number bootstrap replicates. Default: 499. seed Integer `NULL`; RNG seed reproducibility.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_policy_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap test-set policy value — margot_compute_policy_value","text":"Object class `policy_value_test` components: estimate Numeric; bootstrap estimate policy gain minus ATE. std.err Numeric; standard error bootstrap replicates. p.value Numeric; two-sided p-value. n_eval Integer; number evaluation observations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct a ","title":"Correct a ","text":"`margot_correct_combined_table()` takes **combined_table** produced various *margot* models (code) widens confidence interval according chosen         family–wise-error correction, **** recalculates *E*-values (lower bounds) match         new interval. default implements single–step **Bonferroni** correction \\(\\alpha = 0.05\\) advocated VanderWeele & Mathur (2019). `margot_correct_combined_table()` takes **combined_table** produced various *margot* models (code) widens confidence interval according chosen         family–wise-error correction, **** recalculates *E*-values (lower bounds) match         new interval. default implements single–step **Bonferroni** correction \\(\\alpha = 0.05\\) advocated VanderWeele & Mathur (2019).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct a ","text":"","code":"margot_correct_combined_table(   combined_table,   adjust = c(\"bonferroni\", \"none\"),   alpha = 0.05,   scale = c(\"RD\", \"RR\"),   delta = 1,   sd = 1 )  margot_correct_combined_table(   combined_table,   adjust = c(\"bonferroni\", \"none\"),   alpha = 0.05,   scale = c(\"RD\", \"RR\"),   delta = 1,   sd = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct a ","text":"combined_table data frame *least* columns `E[Y(1)]-E[Y(0)]` **** `E[Y(1)]/E[Y(0)]` `2.5 Extra columns (e.g. original *E*-values) carried . adjust multiplicity correction method: \"none\", \"bonferroni\" Bonferroni provides conservative family-wise error rate control. alpha Family-wise error-rate bonferroni. Default `0.05`. scale Scale use recomputing *E*-value. `\"RD\"` (risk difference / ATE, **default**) `\"RR\"` (risk ratio). delta, sd Arguments passed [EValue::evalues.OLS()] `scale = \"RD\"`.  Ignored `\"RR\"`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct a ","text":"data frame rows (order) `combined_table`,   updated `2.5 freshly computed `E_Value` `E_Val_bound`. data frame rows (order) `combined_table`,   updated `2.5 freshly computed `E_Value` `E_Val_bound`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":"how-the-correction-is-applied","dir":"Reference","previous_headings":"","what":"How the correction is applied","title":"Correct a ","text":"Let \\(m\\) number rows (tests). **Bonferroni** uses     $$ z^* = \\Phi^{-1}\\!\\bigl(1-\\alpha/(2m)\\bigr) $$     rescales original half-width. **Holm** first step-adjusts (two-sided) *p*-value     test, back-calculates *symmetric* CI whose coverage matches     adjusted *p*.  Point estimates **never** change. **BH** (Benjamini-Hochberg) applies FDR correction *p*-values,     back-calculates symmetric CIs. Controls false discovery rate rather     family-wise error rate. Let \\(m\\) number rows (tests). **Bonferroni** uses     $$ z^* = \\Phi^{-1}\\!\\bigl(1-\\alpha/(2m)\\bigr) $$     rescales original half-width. **none** applies correction, keeping original confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_combined_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correct a ","text":"VanderWeele TJ, Mathur MB (2019). *desirable properties Bonferroni correction: Bonferroni correction really bad?* **J Epidemiol** 188(3): 617–618. VanderWeele TJ, Mathur MB (2019). *desirable properties Bonferroni correction: Bonferroni correction really bad?* **J Epidemiol** 188(3): 617–618.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_multcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Proper Multiplicity Correction Using multcomp — margot_correct_multcomp","title":"Apply Proper Multiplicity Correction Using multcomp — margot_correct_multcomp","text":"Apply Proper Multiplicity Correction Using multcomp","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_multcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Proper Multiplicity Correction Using multcomp — margot_correct_multcomp","text":"","code":"margot_correct_multcomp(   model_fit,   contrast_matrix = NULL,   raw_table_df,   adjust = \"holm\",   alpha = 0.05,   scale = \"RD\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_multcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Proper Multiplicity Correction Using multcomp — margot_correct_multcomp","text":"model_fit fitted model object (lm, glm, etc.) contrast_matrix contrast matrix glht (NULL, uses identity matrix) raw_table_df original results data frame adjust correction method (\"holm\", \"bonferroni\") alpha significance level scale type effect (\"RD\" \"RR\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_correct_multcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Proper Multiplicity Correction Using multcomp — margot_correct_multcomp","text":"corrected data frame simultaneous confidence intervals","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"count dyads in longitudinal data — margot_count_dyads","title":"count dyads in longitudinal data — margot_count_dyads","text":"count dyads longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count dyads in longitudinal data — margot_count_dyads","text":"","code":"margot_count_dyads(   dat,   start_wave = 2009,   end_wave = 2022,   year_measured_val = 1,   rel_id_var = \"rel_num_l\",   complete_var = \"rel_complete\",   prev_wave_counts = c(1, 2, 3, 4) )"},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count dyads in longitudinal data — margot_count_dyads","text":"dat data frame containing longitudinal data. start_wave integer. first wave process (default: 2009). end_wave integer. last wave process (default: 2022). year_measured_val integer. value 'year_measured' filter (default: 1). rel_id_var character. name variable indicating relationship dyad (default: \"rel_num_l\"). complete_var character. name variable indicating complete dyad status (default: \"rel_complete\"). prev_wave_counts integer vector. previous wave thresholds count (default: c(1,2,3,4)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count dyads in longitudinal data — margot_count_dyads","text":"tibble columns :   - wave: survey wave number   - n_total: total number dyads (complete + singleton)   - n_single: number singleton dyads   - n_complete: number complete dyads   - n_wave_1plus: dyads 1+ previous waves   - n_wave_2plus: dyads 2+ previous waves   - n_wave_3plus: dyads 3+ previous waves   - n_wave_4plus: dyads 4+ previous waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"count individual participants in longitudinal data — margot_count_ids","title":"count individual participants in longitudinal data — margot_count_ids","text":"count individual participants longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count individual participants in longitudinal data — margot_count_ids","text":"","code":"margot_count_ids(   dat,   start_wave = 2009,   end_wave = 2022,   prev_wave_counts = c(1, 2, 3, 4),   opt_in_var = \"sample_frame_opt_in\",   opt_in_true = 1,   opt_in_false = 0 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count individual participants in longitudinal data — margot_count_ids","text":"dat data frame containing longitudinal data start_wave integer. first wave process (default: 2009) end_wave integer. last wave process (default: 2022) prev_wave_counts integer vector. previous wave thresholds count (default: c(1,2,3,4)) opt_in_var character. name opt-variable track (default: \"sample_frame_opt_in\") opt_in_true value indicating opted-status (default: 1) opt_in_false value indicating opted-status (default: 0)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count individual participants in longitudinal data — margot_count_ids","text":"tibble columns :   - wave: survey wave number   - n_total: cumulative unique participants current wave   - n_active: active participants current wave   - n_deceased: newly deceased current wave   - n_deceased_total: total deceased current wave   - n_returned: participants absent previous wave present earlier waves   - n_returned_total: total returnees current wave   - n_opt_in: newly opted-participants current wave   - n_opt_in_total: total opted-participants current wave   - n_wave_1plus: participants 1+ previous waves   - n_wave_2plus: participants 2+ previous waves   - n_wave_3plus: participants 3+ previous waves   - n_wave_4plus: participants 4+ previous waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"","code":"margot_create_bibliography(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"","code":"margot_create_database(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_debug_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug Qini Curve Data — margot_debug_qini","title":"Debug Qini Curve Data — margot_debug_qini","text":"Debug Qini Curve Data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_debug_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug Qini Curve Data — margot_debug_qini","text":"","code":"margot_debug_qini(model_results, model_name)"},{"path":"https://go-bayes.github.io/margot/reference/margot_debug_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug Qini Curve Data — margot_debug_qini","text":"model_results Output margot_causal_forest model_name Name model debug","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Based on Exposure Variables — margot_filter","title":"Filter Data Based on Exposure Variables — margot_filter","text":"function filters dataframe based levels single factor variable arranges dataframe identifier continuous variables present.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Based on Exposure Variables — margot_filter","text":"","code":"margot_filter(dat_wide, exposure_vars, sort_var = \"id\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Based on Exposure Variables — margot_filter","text":"dat_wide Dataframe filter. exposure_vars Vector names exposure variables consider. sort_var Optional; variable sort dataframes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Based on Exposure Variables — margot_filter","text":"list dataframes filtered levels factor variable arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"function now convenience wrapper around margot_causal_forest() flip_outcomes parameter. allows flipping existing models recomputing inverted outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"","code":"margot_flip_forests(   model_results,   flip_outcomes,   model_prefix = \"model_\",   flip_method = \"zscore\",   flip_scale_bounds = NULL,   grf_defaults = NULL,   parallel = FALSE,   n_cores = future::availableCores() - 1,   verbose = TRUE,   remove_original = TRUE,   qini_treatment_cost = 1,   train_proportion = NULL,   use_train_test_split = NULL,   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"model_results list containing model results margot_causal_forest(). flip_outcomes character vector outcome variable names models flipped. model_prefix character string indicating prefix used model names results list. Default \"model_\". flip_method Character string specifying default inversion method: - \"zscore\": Simple negation (default). Assumes data already standardized. - \"ordinal\": Invert ordinal scale using bounds. flip_scale_bounds Numeric vector length 2 [min, max] named list bounds per outcome. Required flip_method = \"ordinal\" unless bounds inferred data. grf_defaults list parameters pass GRF causal forest models. Default NULL, attempts extract parameters original fitted models. Providing explicit values ensures consistency original flipped models. Common parameters include num.trees, honesty, honesty.fraction, alpha, min.node.size, mtry. parallel Logical indicating whether use parallel processing. Default FALSE. n_cores Number cores use parallel processing. Default availableCores() - 1. verbose Logical indicating whether display detailed messages execution. Default TRUE. remove_original Logical indicating whether remove original (non-flipped) models creating flipped versions. Default TRUE. TRUE, flipped models \"_r\" suffix remain; FALSE, original flipped models kept. qini_treatment_cost Scalar treatment cost per unit QINI calculations. Default 1. Lower values (e.g., 0.2) represent cheap treatments creating steeper QINI curves; higher values (e.g., 5) represent expensive treatments creating shallower curves. seed Random seed reproducible QINI curve generation. Default 12345 matches default seed used compute_qini_improved consistency.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"modified copy model_results flipped models (\"_r\" suffix). remove_original         TRUE (default), original models removed; otherwise versions kept.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"function creates entirely new models : 1. Extracting original data outcome 2. Flipping outcome variable (Y_flipped = -Y) 3. Calling margot_causal_forest() flipped outcome 4. Storing result \"_r\" suffix 5. Optionally removing original models (default behavior) ensures components (forest model, CATE estimates, QINI curves, policy trees, E-values, etc.) consistently computed based flipped outcome. grf_defaults NULL, function attempts extract key GRF parameters first fitted model ensure consistency original flipped models.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip (Reverse) Causal Forest Treatment Effects — margot_flip_forests","text":"","code":"if (FALSE) { # \\dontrun{ # Flip models and remove originals (default) results_flipped <- margot_flip_forests(   results,   flip_outcomes = c(\"anxiety\", \"depression\") ) # Results now contain anxiety_r and depression_r, originals removed  # Keep both original and flipped models results_both <- margot_flip_forests(   results,   flip_outcomes = c(\"anxiety\", \"depression\"),   remove_original = FALSE ) # Results contain both anxiety/depression and anxiety_r/depression_r  # Use custom GRF parameters for flipped models results_custom <- margot_flip_forests(   results,   flip_outcomes = c(\"anxiety\", \"depression\"),   grf_defaults = list(num.trees = 4000, honesty = TRUE, honesty.fraction = 0.5) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"development function extends margot_flip_forests allow custom covariate specification policy tree recalculation. Users can flip CATE estimates, recalculate RATE/QINI results, explore policy trees different sets covariates originally selected margot_causal_forest.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"","code":"margot_flip_forests_dev(   model_results,   flip_outcomes = NULL,   custom_covariates = NULL,   exclude_covariates = NULL,   covariate_mode = c(\"custom\", \"add\", \"all\"),   model_prefix = \"model_\",   recalc_policy = TRUE,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"model_results list containing model results margot_causal_forest(). flip_outcomes character vector outcome variable names CATE estimates flipped. Can NULL recalculating policy trees custom covariates. custom_covariates character vector covariate names use policy tree calculation. NULL, uses original top_n_vars model. exclude_covariates character vector covariate names patterns exclude policy trees. Supports exact matches regex patterns (e.g., \"^t0_log_\" exclude variables starting \"t0_log_\"). Exclusions applied covariate selection/combination. covariate_mode Character string specifying use custom covariates: \"custom\"Use specified custom_covariates \"add\"Add custom_covariates existing top_n_vars \"\"Use available covariates (warns > 20) model_prefix character string indicating prefix used model names results list. Default \"model_\". recalc_policy Logical; TRUE (default) recalculates policy trees. verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"modified copy model_results list updated CATE estimates /recalculated policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"exclude_covariates specified (flipping custom covariates), function uses optimized path filters existing top_vars without recalculating policy trees. significantly improves performance sensitivity analyses.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Development Version of Flip CATE Estimates with Custom Covariate Support — margot_flip_forests_dev","text":"","code":"if (FALSE) { # \\dontrun{ # flip outcomes and use custom covariates results_dev <- margot_flip_forests_dev(   model_results,   flip_outcomes = c(\"outcome1\", \"outcome2\"),   custom_covariates = c(\"age\", \"gender\", \"income\"),   covariate_mode = \"custom\" )  # only recalculate policy trees with all covariates results_all <- margot_flip_forests_dev(   model_results,   flip_outcomes = NULL,   covariate_mode = \"all\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel flip of CATE estimates with reproducible RNG and memory guard — margot_flip_forests_parallel","title":"Parallel flip of CATE estimates with reproducible RNG and memory guard — margot_flip_forests_parallel","text":"function modifies models PLACE flipping treatment effects, unlike margot_flip_forests creates new models \"_r\" suffix. remove_original grf_defaults parameters ignored version.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel flip of CATE estimates with reproducible RNG and memory guard — margot_flip_forests_parallel","text":"","code":"margot_flip_forests_parallel(   model_results,   flip_outcomes,   model_prefix = \"model_\",   grf_defaults = NULL,   recalc_policy = TRUE,   parallel_policy = FALSE,   n_policy_cores = future::availableCores() - 1,   verbose = TRUE,   n_cores = future::availableCores() - 1,   max_size_GB = 2,   seed = TRUE,   remove_original = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel flip of CATE estimates with reproducible RNG and memory guard — margot_flip_forests_parallel","text":"model_results list containing model results margot_causal_forest(). flip_outcomes character vector outcome variable names models flipped. model_prefix character string indicating prefix used model names results list. Default \"model_\". grf_defaults list parameters pass GRF causal forest models. Note: parameter ignored parallel version modifies existing models place rather creating new ones. parallel_policy logical. TRUE, policy-tree refits parallelised. n_policy_cores integer. number workers policy-tree refits. verbose Logical indicating whether display detailed messages execution. Default TRUE. n_cores Number cores use parallel processing. Default availableCores() - 1. max_size_GB numeric. globals cap passed `future.globals.maxSize` (default 2 GB). seed `TRUE` automatic parallel-safe RNG, integer deterministic streams. remove_original logical indicating whether remove original (non-flipped) models creating flipped versions. Default TRUE. Note: parameter ignored parallel version modifies models place.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_generate_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate QINI Data for Visualization — margot_generate_qini_data","title":"Generate QINI Data for Visualization — margot_generate_qini_data","text":"function generates QINI curve data -demand model result. extracts tau_hat model, uses maq generate CATE curve, creates baseline following various methods.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_generate_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate QINI Data for Visualization — margot_generate_qini_data","text":"","code":"margot_generate_qini_data(   model_result,   outcome_data,   treatment,   weights = NULL,   baseline_method = c(\"maq_no_covariates\", \"auto\", \"simple\", \"maq_only\", \"none\"),   seed = 12345,   verbose = FALSE,   treatment_cost = 1,   x_axis = c(\"proportion\", \"budget\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_generate_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate QINI Data for Visualization — margot_generate_qini_data","text":"model_result single model result margot_causal_forest output outcome_data outcome data (Y) model treatment treatment assignment vector (W) weights Optional weights vector baseline_method Method generating baseline: \"maq_no_covariates\" (default), \"auto\", \"simple\", \"maq_only\", \"none\". See details. verbose Logical verbose output treatment_cost Scalar treatment cost per unit. Default 1. x_axis Type x-axis QINI curves: \"proportion\" (default) \"budget\". \"proportion\" shows proportion population treated (0 1). \"budget\" shows budget per unit (0 treatment_cost), matching maq's visualization.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_generate_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate QINI Data for Visualization — margot_generate_qini_data","text":"list components:   - qini_data: data.frame columns proportion (budget), gain, curve   - qini_objects: list cate ate maq objects (ate may simplified)   - x_axis: x-axis type used (\"proportion\" \"budget\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_generate_qini_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate QINI Data for Visualization — margot_generate_qini_data","text":"baseline_method parameter controls -prioritization baseline generated: \"maq_no_covariates\": Use maq target..covariates = FALSE (default).     Automatically falls back simple baseline maq fails. \"auto\": Try maq target..covariates = FALSE first, fall back simple baseline fails \"simple\": Always use simple baseline (straight line (0,0) (1, mean(tau_hat))) \"maq_only\": Use standard maq constant rewards (may fail fallback) \"none\": baseline curve simple baseline represents expected gain random allocation, treating proportion p units yields gain p * E[tau]. method always succeeds provides robust fallback maq fails.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_get_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get display labels for multiple variable names — margot_get_labels","title":"Get display labels for multiple variable names — margot_get_labels","text":"Helper map vector variable names human-readable labels. Falls back `transform_var_name()` explicit mapping found.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_get_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get display labels for multiple variable names — margot_get_labels","text":"","code":"margot_get_labels(vars, label_map)"},{"path":"https://go-bayes.github.io/margot/reference/margot_get_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get display labels for multiple variable names — margot_get_labels","text":"vars Character vector variable names convert. label_map Named list mapping variable names labels (e.g., `label_mapping_all`).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_get_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get display labels for multiple variable names — margot_get_labels","text":"Character vector display labels, order `vars`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_get_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get display labels for multiple variable names — margot_get_labels","text":"entry `vars` present `label_map`, function calls  `transform_var_name()` auto-generate label based naming conventions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"function wrapper grf::causal_forest runs multiple GRF causal forest models specified outcome variables. calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"","code":"margot_grf_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10,   save_models = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Covariate Overlap from Causal Forest Models — margot_grf_overlap","title":"Assess Covariate Overlap from Causal Forest Models — margot_grf_overlap","text":"Wrapper around original GRF overlap diagnostics. function exists provide stable, descriptive name. delegates `margot_assess_overlap()` implementation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Covariate Overlap from Causal Forest Models — margot_grf_overlap","text":"","code":"margot_grf_overlap(   model_results,   model_names = NULL,   exposure_name = NULL,   label_mapping = NULL,   plot = TRUE,   save_plots = FALSE,   output_dir = NULL,   theme = \"classic\",   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Covariate Overlap from Causal Forest Models — margot_grf_overlap","text":"model_results Output margot_causal_forest() margot_flip_forests() model_names Character vector model names assess. NULL, models. exposure_name Character string naming exposure/treatment variable. NULL, defaults \"Treatment\". label_mapping Named list mapping variable names custom labels exposure. plot Logical indicating whether create overlap plots. Default TRUE. save_plots Logical indicating whether save plots. Default FALSE. output_dir Directory save plots save_plots TRUE. theme Character string specifying ggplot2 theme. Default \"classic\". Options include \"classic\", \"minimal\", \"bw\", \"gray\", \"light\", \"dark\", \"void\". verbose Logical detailed messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Covariate Overlap from Causal Forest Models — margot_grf_overlap","text":"list overlap summaries, plots, text summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_subset_model()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"","code":"margot_grf_subset_table(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"... Arguments passed deprecated function","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"","code":"if (FALSE) { # \\dontrun{ # Instead of using this deprecated function: # result_subset <- margot_grf_subset_table(...)  # Use the new function: # result_subset <- margot_subset_model(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_identify_variable_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Variable Clusters for Policy Tree Analysis — margot_identify_variable_clusters","title":"Identify Variable Clusters for Policy Tree Analysis — margot_identify_variable_clusters","text":"Groups variables clusters based correlations, helping understand variables might substitute policy tree splits.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_identify_variable_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Variable Clusters for Policy Tree Analysis — margot_identify_variable_clusters","text":"","code":"margot_identify_variable_clusters(   correlation_assessment,   min_cluster_size = 2,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_identify_variable_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Variable Clusters for Policy Tree Analysis — margot_identify_variable_clusters","text":"correlation_assessment Output margot_assess_variable_correlation() min_cluster_size Minimum number variables form cluster (default 2) label_mapping Optional named list mapping variable names labels. NULL correlation_assessment contains label_mapping, uses ; otherwise uses automatic transformation","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_identify_variable_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Variable Clusters for Policy Tree Analysis — margot_identify_variable_clusters","text":"Data frame cluster assignments representative variables (using labels)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"Imputes missing values longitudinal data carrying forward previous observations specified number time points back. default, never imputes data final wave (end--study). Optionally, can create indicator variables imputed values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"","code":"margot_impute_carry_forward(   df_wide,   columns_to_impute,   max_carry_forward = 1,   time_point_prefixes = NULL,   time_point_regex = NULL,   require_one_observed = TRUE,   columns_no_future_required = NULL,   create_na_indicator = TRUE,   indicator_suffix = \"_na\",   indicator_as_suffix = TRUE,   verbose = TRUE,   impute_final_wave = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"df_wide wide-format dataframe containing longitudinal data. columns_to_impute character vector base column names impute (without time prefixes). max_carry_forward maximum number time points look back carrying forward values. time_point_prefixes optional vector time point prefixes (e.g., c(\"t0\", \"t1\", \"t2\")). time_point_regex optional regex pattern identify time points. Overrides time_point_prefixes provided. require_one_observed logical. TRUE, impute least one value observed present following wave. columns_no_future_required character vector columns require future observations imputation. defaults columns require_one_observed = FALSE, none require_one_observed = TRUE. create_na_indicator logical. TRUE, creates indicator variables imputed values. indicator_suffix suffix add original column name indicator variable (default \"_na\"). indicator_as_suffix logical. TRUE, indicator suffix added suffix; FALSE, added prefix. verbose logical. TRUE, prints progress information. impute_final_wave logical. FALSE (default), final wave (end--study) never imputed. TRUE, final wave can imputed like waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"dataframe imputed values optional indicator variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect and Debug Model Result Structure — margot_inspect_model","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"utility function inspects structure specific model result models results list, helping debug issues flipping estimates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"","code":"margot_inspect_model(model_results, model_name = NULL, details = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"model_results list containing model results margot_causal_forest(). model_name Name specific model inspect. NULL, summarizes models. details Logical indicating whether show detailed structure objects. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"Invisibly returns summary model structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect qini diagnostics for one or several models — margot_inspect_qini","title":"Inspect qini diagnostics for one or several models — margot_inspect_qini","text":"Inspect qini diagnostics one several models","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect qini diagnostics for one or several models — margot_inspect_qini","text":"","code":"margot_inspect_qini(   model_results,   model_names = NULL,   test_prop = 0.5,   propensity_bounds = c(0.05, 0.95),   seed = 2025 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect qini diagnostics for one or several models — margot_inspect_qini","text":"model_results list returned `margot_causal_forest()` **** `save_models = TRUE, save_data = TRUE`. model_names optional character vector outcome names (without `model_` prefix).  default = **. test_prop fraction trimmed rows allocate validation/Qini test set.  default 0.5. propensity_bounds numeric length-2 vector giving lower upper trimming thresholds `forest$W.hat`.  default c(0.05, 0.95). seed integer reproducibility.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect qini diagnostics for one or several models — margot_inspect_qini","text":"tibble diagnostics (class `\"margot_qini_diag\"`).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Bootstrap Policy Tree Results — margot_interpret_bootstrap","title":"Interpret Bootstrap Policy Tree Results — margot_interpret_bootstrap","text":"Provides narrative interpretation bootstrap policy tree results suitable inclusion scientific manuscripts. interpretation acknowledges inherent instability decision trees focusing robust patterns emerge across bootstrap iterations. function deprecated. Please use margot_interpret_stability instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Bootstrap Policy Tree Results — margot_interpret_bootstrap","text":"","code":"margot_interpret_bootstrap(...)  margot_interpret_bootstrap(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Bootstrap Policy Tree Results — margot_interpret_bootstrap","text":"... Arguments passed margot_interpret_stability object Object class \"margot_bootstrap_policy_tree\" model_name Model name interpret depth Tree depth interpret (1, 2, \"\") stability_threshold Minimum frequency consider split \"stable\" (default 0.7) format Output format: \"text\" narrative prose \"technical\" detailed statistics decimal_places Number decimal places statistics (default 1) include_theory Logical: Include theoretical context tree instability (default TRUE) label_mapping Optional named list mapping variable names labels. NULL, uses automatic transformation via transform_var_name()","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Bootstrap Policy Tree Results — margot_interpret_bootstrap","text":"Character string containing interpretation Result margot_interpret_stability","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_heterogeneity.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Heterogeneity Evidence from Multiple Sources — margot_interpret_heterogeneity","title":"Interpret Heterogeneity Evidence from Multiple Sources — margot_interpret_heterogeneity","text":"Combines evidence multiple heterogeneity tests (RATE AUTOC, RATE QINI, QINI curves, omnibus calibration tests) provide unified recommendations models show treatment effect heterogeneity.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_heterogeneity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Heterogeneity Evidence from Multiple Sources — margot_interpret_heterogeneity","text":"","code":"margot_interpret_heterogeneity(   models = NULL,   model_names = NULL,   spend_levels = c(0.1, 0.4),   require_any_positive = TRUE,   exclude_negative_any = TRUE,   require_omnibus = FALSE,   alpha = 0.05,   adjust = \"none\",   flipped_outcomes = NULL,   label_mapping = NULL,   verbose = TRUE,   include_extended_report = TRUE,   rate_results = NULL,   qini_results = NULL,   omnibus_results = NULL,   use_cross_validation = TRUE,   cv_num_folds = 5,   cv_results = NULL,   seed = 12345,   parallel = FALSE,   n_cores = future::availableCores() - 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_heterogeneity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Heterogeneity Evidence from Multiple Sources — margot_interpret_heterogeneity","text":"models Output margot_causal_forest() containing model results model_names Character vector model names analyse. NULL (default), analyses models. Model names can specified without \"model_\" prefix. spend_levels Numeric vector spend levels QINI analysis. Default 0.1 (10 percent spend captures early heterogeneity patterns effectively). require_any_positive Logical. TRUE (default), include models show positive evidence method. FALSE, require positive evidence methods. exclude_negative_any Logical. TRUE (default), exclude models show negative evidence RATE test (AUTOC QINI). Models negative RATE evidence classified \"excluded_negative_rate\" appear selected exploratory lists. require_omnibus Logical. TRUE, include models pass omnibus calibration test. Default FALSE. alpha Numeric. Significance level RATE tests. Default 0.05. Note: controls RATE estimates considered statistically significant multiple testing correction. adjust Character. Multiple testing adjustment method RATE estimates. Options include \"BH\" (Benjamini-Hochberg), \"\" (Benjamini-Yekutieli), \"bonferroni\", \"holm\", \"fdr\", \"none\". Default \"none\". Note: use_cross_validation = TRUE (default), \"bonferroni\" \"none\" valid. Invalid methods automatically converted \"none\" without warning. flipped_outcomes Character vector outcome names flipped (reversed) preprocessing. Used interpretation text. label_mapping Named list mapping model names human-readable labels. verbose Logical. TRUE, show progress messages. Default TRUE. include_extended_report Logical. TRUE (default), generate detailed academic-style report full statistics confidence intervals. rate_results Optional pre-computed RATE results skip computation. qini_results Optional pre-computed QINI results skip computation. omnibus_results Optional pre-computed omnibus test results skip computation. use_cross_validation Logical. TRUE (default), use cross-validation RATE tests instead standard approach. provides confidence intervals robust inference. cv_num_folds Integer. Number CV folds use_cross_validation = TRUE (default 5). cv_results Optional pre-computed CV results skip computation. seed Integer. Random seed reproducibility computations (default 12345). parallel Logical. Use parallel processing cross-validation use_cross_validation = TRUE (default FALSE). Note: Parallel processing experimental may encounter memory issues. n_cores Integer. Number cores parallel processing parallel = TRUE (default cores - 1). applies use_cross_validation = TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_heterogeneity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Heterogeneity Evidence from Multiple Sources — margot_interpret_heterogeneity","text":"list containing following components:   selected_model_ids (character vector model IDs heterogeneity evidence),   selected_model_names (character vector human-readable model names),   exploratory_model_ids (character vector model IDs exploratory evidence),   exploratory_model_names (character vector human-readable model names exploratory evidence),   all_selected_model_ids (combined vector selected_model_ids exploratory_model_ids),   all_selected_model_names (combined vector selected_model_names exploratory_model_names),   excluded_model_ids (character vector model IDs exclude),   excluded_model_names (character vector human-readable excluded model names),   evidence_summary (data frame detailed evidence source),   interpretation (character string main interpretation text),   summary (character string brief summary),   recommendations (character string actionable recommendations),   rate_results (list containing AUTOC QINI RATE results),   qini_results (QINI curve interpretation results),   omnibus_results (omnibus calibration test results),   concordance (list analysing agreement methods),   extended_report (character string detailed academic report requested),   cv_results (cross-validation results object use_cross_validation = TRUE),   method_used (character string indicating whether \"cross_validation\" \"standard\" method used)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_learners.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Super Learner weights for LMTP nuisance fits — margot_interpret_lmtp_learners","title":"Interpret Super Learner weights for LMTP nuisance fits — margot_interpret_lmtp_learners","text":"Generates concise prose describing Super Learner components dominate outcome (`m`) density-ratio (`r`) nuisance regressions across waves shifts. Highlights waves single learner receives (approximately) weight, can signal limited information (e.g., LOCF imputation).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_learners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Super Learner weights for LMTP nuisance fits — margot_interpret_lmtp_learners","text":"","code":"margot_interpret_lmtp_learners(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   waves = NULL,   remove_waves = NULL,   component = c(\"both\", \"outcome\", \"treatment\"),   digits = 0,   return = c(\"text\", \"list\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_learners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Super Learner weights for LMTP nuisance fits — margot_interpret_lmtp_learners","text":"x LMTP run output (e.g., result [margot_lmtp()]) object exposes `$density_ratios` structure plot helpers. outcome Character scalar giving outcome name summarise. shifts Optional character vector shifts include (either full names `t5_pwi_z_shift_up` cleaned suffixes `shift_up`). `NULL`, available shifts outcome used. label_mapping Optional named list passed [transform_label()] readable outcome/shift labels. waves Optional integer vector waves keep (matching wave index used LMTP fits). remove_waves Optional integer vector waves drop subsetting. component nuisance models include: `\"\"` (default), `\"outcome\"` (`m`), `\"treatment\"` (`r`). digits Integer number decimal places use reporting percentages. return Either `\"text\"` (default) single character string `\"list\"` structured components.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_learners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Super Learner weights for LMTP nuisance fits — margot_interpret_lmtp_learners","text":"Either character string list (depending `return`).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","title":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","text":"Builds concise textual summary LMTP density-ratio diagnostics single outcome. requested shift, function computes effective sample sizes (ESS) wave pooled person-time using `colSums()` underlying density ratios. output mirrors filtering labelling conventions used [`margot_plot_lmtp_overlap_grid()`] consistency prose graphics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","text":"","code":"margot_interpret_lmtp_positivity(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   waves = NULL,   remove_waves = NULL,   digits = 2,   include_methods = FALSE,   include_diagnostics = FALSE,   return = c(\"text\", \"list\") )  margot_interpret_lmtp_overlap(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","text":"x LMTP run output (e.g., result [margot_lmtp()]) object exposes `$density_ratios` structure plot helpers. outcome Character scalar giving outcome name summarise. shifts Optional character vector shifts include (either full names `t5_pwi_z_shift_up` cleaned suffixes `shift_up`). `NULL`, available shifts outcome used. label_mapping Optional named list passed [transform_label()] readable outcome/shift labels. waves Optional integer vector wave indices keep (matching column positions used overlap plot). Defaults available waves. remove_waves Optional integer vector waves exclude inclusion via `waves`. digits Integer number decimal places use reporting ESS-based fractions (e.g., `ESS/N`). include_methods Logical; TRUE, prepends methodological explanation density ratios, interpretation, ESS computation (default: FALSE). include_diagnostics Logical; TRUE, appends detailed diagnostics per shift including zeros, range, quantiles, tail probabilities (default: FALSE). return Character; either `\"text\"` (default, single markdown-ready string) `\"list\"` (detailed components including computed ESS tables).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","text":"Either single character string (default) list containing   header, per-shift lines, overview text, underlying ESS summaries   `return = \"list\"`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret LMTP positivity via effective sample sizes — margot_interpret_lmtp_positivity","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage txt <- margot_interpret_lmtp_positivity(   fit,   outcome = \"t5_pwi_z\",   shifts = c(\"shift_up\", \"shift_down\", \"null\"),   label_mapping = label_mapping ) cat(txt)  # With methodological explanation txt_methods <- margot_interpret_lmtp_positivity(   fit,   outcome = \"t5_pwi_z\",   shifts = c(\"shift_up\", \"shift_down\", \"null\"),   label_mapping = label_mapping,   include_methods = TRUE ) cat(txt_methods)  # With detailed diagnostics txt_diagnostics <- margot_interpret_lmtp_positivity(   fit,   outcome = \"t5_pwi_z\",   shifts = c(\"shift_up\", \"shift_down\", \"null\"),   label_mapping = label_mapping,   include_diagnostics = TRUE ) cat(txt_diagnostics)  # Complete report with methods and diagnostics txt_full <- margot_interpret_lmtp_positivity(   fit,   outcome = \"t5_pwi_z\",   shifts = c(\"shift_up\", \"shift_down\", \"null\"),   label_mapping = label_mapping,   include_methods = TRUE,   include_diagnostics = TRUE ) cat(txt_full)  # Get structured list output result <- margot_interpret_lmtp_positivity(   fit,   outcome = \"t5_pwi_z\",   shifts = c(\"shift_up\", \"shift_down\", \"null\"),   include_methods = TRUE,   include_diagnostics = TRUE,   return = \"list\" ) # Access components: result$methods, result$diagnostics, result$shifts } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Overview bullets for multiple LMTP positivity analyses — margot_interpret_lmtp_positivity_overview","title":"Overview bullets for multiple LMTP positivity analyses — margot_interpret_lmtp_positivity_overview","text":"Creates concise, supplement-ready overview bullets optional table summarising worst-case positivity diagnostics across multiple analyses (e.g., different outcome/shift sets).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overview bullets for multiple LMTP positivity analyses — margot_interpret_lmtp_positivity_overview","text":"","code":"margot_interpret_lmtp_positivity_overview(   reports,   labels = names(reports),   digits = 2,   include_table = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overview bullets for multiple LMTP positivity analyses — margot_interpret_lmtp_positivity_overview","text":"reports named list element result `margot_report_lmtp_positivity()` one analysis. list names `labels` vector used analysis labels. labels Optional character vector labels (length/order `reports`). NULL, uses `names(reports)`. digits Integer rounding ESS/N bullets table (default 2). include_table Logical; TRUE, returns data.frame `overview_table`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_lmtp_positivity_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overview bullets for multiple LMTP positivity analyses — margot_interpret_lmtp_positivity_overview","text":"list   - bullets: character vector bullet lines   - overview_table: data.frame (include_table = TRUE) worst-zero     worst ESS/N per analysis","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Interpretation of ATE Results — margot_interpret_marginal","title":"Make Interpretation of ATE Results — margot_interpret_marginal","text":"helper assembles concise markdown‑style interpretation results. `include_adjust_note = FALSE` (default single‑outcome call `margot_plot()`), statements multiplicity correction suppressed avoid unnecessary noise.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Interpretation of ATE Results — margot_interpret_marginal","text":"","code":"margot_interpret_marginal(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   original_df = NULL,   e_val_bound_threshold = 1,   adjust = c(\"none\", \"bonferroni\"),   alpha = 0.05,   include_adjust_note = TRUE,   effect_type = \"ATE\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Interpretation of ATE Results — margot_interpret_marginal","text":"include_adjust_note logical; `FALSE`, reference adjustment methods omitted. default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Interpretation of ATE Results — margot_interpret_marginal","text":"list one element, `interpretation` (character string).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch process policy tree interpretations — margot_interpret_policy_batch","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"function now accepts vector model names process produces single combined output. common description printed top, followed model's specific findings. can now control whether interpret depth-1 depth-2 trees via `max_depth` argument, supply per-model depth choices via `depths_by_model`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"","code":"margot_interpret_policy_batch(   models,   model_names = NULL,   max_depth = 2L,   depths_by_model = NULL,   save_path = NULL,   prefix = NULL,   include_timestamp = FALSE,   report_policy_value = c(\"none\", \"treat_all\", \"control_all\", \"both\", \"treated_only\"),   policy_value_R = 499L,   policy_value_seed = 42L,   policy_value_ci_level = 0.95,   brief = FALSE,   brief_save_to = NULL,   return_as_list = FALSE,   policy_value_source = c(\"compute\", \"use_coherent\"),   coherent_values = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"models list containing results multi-arm causal forest models. model_names character vector model names interpret. named, values 1 2 (depth assignments) take precedence `max_depth` `depths_by_model`. NULL, models processed. max_depth Integer, 1 2; fallback depth used per-model depth mapping provided via `model_names` `depths_by_model` (default 2). depths_by_model Optional named vector/list mapping models (without `model_` prefix) depth 1 2; combined depth hints supplied `model_names`. save_path path combined interpretation saved. NULL, nothing saved. prefix optional prefix filename. include_timestamp Logical; whether include timestamp filename (desired). report_policy_value Character: one \"none\" (default), \"treat_all\", \"control_all\", \"\". \"none\", model interpretation include one-line policy value summary 95% CIs based bootstrap SEs. policy_value_R Integer >= 199; bootstrap replicates (default 499). policy_value_seed Integer NULL; RNG seed (default 42). policy_value_ci_level Numeric confidence level (default 0.95). brief Logical; TRUE, prepend compact treated-summary model (coverage treated average uplift among treated) optionally save . brief_save_to Optional path save brief treated-summary text. ... Additional arguments pass margot_interpret_policy_tree(), including include_conditional_means (default TRUE), use_math_notation (default FALSE), output_format (\"bullet\" \"prose\"), original_df, label_mapping, policy value options.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"single character string containing combined markdown output.   `return_as_list = TRUE`, returns list full report, brief summary,   per-model sections, policy value explanation, `model_depths`/`depth_map`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Policy Tree Results — margot_interpret_policy_tree","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"function creates interpretation policy tree results causal forest multi-arm causal forest model. generates formatted description policy tree, including main splits recommended actions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"","code":"margot_interpret_policy_tree(   model,   model_name,   max_depth = 2L,   train_proportion = 0.5,   custom_action_names = NULL,   label_mapping = NULL,   original_df = NULL,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   include_conditional_means = TRUE,   use_math_notation = FALSE,   output_format = c(\"prose\", \"bullet\"),   report_policy_value = c(\"none\", \"treat_all\", \"control_all\", \"both\", \"treated_only\"),   policy_value_R = 499L,   policy_value_seed = 42L,   policy_value_ci_level = 0.95 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"model list containing results multi-arm causal forest model. model_name string specifying model's results interpret. max_depth Integer, 1 2; stored tree interpret. train_proportion Numeric value 0 1 proportion data used training. Default 0.5. custom_action_names Optional vector custom names actions. Must match number actions policy tree. label_mapping Optional list maps variable names custom labels. original_df Optional dataframe untransformed variables, used display split values data scale. remove_tx_prefix Logical indicating whether remove prefixes like t0_ variable names. Default TRUE. remove_z_suffix Logical indicating whether remove _z suffix variable names. Default TRUE. use_title_case Logical indicating whether convert variable names title case. Default TRUE. include_conditional_means Logical indicating whether include conditional means information available. Default TRUE. use_math_notation Logical indicating whether use mathematical notation (E[Y()|X]) plain language. Default FALSE clarity. output_format Character string specifying output format: \"prose\" (default) flowing narrative text, \"bullet\" structured bullet points. report_policy_value Character: one \"none\" (default), \"treat_all\", \"control_all\", \"\". \"none\", appends policy value summary 95 stored `plot_data` DR scores model. policy_value_R Integer ≥ 199; number bootstrap replicates (default 499). policy_value_seed Integer NULL; RNG seed (default 42). policy_value_ci_level Numeric confidence level (default 0.95).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"Invisibly returns string containing interpretation; also prints console.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Qini Results — margot_interpret_qini","title":"Interpret Qini Results — margot_interpret_qini","text":"Interprets Qini results binary multi-arm treatments, automatically detecting treatment type input data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Qini Results — margot_interpret_qini","text":"","code":"margot_interpret_qini(   multi_batch,   label_mapping = NULL,   alpha = 0.05,   decimal_places = 2,   model_names = NULL,   spend_levels = c(0.1, 0.4),   include_intro = TRUE,   baseline_method = NULL,   scale = \"average\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Qini Results — margot_interpret_qini","text":"multi_batch List margot_policy() margot_qini() diff_gain_summaries label_mapping Named list mapping model names readable labels alpha Significance level confidence intervals (default: 0.05) decimal_places Decimal places rounding (default: 2) model_names Character vector models process (optional) spend_levels Numeric vector spend levels analyze (default: 0.1). requested levels exist data, function use available levels instead. include_intro Logical whether include explanatory text CATE Qini curves (default: TRUE) baseline_method Method generating baseline regenerating summaries: \"maq_no_covariates\" (default NULL), \"auto\", \"simple\", \"maq_only\", \"none\". NULL, uses baseline method original QINI generation. scale Character string specifying scale gains: \"average\" (default), \"cumulative\", \"population\". affects gains interpreted summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Qini Results — margot_interpret_qini","text":"List summary_table, qini_explanation, concise_summary, reliable_model_names, reliable_model_ids","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpret Qini Results — margot_interpret_qini","text":"function automatically detects available spend levels data. requested spend levels available, use closest available levels warn user. see spend levels available, check names `multi_batch[[1]]$diff_gain_summaries`. function accepts output either: margot_policy() - includes policy trees Qini results margot_qini() - focuses solely Qini curves gains","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret RATE Estimates — margot_interpret_rate","title":"Interpret RATE Estimates — margot_interpret_rate","text":"Produces concise summary outcomes show positive, negative, inconclusive heterogeneous treatment effects based RATE (Rank Average Treatment Effect) analysis. Produce compact Markdown summary describing outcomes show positive, negative, inconclusive heterogeneous treatment effects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret RATE Estimates — margot_interpret_rate","text":"","code":"margot_interpret_rate(   rate_df,   flipped_outcomes = NULL,   target = \"AUTOC\",   adjust_positives_only = FALSE )  margot_interpret_rate(   rate_df,   flipped_outcomes = NULL,   target = \"AUTOC\",   adjust_positives_only = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret RATE Estimates — margot_interpret_rate","text":"rate_df data frame margot_rate() list containing rate_autoc rate_qini. flipped_outcomes Character vector outcomes inverted preprocessing. target Character; either \"AUTOC\" \"QINI\" (ignored rate_df list). adjust_positives_only Logical; TRUE, apply multiple testing correction positive RATEs comparison output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret RATE Estimates — margot_interpret_rate","text":"single table: markdown-formatted character string summarizing   RATE results. list input: list containing comparison results   individual interpretations AUTOC QINI. rate_df data frame, Markdown string. rate_df list,   returns list produced margot_interpret_rate_comparison().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpret RATE Estimates — margot_interpret_rate","text":"RATE quantifies much better CATE-based targeting performs compared uniform treatment (ATE). interpretation differs weighting scheme: AUTOC: Uses logarithmic weighting, emphasizing top responders QINI: Uses linear weighting, balancing effect size prevalence Positive RATE values indicate heterogeneity can exploited better targeting. Negative values suggest CATE targeting underperform uniform treatment.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret RATE Estimates — margot_interpret_rate","text":"","code":"if (FALSE) { # \\dontrun{ # Compute RATE for causal forest results rate_results <- margot_rate(causal_forest_results)  # Interpret the results (handles both AUTOC and QINI) interpretation <- margot_interpret_rate(rate_results) cat(interpretation$comparison)  # Or interpret just AUTOC results autoc_interpretation <- margot_interpret_rate(   rate_results$rate_autoc,   target = \"AUTOC\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare AUTOC and QINI RATE Tables — margot_interpret_rate_comparison","title":"Compare AUTOC and QINI RATE Tables — margot_interpret_rate_comparison","text":"Internal function compares AUTOC QINI RATE results identify two weighting schemes agree disagree heterogeneity evidence.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare AUTOC and QINI RATE Tables — margot_interpret_rate_comparison","text":"","code":"margot_interpret_rate_comparison(   autoc_df,   qini_df,   flipped_outcomes = NULL,   adjust_positives_only = FALSE )  margot_interpret_rate_comparison(   autoc_df,   qini_df,   flipped_outcomes = NULL,   adjust_positives_only = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare AUTOC and QINI RATE Tables — margot_interpret_rate_comparison","text":"autoc_df Data frame AUTOC results margot_rate(). qini_df Data frame QINI results margot_rate(). flipped_outcomes Character vector outcomes inverted preprocessing. adjust_positives_only Logical; TRUE, apply multiple testing correction positive RATE estimates (negative outcomes use unadjusted CIs). Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare AUTOC and QINI RATE Tables — margot_interpret_rate_comparison","text":"list containing: comparison: Markdown summary comparing AUTOC QINI autoc_results: Interpretation AUTOC results qini_results: Interpretation QINI results autoc_model_names: Models positive RATE AUTOC qini_model_names: Models positive RATE QINI both_model_names: Models positive RATE list elements: * comparison: Markdown comparison text * autoc_results: Output margot_interpret_rate() AUTOC * qini_results: Output margot_interpret_rate() QINI * autoc_model_names: Models positive AUTOC * qini_model_names: Models positive QINI * both_model_names: Models positive * either_model_names: Models positive either * not_excluded_autoc_model_names: AUTOC models reliably negative * not_excluded_qini_model_names: QINI models reliably negative * not_excluded_both: Models excluded AUTOC QINI * not_excluded_either: Models excluded either AUTOC QINI","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret CV RATE Results — margot_interpret_rate_cv","title":"Interpret CV RATE Results — margot_interpret_rate_cv","text":"Produces summary outcomes show positive, negative, inconclusive heterogeneous treatment effects based cross-validation RATE analysis, similar margot_interpret_rate() CV results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret CV RATE Results — margot_interpret_rate_cv","text":"","code":"margot_interpret_rate_cv(cv_results, flipped_outcomes = NULL, target = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret CV RATE Results — margot_interpret_rate_cv","text":"cv_results margot_cv_results object margot_rate_cv() flipped_outcomes Character vector outcomes inverted preprocessing. Optional. target Character. \"AUTOC\" \"QINI\" (ignored cv_results contains ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret CV RATE Results — margot_interpret_rate_cv","text":"list containing: summary_table: Formatted table CV results interpretation: Markdown-formatted character string summarizing results autoc_results: AUTOC interpretation (available) qini_results: QINI interpretation (available) comparison: Comparison AUTOC QINI (available)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Policy Tree Stability Results — margot_interpret_stability","title":"Interpret Policy Tree Stability Results — margot_interpret_stability","text":"Provides narrative interpretation policy tree stability results suitable inclusion scientific manuscripts. interpretation acknowledges inherent instability decision trees focusing robust patterns emerge across iterations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Policy Tree Stability Results — margot_interpret_stability","text":"","code":"margot_interpret_stability(   object,   model_name,   depth = 2,   stability_threshold = 0.7,   format = c(\"text\", \"technical\"),   decimal_places = 1,   include_theory = TRUE,   label_mapping = NULL,   include_ci = FALSE,   ci_level = 0.95 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Policy Tree Stability Results — margot_interpret_stability","text":"object Object class \"margot_stability_policy_tree\" model_name Model name interpret depth Tree depth interpret (1, 2, \"\") stability_threshold Minimum frequency consider split \"stable\" (default 0.7) format Output format: \"text\" narrative prose \"technical\" detailed statistics decimal_places Number decimal places statistics (default 1) include_theory Logical: Include theoretical context tree instability (default TRUE) label_mapping Optional named list mapping variable names labels. NULL, uses automatic transformation via transform_var_name() include_ci Logical: TRUE format = \"technical\", include simple confidence intervals selection frequencies (Wilson interval) , available, threshold means (normal approx). quantify iteration-level variability; sample uncertainty prefer vary_type = \"bootstrap\". ci_level Numeric: Confidence level intervals (default 0.95)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Policy Tree Stability Results — margot_interpret_stability","text":"Character string containing interpretation","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","title":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","text":"Processes multiple models stability analysis provides narrative interpretations . Returns named list interpretations suitable batch reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","text":"","code":"margot_interpret_stability_batch(   object,   model_names = NULL,   depth = 2,   stability_threshold = 0.7,   format = c(\"text\", \"technical\"),   decimal_places = 1,   include_theory = TRUE,   label_mapping = NULL,   verbose = TRUE,   combine = FALSE,   save_to_file = NULL,   include_ci = FALSE,   ci_level = 0.95 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","text":"object Object class \"margot_stability_policy_tree\" model_names Optional character vector model names interpret. NULL (default), interprets models results. depth Tree depth interpret (1, 2, \"\") stability_threshold Minimum frequency consider split \"stable\" (default 0.7) format Output format: \"text\" narrative prose \"technical\" detailed statistics decimal_places Number decimal places statistics (default 1) include_theory Logical: Include theoretical context tree instability (default TRUE). Note: theory included first model avoid repetition. label_mapping Optional named list mapping variable names labels verbose Logical: Print progress messages (default TRUE) combine Logical: TRUE, combines interpretations single text (default FALSE) save_to_file Optional file path save combined interpretations text file include_ci Logical: TRUE format = \"technical\", include simple CIs output ci_level Numeric: Confidence level intervals (default 0.95)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","text":"Named list element contains interpretation model.   combine = TRUE, returns single character string interpretations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_stability_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Interpret Policy Tree Stability Results — margot_interpret_stability_batch","text":"","code":"if (FALSE) { # \\dontrun{ # Interpret all models all_interpretations <- margot_interpret_stability_batch(   stability_results,   format = \"technical\",   stability_threshold = 0.5,   label_mapping = label_mapping_all )  # Interpret specific models only selected_interpretations <- margot_interpret_stability_batch(   stability_results,   model_names = c(\"model_depression\", \"model_anxiety\"),   format = \"text\" )  # Get combined output for reporting combined_text <- margot_interpret_stability_batch(   stability_results,   combine = TRUE,   save_to_file = \"stability_interpretations.txt\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_interpret_marginal()` instead. function interprets output causal effect analysis, providing textual descriptions causal effect estimates. categorises strength evidence causality based E-values confidence intervals, generates detailed interpretation effect estimates according specified causal scales (.e., \"causal_difference\" \"risk_ratio\") estimands. function supports interpreting results causal difference risk ratio scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"","code":"margot_interpret_table(   df,   type = c(\"RD\", \"RR\"),   estimand = NULL,   order = \"default\",   original_df = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"df Data frame containing causal effect estimates, expected include columns outcome names, effect estimates (either differences ratios), confidence intervals, E-values, summary estimate label. structure `df` align specified `causal_scale`. estimand Optional character string indicating type causal estimand interpreted: \"PATE\" (Population Average Treatment Effect), \"ATE\" (Average Treatment Effect), \"ATT\" (Average Treatment Effect Treated), \"CATE\" (Conditional Average Treatment Effect), \"LMTP\" (Longitudinal Modified Treatment Policy). Default NULL. order Character string specifying order results. Default \"default\". causal_scale Character string specifying causal scale used analysis. Currently supports \"causal_difference\" differences means medians, \"risk_ratio\" comparing ratios probabilities risks.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"list containing two elements: estimand_description character string describing specified estimand, NULL estimand provided. interpretation character string containing detailed interpretation outcome `df`,   including causal contrast, E-values, strength evidence causality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `group_tab_output` is the result from a causal analysis result <- margot_interpret_table(group_tab_output, \"causal_difference\", \"ATE\") cat(result$estimand_description) cat(result$interpretation)  # Without specifying an estimand result <- margot_interpret_table(group_tab_output, \"risk_ratio\") cat(result$interpretation) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert Measure Values for Reverse Scoring — margot_invert_measure","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"Inverts measure values using either z-score negation ordinal scale inversion. function used internally margot_causal_forest flip_outcomes specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"","code":"margot_invert_measure(x, method = c(\"zscore\", \"ordinal\"), scale_bounds = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"x Numeric vector values invert method Character string specifying inversion method: - \"zscore\": Simple negation already standardized data (default) - \"ordinal\": Invert ordinal scale using bounds scale_bounds Numeric vector length 2 specifying [min, max] bounds ordinal scale inversion. Required method = \"ordinal\". NULL method = \"ordinal\", bounds inferred data range.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"Numeric vector inverted values","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"Z-score method: Simply negates values: x_flipped = -x assumes input data already standardized (z-scores). raw data needs standardization, consider using scale() first. Ordinal method: Uses formula: x_flipped = (max + min) - x preserves distances values reversing order.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_invert_measure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert Measure Values for Reverse Scoring — margot_invert_measure","text":"","code":"if (FALSE) { # \\dontrun{ # z-score inversion (for already standardized data) z_scores <- scale(c(1, 2, 3, 4, 5))[, 1] # standardize first margot_invert_measure(z_scores, method = \"zscore\")  # ordinal scale inversion with known bounds likert <- c(1, 2, 3, 4, 5, 3, 2) margot_invert_measure(likert, method = \"ordinal\", scale_bounds = c(1, 5))  # ordinal scale inversion with inferred bounds margot_invert_measure(likert, method = \"ordinal\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process LMTP Models — margot_lmtp","title":"Batch Process LMTP Models — margot_lmtp","text":"function runs multiple Longitudinal Modified Treatment Policy (LMTP) models specified outcome variables, calculates contrasts, creates evaluation tables, optionally saves complete output.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"margot_lmtp(   data,   outcome_vars,   trt,   shift_functions = list(),   include_null_shift = TRUE,   lmtp_model_type = lmtp::lmtp_tmle,   contrast_type = c(\"pairwise\", \"null\"),   contrast_scale = c(\"additive\", \"rr\", \"or\"),   lmtp_defaults = list(),   n_cores = parallel::detectCores() - 1,   models_in_parallel = NULL,   cv_workers = NULL,   save_output = FALSE,   save_path = here::here(\"push_mods\"),   base_filename = \"lmtp_output\",   use_timestamp = FALSE,   prefix = NULL,   manage_future_plan = FALSE,   progress = c(\"cli\", \"progressr\", \"none\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process LMTP Models — margot_lmtp","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. trt character string specifying treatment variable. shift_functions list shift functions applied. function take `data` `trt` arguments. include_null_shift Logical, whether include null shift. Default TRUE. lmtp_model_type LMTP model function use. Default lmtp_tmle. contrast_type Type contrasts compute: \"pairwise\" \"null\". Default \"pairwise\". contrast_scale Scale contrasts: \"additive\", \"rr\", \"\". Default \"additive\". lmtp_defaults list default parameters LMTP models. n_cores Total number CPU cores budget batch run. Default detectCores() - 1 (includes efficiency cores Apple Silicon, set manually want cap performance cores). models_in_parallel Optional cap many LMTP models run . Defaults floor(n_cores / cv_workers). cv_workers Number workers consumed internally LMTP fit (usually cross-validation folds). Defaults future::nbrOfWorkers(). save_output Logical, whether save complete output. Default FALSE. save_path directory path save output. Default \"push_mods\" current working directory. base_filename base filename saving output. Default \"lmtp_output\". use_timestamp Logical, whether include timestamp filename. Default FALSE. prefix Optional prefix add saved output filename. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process LMTP Models — margot_lmtp","text":"list containing: models list LMTP models outcome shift function. contrasts list contrasts computed outcome. individual_tables list individual tables contrast outcome. combined_tables list combined tables contrast type across outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"if (FALSE) { # \\dontrun{ # Assume we have a dataset 'my_data' with variables 'outcome', 'treatment', and some confounders  # Define shift functions gain_function <- function(data, trt) {   data[[trt]] + 1 }  loss_function <- function(data, trt) {   pmax(data[[trt]] - 1, 0) }  # Run LMTP analysis result <- margot_lmtp(   data = my_data,   outcome_vars = c(\"outcome1\", \"outcome2\"),   trt = \"treatment\",   shift_functions = list(gain = gain_function, loss = loss_function),   lmtp_defaults = list(     baseline = c(\"confounder1\", \"confounder2\"),     time_vary = c(\"time_var1\", \"time_var2\"),     outcome_type = \"continuous\"   ),   save_output = TRUE,   save_path = here::here(\"output\", \"lmtp_results\"),   prefix = \"my_study\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"function first creates summary table output `lmtp::lmtp_contrast()` using `margot_tab_lmtp`, specifying desired scale (RD RR) new name row. calculates E-values estimates table assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"margot_lmtp_evalue(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"lmtp_output output `lmtp::lmtp_contrast()`, summarized analyzed E-values. scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". new_name Character string name row output summary table, representing treatment contrast. name applied first row summary table. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"data frame original estimates E-values. table includes columns estimate (either RD RR), E-Value, E-Value lower bound, excluding 'standard_error' column.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # assuming `contrast_output` is the result from `lmtp::lmtp_contrast()` summary_evalues <- margot_lmtp_evalue(   lmtp_output = contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" ) print(summary_evalues) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","title":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","text":"Summarises density-ratio overlap effective sample size (ESS) LMTP models using `margot_lmtp_positivity()`, optionally creates diagnostic plots density-ratio distributions wave shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","text":"","code":"margot_lmtp_overlap(   x,   outcomes = NULL,   shifts = NULL,   plot = TRUE,   show_censored = FALSE,   theme = \"classic\",   scale = \"log10\",   digits = 3,   verbose = TRUE,   color_by = c(\"wave\", \"shift\", \"constant\"),   color_by_wave = NULL,   fill_palette = NULL,   bins = 40,   binwidth = NULL,   xlim = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","text":"x LMTP run output `$models` (e.g., result margot_lmtp()), list compatible `margot_lmtp_positivity()`. outcomes Optional character vector outcome names include. shifts Optional character vector shifts/policies include (accepts full names like `t5_pwi_z_shift_up` cleaned names like `shift_up`). plot Logical; TRUE, create ratio distribution plots. show_censored Logical; FALSE (default), histograms exclude zeros (r = 0) focus uncensored observations. TRUE, includes zeros histogram. Censoring rate always reported plot titles. theme ggplot2 theme keyword: \"classic\" (default), \"minimal\", \"bw\", \"gray\", \"light\", \"dark\", \"void\". scale Character; x-axis scale plotted ratios: \"log10\" (default) shows log10(density ratio) w>0, \"linear\" shows raw ratio. digits Integer rounding summaries (passed positivity helper). verbose Logical; emit informative messages. color_by Character; colour histogram fills: `\"wave\"` (default), `\"shift\"` (one colour per shift), `\"constant\"` (single colour). color_by_wave Legacy logical alias `color_by` (`TRUE` = `\"wave\"`, `FALSE` = `\"constant\"`). fill_palette Optional vector colours (named unnamed) used colouring histograms. Character aliases include `\"lab\"` (blue/red/grey constant fallback) `\"classic\"` (default qualitative palette). ... Ignored. Present backward compatibility older arguments like `save_plots` `output_dir` phased .","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","text":"list :   - overlap_summary: tibble combining -wave overall positivity/overlap metrics   - ratio_plots: list ggplot objects (plot = TRUE)   - flags: tibble positivity flags   - text_summary: brief prose summary","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess Overlap/Positivity from LMTP Models via Density Ratios — margot_lmtp_overlap","text":"**Censoring vs. Treatment Positivity:** default, histograms show **uncensored observations** (density ratios r > 0), zeros primarily reflect dropout/censoring rather treatment positivity violations. censoring rate (proportion r = 0) reported plot titles summaries. Use `show_censored = TRUE` include zeros histograms (shown bar r = 0).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap_plot_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange LMTP overlap ratio_plots into a grid (waves x shifts) — margot_lmtp_overlap_plot_grid","title":"Arrange LMTP overlap ratio_plots into a grid (waves x shifts) — margot_lmtp_overlap_plot_grid","text":"Given `ratio_plots` returned `margot_lmtp_overlap()`, build patchwork grid organized waves (rows) shifts (columns) single outcome. Accepts either full result list (`$ratio_plots`) plot list . Shift names may provided full names cleaned suffixes; missing cells filled blank panels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap_plot_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange LMTP overlap ratio_plots into a grid (waves x shifts) — margot_lmtp_overlap_plot_grid","text":"","code":"margot_lmtp_overlap_plot_grid(   x,   outcome = NULL,   shifts = NULL,   waves = NULL,   ncol = NULL,   drop_titles = TRUE,   title = NULL,   label_mapping = NULL,   annotate_zeros = FALSE,   ymax = NULL,   annotate_graph = c(\"none\", \"waves\", \"shifts\"),   xlim = NULL,   layout = c(\"waves_by_shifts\", \"shifts_by_waves\"),   ymax_harmonize = \"none\",   xlim_harmonize = \"none\",   headroom = 0.12,   text_size = text_size )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap_plot_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange LMTP overlap ratio_plots into a grid (waves x shifts) — margot_lmtp_overlap_plot_grid","text":"x list returned `margot_lmtp_overlap()` named list ggplot objects keyed `\"outcome::shift::wave\"`. outcome Optional character. supplied, inferred single outcome present `x`. Required multiple outcomes exist. shifts Optional character vector shifts include; accepts full names (e.g., `t5_pwi_z_shift_up`) cleaned (e.g., `shift_up`). NULL, includes available shifts outcome. waves Optional integer vector specifying waves (e.g., `1:5`). NULL, includes waves found outcome. ncol Optional integer number columns. Defaults number selected shifts. drop_titles Logical; TRUE (default), strip titles individual plots add single overall title. title Optional overall title; NULL, default constructed. label_mapping Optional named list prettify column (shift) labels via `transform_label()` available. annotate_zeros Logical; TRUE, adds \"zeros: X Default FALSE. annotate_graph Character; controls graph annotations: `\"waves\"` places wave labels top, `\"shifts\"` places shift labels top, `\"none\"` disables annotations (default: `\"none\"`). ymax_harmonize Character named vector; controls y-axis harmonization: `\"none\"` (default) gives plot independent y-scale, `\"row\"` harmonizes within rows, `\"column\"` harmonizes within columns, `\"global\"` harmonizes plots. Can also named vector custom values. xlim_harmonize Character named vector; controls x-axis harmonization: `\"none\"` (default) gives plot independent x-scale, `\"row\"` harmonizes within rows, `\"column\"` harmonizes within columns, `\"global\"` harmonizes plots. Can also named vector custom values. text_size Numeric size facet annotations (wave/shift/zeros labels).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_overlap_plot_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange LMTP overlap ratio_plots into a grid (waves x shifts) — margot_lmtp_overlap_plot_grid","text":"patchwork object combining selected plots.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"Computes -wave overall summaries density ratios, including zeros, extreme quantiles, tail mass thresholds, effective sample size (ESS).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"","code":"margot_lmtp_positivity(   x,   thresholds = c(10, 25, 50, 100),   probs = c(0.001, 0.01, 0.05, 0.5, 0.95, 0.999),   ess_warn = 0.5,   zero_warn = 0.01,   tail_warn = c(`10` = 0.05, `25` = 0.02, `50` = 0.01, `100` = 0.005),   include_overall = TRUE,   digits = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"x Either: - full result `margot_lmtp()` (list $models), - single LMTP model fit (must $density_ratios), - numeric vector/matrix density ratios. thresholds Numeric vector tail thresholds report (P(ratio > threshold)). probs Quantiles report (must include 0.5 want median). ess_warn Flag ESS/N fraction (per wave). zero_warn Flag proportion exact zeros exceeds fraction. tail_warn Named numeric vector giving tail-mass flag thresholds (names must match thresholds). length 1, recycled thresholds. include_overall TRUE, also compute overall summary pooling waves. digits Optional integer rounding returned data frames (NULL = rounding). verbose TRUE, prints concise CLI messages flags raised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"list : by_wave data.frame per-wave summaries (one row per outcome/shift/wave).     Columns include -observations metrics uncensored-(`*_pos`) metrics. overall data.frame pooled summaries across waves (one row per outcome/shift).     Also includes `*_pos` columns uncensored diagnostics. flags data.frame flagged issues (subset rows by_wave/overall reasons).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"**Censoring vs. Treatment Positivity:** longitudinal LMTP, zeros (\\(r_t = 0\\)) density ratios primarily reflect **censoring** (dropout) rather treatment positivity violations. individual censored time \\(t\\), observed treatment subsequent waves, yielding \\(r_t = 0\\) numerator regardless policy. censoring-induced zeros appear identically across policies individual. contrast, true **treatment positivity violations** policy-specific: observed treatment trajectory may incompatible one policy another. distinguish cases, function computes metrics observations (including zeros) **uncensored observations** (\\(r > 0\\)), latter denoted `*_pos` suffixes column names. `prop_zero` column reports censoring rate per wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_positivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize positivity via density ratios for LMTP fits — margot_lmtp_positivity","text":"","code":"# Single model: # pos <- margot_lmtp_positivity(fit$models$outcome$shift_model) # # Entire run from margot_lmtp(): # pos <- margot_lmtp_positivity(fit) # head(pos$by_wave); head(pos$flags)"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"LMTP density-ratio panel (per-wave grid) — margot_lmtp_ratio_grid","title":"LMTP density-ratio panel (per-wave grid) — margot_lmtp_ratio_grid","text":"Build grid density-ratio histograms across waves selected outcome shift/policy LMTP run. Plots use either log10 linear scale x-axis annotate proportion zeros.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LMTP density-ratio panel (per-wave grid) — margot_lmtp_ratio_grid","text":"","code":"margot_lmtp_ratio_grid(   x,   outcome,   shift,   waves = NULL,   scale = \"log10\",   theme = \"classic\",   bins = 40,   ncol = 3,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LMTP density-ratio panel (per-wave grid) — margot_lmtp_ratio_grid","text":"x LMTP run output `$models` (e.g., result `margot_lmtp()`), single LMTP model (`$density_ratios`), list models. outcome Character. Outcome name plot. shift Character. Shift/policy name. May full name (e.g., `t5_pwi_z_shift_up`) cleaned suffix (e.g., `shift_up`). waves Optional integer vector wave indices include. NULL, includes available waves. scale Character; `\"log10\"` (default) `\"linear\"` x-axis. theme ggplot2 theme keyword: `\"classic\"` (default), `\"minimal\"`, `\"bw\"`, `\"gray\"`, `\"light\"`, `\"dark\"`, `\"void\"`. bins Integer; histogram bins (default 40). ncol Integer; number columns grid (default 3). verbose Logical; emit informative messages.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LMTP density-ratio panel (per-wave grid) — margot_lmtp_ratio_grid","text":"patchwork plot object (ggplot) composing per-wave histograms.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_multigrid.html","id":null,"dir":"Reference","previous_headings":"","what":"LMTP density-ratio multi-shift grid (wave x shift) — margot_lmtp_ratio_multigrid","title":"LMTP density-ratio multi-shift grid (wave x shift) — margot_lmtp_ratio_multigrid","text":"Build facet grid density-ratio histograms across waves (rows) shifts (columns) selected outcome LMTP run. facet annotates proportion zero ratios (censoring mass).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_multigrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LMTP density-ratio multi-shift grid (wave x shift) — margot_lmtp_ratio_multigrid","text":"","code":"margot_lmtp_ratio_multigrid(   x,   outcome,   shifts = NULL,   waves = NULL,   scale = \"log10\",   theme = \"classic\",   bins = 40,   verbose = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_multigrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LMTP density-ratio multi-shift grid (wave x shift) — margot_lmtp_ratio_multigrid","text":"x LMTP run output `$models` (e.g., result `margot_lmtp()`), single LMTP model (`$density_ratios`), list models. outcome Character. Outcome name plot. shifts Optional character vector shifts/policies include. Accepts full names (e.g., `t5_pwi_z_shift_up`) cleaned suffixes (e.g., `shift_up`, `shift_down`, `null`). NULL, includes shifts. waves Optional integer vector waves include. NULL, includes . scale Character; `\"log10\"` (default) `\"linear\"` x-axis. theme ggplot2 theme keyword: `\"classic\"` (default), `\"minimal\"`, `\"bw\"`, `\"gray\"`, `\"light\"`, `\"dark\"`, `\"void\"`. bins Integer; histogram bins (default 40). verbose Logical; emit informative messages. label_mapping Optional named list human-friendly labels. provided, used via `transform_label()` available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_ratio_multigrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LMTP density-ratio multi-shift grid (wave x shift) — margot_lmtp_ratio_multigrid","text":"ggplot object `facet_grid(rows = vars(wave), cols = vars(shift))`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"margot_lmtp_tab(lmtp_output, scale = c(\"RD\", \"RR\"), new_name = \"\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate: \"RD\" \"RR\". Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"data frame four columns: estimate specified scale, standard error,   lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-transform Variables in a Data Frame — margot_log_transform_vars","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"function applies log(x + 1) transformation specified variables data frame. handles NA values, warns drops non-numeric selections, allows exceptions, can applied variables specific prefixes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"","code":"margot_log_transform_vars(   data,   vars,   exceptions = character(0),   prefix = \"log_\",   keep_original = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data data frame process. vars character vector variable names tidyselect helper (e.g., starts_with(\"hours_\")). exceptions character vector variable names exclude transformation. prefix string prepend names transformed variables. default \"log_.\" keep_original logical; true, keeps original transformed variables. false, replaces original. default true.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data frame log-transformed variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"margot_make_tables wrapper table1::table1() simplifies creation summary tables. provides custom variable labelling, formatting, factor conversion, additional table options. function optimized \"markdown\", \"latex\", \"flextable\" outputs, special support Quarto documents.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"","code":"margot_make_tables(   data,   vars,   by,   labels = NULL,   factor_vars = NULL,   table1_opts = list(),   format = c(\"markdown\", \"latex\", \"flextable\"),   kable_opts = list(),   flex_opts = list(),   quarto_label = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"data data.frame containing dataset. vars character vector variable names include left-hand side table. character vector variable names stratify table . Supports multiple variables interactions. labels named character vector custom variable labels. Names correspond variable names vars. factor_vars optional character vector variable names vars convert factors frequency tables. table1_opts list additional options pass table1::table1(). example, list(overall = FALSE, transpose = TRUE). format character string specifying output format. Options \"markdown\" (default), \"latex\", \"flextable\". kable_opts list additional options controlling table styling: format = \"latex\", passed kableExtra::kable_styling(). format = \"markdown\", currently documentation purposes. flex_opts list additional options flextable formatting: font_size: Font size table (default: 9) font_size_header: Font size headers (default: 10) theme: Theme function apply (default: \"theme_vanilla\") autofit: Whether autofit columns (default: TRUE) width: Table width (0-1 proportion page width, default: 1) quarto_label optional label Quarto cross-references (e.g., \"tbl-demographics\"). specified LaTeX output, adds \\label{} command enable Quarto's cross-referencing system.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"table object formatted specified output: format = \"latex\", kableExtra-formatted LaTeX table optional Quarto label format = \"markdown\", markdown-formatted kable table bold variable names format = \"flextable\", flextable object optimized Word output","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"","code":"if (FALSE) { # \\dontrun{ # Flextable output for Word flex_table <- margot_make_tables(   data = mydata,   vars = c(\"age\", \"gender\", \"income\"),   by = \"group\",   labels = c(\"age\" = \"Age\", \"gender\" = \"Gender\", \"income\" = \"Income\"),   factor_vars = \"gender\",   table1_opts = list(overall = FALSE, transpose = TRUE),   format = \"flextable\",   flex_opts = list(font_size = 8) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_merge_databases()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"","code":"margot_merge_databases(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_merge_databases(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"function creates summary table output various causal models, including `lmtp::lmtp_contrast()`, `grf::causal_forest()`, `grf::multi_arm_causal_forest()`. calculates E-values estimates assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"margot_model_evalue(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1,   subset = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"model_output output supported causal model. Supported types include: Output `lmtp::lmtp_contrast()` Output `grf::causal_forest()` Output `grf::multi_arm_causal_forest()` data frame columns 'estimate' 'std.err' scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". parameter ignored causal forest models, always use \"RD\". new_name Character string name row(s) output summary table, representing treatment contrast(s). multi-arm causal forests, combined contrast information. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1. subset optional logical vector subsetting data model `grf` model. Default `NULL`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"data frame original estimates E-values. table includes columns   estimate (either RD RR), confidence interval, E-Value, E-Value lower bound.   multi-arm causal forests, multiple rows returned, one contrast.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # For lmtp_contrast output summary_evalues <- margot_model_evalue(   model_output = lmtp_contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" )  # For causal_forest output cf_summary <- margot_model_evalue(   model_output = causal_forest_output,   new_name = \"Causal Forest Effect\" )  # For multi_arm_causal_forest output macf_summary <- margot_model_evalue(   model_output = multi_arm_cf_output,   new_name = \"Multi-Arm Effect\" )  # For direct input of estimate and standard error direct_summary <- margot_model_evalue(   model_output = data.frame(estimate = 0.5, std.err = 0.1),   new_name = \"Direct Effect\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"function takes output `lmtp::lmtp_contrast()` causal forest model creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR) LMTP models. causal forest models, scale always \"RD\". resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"margot_model_tab(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"model_output output object `lmtp::lmtp_contrast()` causal forest model. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". parameter ignored causal forest models. new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_model_tab(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) print(tab_contrast_hours_charity_z_null) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"function wrapper grf::multi_arm_causal_forest runs multiple GRF multi-arm causal forest models specified outcome variables. calculates average treatment effects, creates custom evaluation tables, includes additional features tau.hat estimates, policy trees, variable importance rankings, Qini curves. also prepares data policy tree visualization, using specified proportion data training.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"","code":"margot_multi_arm_causal_forest(   data,   outcome_vars,   covariates,   W_multi,   weights,   exposure_name,   grf_defaults = list(),   save_data = FALSE,   top_n_vars = 20,   save_models = FALSE,   compute_qini = TRUE,   train_proportion = 0.7,   W.hat = NULL,   cost = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W_multi factor vector multi-arm treatment assignments. weights vector weights observations. exposure_name character string specifying name exposure variable. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE. compute_qini Logical indicating whether compute Qini curves model. Default TRUE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.7. W.hat Optional vector specifying known treatment assignment probabilities arm. cost Optional vector specifying cost associated treatment arm. verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"list containing: results list model results, one outcome variable. model result includes: ateAverage treatment effect custom_tableCustom evaluation table tau_hatIndividual treatment effect estimates top_varsTop variables importance variable_importanceData frame variable importance rankings dr_scoresDouble robust scores policy_tree_depth_2Policy tree depth 2, trained train_proportion non-missing data plot_dataData prepared policy tree visualization, using remaining proportion non-missing data qini_dataData frame containing Qini curve data plotting (compute_qini TRUE) qini_objectsList maq objects curve, used computing average gain  combined_tables list data frames combining custom evaluation tables grouped comparison levels. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. exposure_name name exposure variable. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"Setting save_models = TRUE typically results large objects (often several GB).       Ensure sufficient memory available using option.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"function performs naive cross-sectional linear regressions single exposure variable multiple outcome variables, ignoring potential confounders. produces output compatible margot_plot() demonstrate happens proper causal inference methods used. results interpreted misspecified models account confounding.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"","code":"margot_naive_regressions(   data,   exposure_var,   outcome_vars,   baseline_vars = NULL,   scale = c(\"RD\", \"RR\"),   delta = 1,   sd = 1,   coefficient_scale = 1,   save_output = FALSE,   save_path = here::here(\"push_mods\"),   base_filename = \"naive_regressions_output\",   use_timestamp = FALSE,   prefix = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"data data frame containing necessary variables. exposure_var character string specifying exposure variable name. outcome_vars character vector outcome variable names modeled. baseline_vars Optional character vector baseline variables include covariates regression models. Default NULL (additional covariates). scale Character string specifying scale E-value calculation. Options \"RD\" (risk difference, default) \"RR\" (risk ratio). delta hypothesised increase outcome RD scale E-value calculations. Default value 1. sd standard deviation outcome RD scale E-value calculations. Default value 1. coefficient_scale Numeric value scale coefficients . Default 1 (scaling). Use interpret effects multi-unit changes (e.g., set 4 get effects 4-unit change exposure variable). save_output Logical, whether save complete output. Default FALSE. save_path directory path save output. Default \"push_mods\" current working directory. base_filename base filename saving output. Default \"naive_regressions_output\". use_timestamp Logical, whether include timestamp filename. Default FALSE. prefix Optional prefix add saved output filename. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"list containing: models list lm() model objects outcome. combined_table data frame columns E[Y|], 2.5     E_Val_bound, compatible margot_plot(). individual_results list individual regression summaries outcome.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"function fits simple linear regressions form: outcome ~ exposure + baseline_vars. calculates confidence intervals E-values regression coefficient. output uses \"E[Y|]\" notation indicate conditional expectations naive regressions, causal effects. E-values calculated technically incorrect since assume causal interpretation coefficients. function intended educational purposes demonstrate difference naive associations properly estimated causal effects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_naive_regressions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Naive Cross-Sectional Regressions — margot_naive_regressions","text":"","code":"if (FALSE) { # \\dontrun{ # perform naive regressions naive_results <- margot_naive_regressions(   data = my_data,   exposure_var = \"treatment\",   outcome_vars = c(\"outcome1_z\", \"outcome2_z\", \"outcome3_z\") )  # perform naive regressions with baseline covariates naive_results_adjusted <- margot_naive_regressions(   data = my_data,   exposure_var = \"treatment\",   outcome_vars = c(\"outcome1_z\", \"outcome2_z\", \"outcome3_z\"),   baseline_vars = c(\"age\", \"gender\", \"baseline_outcome\") )  # perform naive regressions scaled for 4-unit change naive_results_scaled <- margot_naive_regressions(   data = my_data,   exposure_var = \"treatment\",    outcome_vars = c(\"outcome1_z\", \"outcome2_z\", \"outcome3_z\"),   coefficient_scale = 4 )  # plot results with misspecified label margot_plot(naive_results$combined_table, rename_ate = \"Naive Association\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"function performs omnibus heterogeneity test specified models outputted margot::margot_run_models_grf() provides interpretations readable format.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"","code":"margot_omnibus_hetero_test(   model_results,   outcome_vars = NULL,   alpha = 0.05,   detail_level = \"standard\",   label_mapping = NULL,   format = \"table\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"model_results list model results margot::margot_run_models_grf(). outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. alpha Significance level hypothesis tests. Default 0.05. detail_level Character string specifying level detail output. Options \"basic\", \"standard\" (default), \"detailed\". label_mapping Optional. named list mapping outcome variable names display labels. example: list(\"t2_agreeableness_z\" = \"Agreeableness\"). format Output format: \"table\" (default), \"markdown\", \"text\". \"table\" returns tibble use tidyverse tools. \"markdown\" returns formatted markdown text Quarto documents. \"text\" returns plain text interpretations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"list containing:   - summary_table: tibble test results   - interpretations: Results formatted according format parameter   - brief_interpretation: concise summary results","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"runs planned subgroup contrasts (e.g., wealth, ethnicity, political orientation) multiple outcome domains, optional correction multiple comparisons.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"","code":"margot_planned_subgroups_batch(   domain_models,   X,   base_defaults,   label_mapping = NULL,   subset_types,   original_df,   domain_names,   subtitles,   adjust = c(\"none\", \"bonferroni\", \"holm\"),   alpha = 0.05,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"domain_models list model sets; one element per outcome domain X model matrix (data frame) predictors used models fitted base_defaults named list default arguments passed downstream plotting / helper functions label_mapping named list variable--label mappings; passed `margot_plot()` subset_types named list subset specifications (e.g., list(wealth = subsets_standard_wealth)) original_df raw data frame containing variables (needed label recovery, plotting original scale, etc.) domain_names character vector naming element `domain_models` subtitles character vector subtitles used plot annotations; must length `domain_names` adjust character; correction method multiple comparisons plots. one \"none\", \"bonferroni\", \"holm\". default: \"none\". alpha numeric; significance threshold correction. default: 0.05. ... additional arguments forwarded directly [`margot_subset_batch()`]","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"nested list. first level domain name; second level   subset type. leaf contains full list returned   `margot_subset_batch()`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot","text":"Create margot plot visualising causal effects proper simultaneous confidence intervals using multcomp family-wise error rate control.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot","text":"","code":"margot_plot(   .data,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL,   title_binary = NULL,   include_coefficients = TRUE,   standardize_label = c(\"NZ\", \"US\", \"none\"),   e_val_bound_threshold = 1.2,   adjust = c(\"none\", \"bonferroni\"),   alpha = 0.05,   ...,   options = list(),   label_mapping = NULL,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   prefix = NULL,   save_path = here::here(\"push_mods\"),   original_df = NULL,   bold_rows = FALSE,   rename_cols = FALSE,   col_renames = list(`E-Value` = \"E_Value\", `E-Value bound` = \"E_Val_bound\"),   rename_ate = FALSE,   rename_evalue = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot","text":".data data frame containing causal effect estimates columns effect sizes, confidence intervals, E-values E-value bounds type character. type effect estimate: \"RD\" (risk difference) \"RR\" (risk ratio) adjust character. multiplicity correction method: \"none\", \"bonferroni\" alpha numeric. significance level corrections ... parameters original function","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"function creates boxplots one variables across specified panel waves. offers various customisation options plot appearance layout.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"","code":"margot_plot_boxplot(   data,   y_vars,   waves = NULL,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = \"Wave\",   show_points = FALSE,   point_alpha = 0.05,   point_size = 0.5,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 16,   height = 8,   legend_position = \"bottom\",   y_limits = NULL,   facet_scales = \"free_y\",   facet_ncol = NULL,   facet_nrow = NULL,   coord_flip = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"data data frame containing variables plotted. y_vars list variable names plotted y-axis. waves vector wave values include plot (default NULL, includes waves). id_col Name column containing unique identifiers (default \"id\"). title title plot (optional, auto-generated NULL). y_label label y-axis (optional). x_label label x-axis (optional, defaults \"Wave\"). show_points Logical, whether show individual data points (default FALSE). point_alpha Alpha value data points shown (default 0.3). point_size Size data points shown (default 0.5). include_timestamp Logical, whether include timestamp plot title filename (default FALSE). save_path Path save plot (optional). prefix Optional prefix saved file name (default NULL). width Width saved plot inches (default 16). height Height saved plot inches (default 8). legend_position Position legend (default \"bottom\"). y_limits Y-axis limits (optional). facet_scales Scales facet panels (default \"free_y\"). facet_ncol Number columns facet_wrap (optional). facet_nrow Number rows facet_wrap (optional). coord_flip Logical, whether flip coordinates plot (default FALSE). ... Additional arguments passed geom_boxplot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"ggplot object representing boxplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"","code":"if (FALSE) { # \\dontrun{ # define outcome variables outcome_vars <- c(   \"env_climate_chg_concern\",   \"env_climate_chg_cause\",   \"env_climate_chg_real\",   \"env_sat_nz_environment\",   \"envefficacy\" )  # basic usage with all waves p1 <- margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   id_col = \"id\" )  # plotting specific waves with points shown and coordinates flipped p2 <- margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   waves = c(2021, 2022),   show_points = TRUE,   coord_flip = TRUE,   id_col = \"id\" )  # saving the plot with a custom prefix margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   waves = c(2021, 2022, 2023),   save_path = \"path/to/save\",   prefix = \"climate_change\",   include_timestamp = TRUE,   id_col = \"id\" )  # customizing the plot appearance with flipped coordinates p3 <- margot_plot_boxplot(   data = your_data,   y_vars = c(\"env_climate_chg_concern\", \"envefficacy\"),   waves = c(2021, 2022),   title = \"Climate Change Concern and Efficacy\",   y_label = \"Score\",   legend_position = \"right\",   facet_scales = \"free\",   coord_flip = TRUE,   id_col = \"id\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"function creates boxplots one outcome variable across specified panel waves, allowing different groups covariates. combines features margot_plot_boxplot() margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"","code":"margot_plot_boxplot_covariate(   data,   outcome,   covariate,   waves = NULL,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = \"Wave\",   color_label = NULL,   show_points = FALSE,   point_alpha = 0.05,   point_size = 0.5,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 16,   height = 8,   legend_position = \"right\",   y_limits = NULL,   coord_flip = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"data data frame containing variables plotted. outcome name outcome variable plotted. covariate name covariate variable grouping. waves vector wave values include plot (default NULL, includes waves). id_col name column containing unique identifiers (default \"id\"). title title plot (optional, auto-generated NULL). y_label label y-axis (optional). x_label label x-axis (optional, defaults \"Wave\"). color_label label color legend (optional, defaults covariate name). show_points logical, whether show individual data points (default FALSE). point_alpha alpha value data points shown (default 0.05). point_size size data points shown (default 0.5). include_timestamp logical, whether include timestamp plot title filename (default FALSE). save_path path save plot (optional). prefix optional prefix saved file name (default NULL). width width saved plot inches (default 12). height height saved plot inches (default 8). legend_position position legend (default \"right\"). y_limits y-axis limits (optional). coord_flip logical, whether flip coordinates plot (default FALSE). ... additional arguments passed geom_boxplot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"ggplot object representing boxplot covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"","code":"if (FALSE) { # \\dontrun{ # example 1: basic usage with all waves p1 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_climate_chg_concern\",   covariate = \"education\",   id_col = \"id\" )  # example 2: plotting specific waves with custom labels p2 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"political_orientation\",   covariate = \"age_group\",   waves = c(2021, 2022, 2023),   y_label = \"Political Orientation\",   color_label = \"Age Group\",   id_col = \"id\" )  # example 3: showing individual points and flipping coordinates p3 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_sat_nz_environment\",   covariate = \"income_bracket\",   show_points = TRUE,   coord_flip = TRUE,   y_label = \"Satisfaction with NZ Environment\",   color_label = \"Income Bracket\",   id_col = \"id\" )  # example 4: customizing plot appearance and saving p4 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"envefficacy\",   covariate = \"gender\",   y_label = \"Environmental Efficacy\",   color_label = \"Gender\",   legend_position = \"bottom\",   y_limits = c(1, 7),   save_path = \"path/to/save\",   prefix = \"env_efficacy\",   width = 10,   height = 6,   id_col = \"id\" )  # example 5: using with categorical outcome and including timestamp p5 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_climate_chg_cause\",   covariate = \"political_party\",   y_label = \"Perceived Cause of Climate Change\",   color_label = \"Political Party\",   include_timestamp = TRUE,   id_col = \"id\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coloured histogram with summary lines and optional median — margot_plot_categorical","title":"Create a coloured histogram with summary lines and optional median — margot_plot_categorical","text":"Create coloured histogram summary lines optional median","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coloured histogram with summary lines and optional median — margot_plot_categorical","text":"","code":"margot_plot_categorical(   df,   col_name,   label_mapping = NULL,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = NA,   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL,   legend_position = \"right\",   show_mean = FALSE,   show_sd = FALSE,   sd_multipliers = c(-2, 1),   show_median = FALSE,   print_summary = TRUE,   save_path = NULL,   width = 16,   height = 10,   include_timestamp = FALSE,   file_prefix = \"\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coloured histogram with summary lines and optional median — margot_plot_categorical","text":"label_mapping named vector; optional remapping variable names labels. show_mean logical; draw vertical line mean. default FALSE. show_sd logical; draw dashed lines mean ± sd_multipliers. default FALSE. sd_multipliers numeric(2); multipliers sd bands, c(lower, upper). default c(-2,1). show_median logical; draw vertical line median. default FALSE. print_summary logical; annotate mean/median values. default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Plot Options for Margot Plot — margot_plot_create_options","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"function creates list options use `margot_plot` function. allows easy customization plot settings maintaining set default values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"","code":"margot_plot_create_options(   subtitle,   base_defaults = NULL,   title = NULL,   filename_prefix = NULL,   label_mapping = NULL,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   save_path = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"subtitle Character string. subtitle plot. base_defaults List. base default options use. provided, uses pre-defined set defaults. title Character string. title plot. NULL, uses title base_defaults. filename_prefix Character string. Prefix filename. NULL, uses default prefix. label_mapping Named list. Mapping original outcome labels new labels. save_output Logical. Whether save complete output. Default FALSE. use_timestamp Logical. Whether add timestamp output filename. Default FALSE. base_filename Character string. Base name output file. Default \"margot_plot_output\". save_path Character string. Path output saved. Default NULL. ... Additional named arguments override add default options.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"list plot options used `margot_plot`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"function allows customization various plot parameters, including color schemes, text sizes, label transformations, output saving options. `label_mapping` parameter enables custom renaming specific outcomes without affecting default transformations labels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage health_options <- margot_plot_create_options(\"Health Outcomes\")  # Custom title, filename prefix, and output saving education_options <- margot_plot_create_options(   \"Education Outcomes\",   title = \"Custom Title\",   filename_prefix = \"edu_outcomes\",   save_output = TRUE,   use_timestamp = TRUE,   base_filename = \"education_analysis\",   save_path = \"path/to/save\" )  # Using label_mapping for custom outcome labels trust_science_options <- margot_plot_create_options(   subtitle = \"Trust in Science Outcomes\",   title = \"Science Trust Analysis\",   filename_prefix = \"science_trust\",   label_mapping = list(     \"t2_trust_science_our_society_places_too_much_emphasis_reversed_z\" = \"Science Overemphasis\"   ),   colors = c(     \"positive\" = \"#4CAF50\",     \"not reliable\" = \"#FFC107\",     \"negative\" = \"#F44336\"   ),   base_size = 16,   point_size = 4,   save_output = TRUE )  # Use the created options in margot_plot result <- margot_plot(your_data, options = trust_science_options) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","title":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","text":"Creates forest plot visualization cross-validation heterogeneity test results margot_rate_cv(). Shows t-statistics, p-values, significance model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","text":"","code":"margot_plot_cv_results(   cv_results,   title = NULL,   subtitle = NULL,   x_lab = \"t-statistic\",   y_lab = \"Model\",   remove_model_prefix = TRUE,   label_mapping = NULL,   show_p_values = TRUE,   significance_color = \"#4CAF50\",   non_significance_color = \"#9E9E9E\",   null_line_color = \"#FF5252\",   point_size = 3,   text_size = 3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","text":"cv_results margot_cv_results object margot_rate_cv() title Character string plot title. NULL (default), title generated based CV method details. subtitle Character string plot subtitle. Default shows adjustment method. x_lab Character string x-axis label. Default \"t-statistic\". y_lab Character string y-axis label. Default \"Model\". remove_model_prefix Logical; remove \"model_\" prefix model names. Default TRUE. label_mapping Optional named list custom label mappings. Keys model names (without \"model_\" prefix), values desired display labels. show_p_values Logical; show p-values plot. Default TRUE. significance_color Color significant results. Default \"#4CAF50\" (green). non_significance_color Color non-significant results. Default \"#9E9E9E\" (gray). null_line_color Color null hypothesis line. Default \"#FF5252\" (red). point_size Size points. Default 3. text_size Size p-value text. Default 3.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","text":"ggplot object can customized printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Cross-Validation Heterogeneity Test Results — margot_plot_cv_results","text":"","code":"if (FALSE) { # \\dontrun{ # Run cross-validation heterogeneity test cv_results <- margot_rate_cv(   model_results = cf_results,   num_folds = 5,   target = \"AUTOC\",   alpha = 0.2, # recommended for Bonferroni   adjust = \"bonferroni\" )  # Create forest plot p <- margot_plot_cv_results(cv_results) print(p)  # Create summary plot p_summary <- margot_plot_cv_summary(cv_results) print(p_summary)  # With custom labels label_mapping <- list(   \"model_happiness\" = \"Happiness\",   \"model_depression\" = \"Depression\" ) p <- margot_plot_cv_results(cv_results, label_mapping = label_mapping)  # Note: If you try to use margot_plot_rate() with CV results, you'll get an error: # margot_plot_rate(cv_results$cv_results)  # Error - use margot_plot_cv_results() instead } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary plot for cross-validation heterogeneity results — margot_plot_cv_summary","title":"Create summary plot for cross-validation heterogeneity results — margot_plot_cv_summary","text":"Creates summary bar plot showing proportion significant models distribution across positive/negative effects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary plot for cross-validation heterogeneity results — margot_plot_cv_summary","text":"","code":"margot_plot_cv_summary(   cv_results,   title = NULL,   positive_color = \"#4CAF50\",   negative_color = \"#F44336\",   neutral_color = \"#9E9E9E\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary plot for cross-validation heterogeneity results — margot_plot_cv_summary","text":"cv_results margot_cv_results object margot_rate_cv() title Character string plot title. Default generates based results. positive_color Color positive effects. Default \"#4CAF50\" (green). negative_color Color negative effects. Default \"#F44336\" (red). neutral_color Color non-significant effects. Default \"#9E9E9E\" (gray).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_cv_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create summary plot for cross-validation heterogeneity results — margot_plot_cv_summary","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Decision Tree from Margot Causal-Forest Results (robust labelling) — margot_plot_decision_tree","title":"Plot a Decision Tree from Margot Causal-Forest Results (robust labelling) — margot_plot_decision_tree","text":"Plot Decision Tree Margot Causal-Forest Results (robust labelling)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Decision Tree from Margot Causal-Forest Results (robust labelling) — margot_plot_decision_tree","text":"","code":"margot_plot_decision_tree(   result_object,   model_name = NULL,   max_depth = 2L,   original_df = NULL,   x_padding = 0.12,   y_padding = 0.25,   border_size = 0.5,   text_size = 4,   edge_label_offset = 0.025,   span_ratio = 0.4,   non_leaf_fill = \"lightyellow\",   title = NULL,   plot_margin = grid::unit(c(1, 1, 1, 1), \"cm\"),   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   remove_action_label = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Decision Tree from Margot Causal-Forest Results (robust labelling) — margot_plot_decision_tree","text":"result_object list returned `margot_causal_forest()` model_name Name model results visualise max_depth Maximum depth tree (1L 2L) original_df Optional dataframe original data showing untransformed values x_padding Horizontal padding plot (proportion) y_padding Vertical padding plot (proportion) border_size Size node borders lines text_size Size text plot elements edge_label_offset Offset edge labels connecting lines span_ratio Controls aspect ratio plot non_leaf_fill Colour non-leaf nodes (decision nodes) title Optional custom title plot plot_margin Margins around plot remove_tx_prefix Whether remove treatment prefixes variable names remove_z_suffix Whether remove z-suffixes variable names use_title_case Whether use title case variable names remove_underscores Whether replace underscores spaces variable names remove_action_label Whether remove \"Action:\" prefix leaf node labels label_mapping Optional list renaming variables display","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot_dev","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot_dev","text":"Create margot plot visualising causal effects proper simultaneous confidence intervals using multcomp family-wise error rate control.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot_dev","text":"","code":"margot_plot_dev(   .data,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL,   title_binary = NULL,   include_coefficients = TRUE,   standardize_label = c(\"NZ\", \"US\", \"none\"),   e_val_bound_threshold = 1.2,   adjust = c(\"none\", \"bonferroni\", \"BH\"),   alpha = 0.05,   ...,   options = list(),   label_mapping = NULL,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   prefix = NULL,   save_path = here::here(\"push_mods\"),   original_df = NULL,   bold_rows = FALSE,   rename_cols = FALSE,   col_renames = list(`E-Value` = \"E_Value\", `E-Value bound` = \"E_Val_bound\"),   rename_ate = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Margot Plot with Proper Multiplicity Correction — margot_plot_dev","text":".data data frame containing causal effect estimates columns effect sizes, confidence intervals, E-values E-value bounds type character. type effect estimate: \"RD\" (risk difference) \"RR\" (risk ratio) adjust character. multiplicity correction method: \"none\", \"bonferroni\", \"BH\" alpha numeric. significance level corrections ... parameters original function","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"function creates ggplot2 visualisation show discontinuities data across multiple events. particularly useful visualising changes trends significant events.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"","code":"margot_plot_discontinuity(   data,   y_var,   event_dates,   event_names = NULL,   start_date = NULL,   end_date = NULL,   title = NULL,   y_label = NULL,   x_label = NULL,   smoothing_method = \"gam\",   gam_k = 4,   data_fraction = 1,   seed = 12345,   point_alpha = 0.03,   jitter_width = 1,   base_date = as.Date(\"2009-06-30\"),   save_path = NULL,   width = 12,   height = 8,   event_line_color = \"darkred\",   event_line_alpha = 0.7,   event_line_type = \"dashed\",   event_line_width = 0.5,   event_label_size = 3,   event_label_color = \"darkred\",   legend_position = \"bottom\",   use_title_case = TRUE,   remove_underscores = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"data data frame containing variables plotted. y_var name y-axis variable data frame. event_dates vector dates representing events. event_names optional vector names events. NULL, events labeled \"Event 1\", \"Event 2\", etc. start_date optional start date x-axis. end_date optional end date x-axis. title optional title plot. y_label optional label y-axis. x_label optional label x-axis. smoothing_method method used smoothing. Default \"gam\". gam_k number knots use smoothing_method \"gam\". Default 4. data_fraction fraction data use. Default 1 (use data). seed optional seed reproducibility sampling data. point_alpha alpha (transparency) data points. Default 0.03. jitter_width width jitter data points. Default 1. base_date base date timeline. Default \"2009-06-30\". save_path optional path save plot. width width saved plot inches. Default 12. height height saved plot inches. Default 8. event_line_color color event lines. Default \"darkred\". event_line_alpha alpha event lines. Default 0.7. event_line_type type event lines. Default \"dashed\". event_line_width width event lines. Default 0.5. event_label_size size event labels. Default 3. event_label_color color event labels. Default \"darkred\". legend_position position legend. Default \"bottom\". use_title_case Logical, whether use title case labels. Default TRUE. remove_underscores Logical, whether remove underscores labels. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"ggplot2 object representing discontinuity plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(ggplot2) library(margot)  # Assume that 'dat' is your dataset and that 'path_talk' is defined muslim_discontinuity_warmth_plot <- margot_plot_discontinuity(   data = dat,   y_var = \"warm_muslims\",   event_dates = c(\"2019-03-15\", \"2020-03-26\"),   event_names = c(\"Christchurch Attack\", \"COVID-19 Lockdown\"),   start_date = \"2012-06-06\",   title = \"Discontinuity at multiple events (GAM)\",   y_label = \"Muslim Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\",   point_alpha = 0.05,   smoothing_method = \"gam\",   gam_k = 4,   data_fraction = .1,   seed = 123,   save_path = here::here(path_talk) )  # Display the plot print(muslim_discontinuity_warmth_plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a separate exposure plot — margot_plot_exposure","title":"Create a separate exposure plot — margot_plot_exposure","text":"Create separate exposure plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a separate exposure plot — margot_plot_exposure","text":"","code":"margot_plot_exposure(data, name_exposure, exposure_waves, baseline_wave)"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a separate exposure plot — margot_plot_exposure","text":"data data frame containing exposure data name_exposure name exposure variable exposure_waves vector wave numbers exposure measurements baseline_wave wave number baseline measurements","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a separate exposure plot — margot_plot_exposure","text":"ggplot object representing exposure plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"margot_plot_grf_rate(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_histogram()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"","code":"margot_plot_hist(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Error in coloured_histogram_quantiles(df, \"value\", n_divisions = 4): could not find function \"coloured_histogram_quantiles\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): could not find function \"coloured_histogram_quantiles\""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"function generates histogram plot specified variables across different waves data. highlights mean standard deviation variable wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"","code":"margot_plot_histogram(   data,   col_names,   id_col = \"id\",   wave_col = \"wave\",   waves = NULL,   binwidth = 0.5,   title = NULL,   x_label = NULL,   y_label = \"Count\",   save_path = NULL,   width = 12,   height = 8,   facet_scales = \"free\",   color_palette = NULL,   add_timestamp = FALSE,   file_prefix = \"\",   mean_line_color = \"black\",   sd_line_color = \"black\",   vertical_facets = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"data data frame containing variables plot. col_names Vector names columns create histograms . id_col Name column containing unique identifiers. Default \"id\". wave_col Name column containing wave information. Default \"wave\". waves Vector waves include plot. NULL, waves included. binwidth Width bins histogram. Default 0.5. title optional title plot. NULL, automatic title generated. x_label optional label x-axis. NULL, \"Value\" used. y_label optional label y-axis. Default \"Count\". save_path optional path save plot. NULL, plot saved. width width saved plot inches. Default 12. height height saved plot inches. Default 8. facet_scales Scales facet. Either \"fixed\", \"free_x\", \"free_y\", \"free\". Default \"free\". color_palette optional custom color palette plot. add_timestamp Logical. TRUE, adds timestamp saved filename. Default FALSE. file_prefix optional prefix add beginning saved filename. Default empty string. mean_line_color Color vertical line representing mean. Default \"black\". sd_line_color Color dashed lines representing standard deviation. Default \"black\". vertical_facets Logical. TRUE, facets arranged vertically. FALSE (default), facets arranged horizontally.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"ggplot2 object representing histogram highlights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"","code":"# basic usage with default settings margot_plot_histogram(   data = your_data,   col_names = c(\"variable1\", \"variable2\"),   id_col = \"participant_id\",   wave_col = \"survey_wave\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # specify waves and custom binwidth margot_plot_histogram(   data = your_data,   col_names = c(\"score1\", \"score2\"),   waves = c(2018, 2020),   binwidth = 1 ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use custom labels and saving the plot with timestamp and prefix margot_plot_histogram(   data = your_data,   col_names = c(\"attitude_measure\"),   title = \"Distribution of Attitudes Over Time\",   x_label = \"Attitude Score\",   save_path = \"path/to/save/plot\",   add_timestamp = TRUE,   file_prefix = \"study1\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use a custom color palette and custom line colors custom_colors <- c(\"#FF9999\", \"#66B2FF\") margot_plot_histogram(   data = your_data,   col_names = c(\"var1\", \"var2\"),   color_palette = custom_colors,   mean_line_color = \"red\",   sd_line_color = \"blue\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use vertical faceting margot_plot_histogram(   data = your_data,   col_names = c(\"var1\", \"var2\"),   vertical_facets = TRUE ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"function creates histogram colored regions based quantile breaks custom breaks. uses `create_ordered_variable` function categorize data plots histogram different colors category.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"margot_plot_histogram_intervals(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Warning: `coloured_histogram_quantiles()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_plot_hist()` instead. #> Error in ggplot(df, aes(x = !!rlang::sym(col_name))): could not find function \"ggplot\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): unused argument (custom_breaks = c(-2, -1, 0, 1, 2))"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"function creates ggplot2 visualization individual responses time one variables. allows flexible data filtering, sampling, customization plot appearance. function automatically handles missing data removing rows NA values specified variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"","code":"margot_plot_individual_responses(   data,   y_vars,   id_col = \"id\",   wave_col = \"wave\",   waves = NULL,   data_fraction = 1,   random_draws = 100,   title = NULL,   y_label = NULL,   x_label = NULL,   color_palette = NULL,   theme = ggplot2::theme_classic(),   include_timestamp = FALSE,   save_path = NULL,   width = 16,   height = 8,   seed = 12345,   wave_label_angle = 45,   full_response_scale = TRUE,   scale_range = NULL,   prefix = NULL,   jitter_amount = 0.05,   legend_position = \"top\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"data data frame containing variables plotted. y_vars character vector column names `data` plotted y-axis. id_col name column `data` contains unique identifiers individuals. Default \"id\". wave_col name column `data` contains wave time information. Default \"wave\". waves optional vector wave values include plot. NULL, waves included. data_fraction fraction data use (0 1). Default 1 (use data). random_draws number random individuals plot. specified, overrides `data_fraction`. title optional title plot. y_label optional label y-axis. x_label optional label x-axis. color_palette optional vector colors use variables. theme ggplot2 theme use plot. Default theme_classic(). include_timestamp Logical, whether include timestamp saved file name. Default FALSE. save_path optional file path save plot. width width saved plot inches. Default 16. height height saved plot inches. Default 8. seed optional seed reproducibility sampling data. wave_label_angle angle x-axis labels degrees. Default 45. full_response_scale Logical, whether use full response scale y-axis. Default TRUE. scale_range optional numeric vector length 2 specifying range y-axis. NULL, range determined data. prefix optional prefix saved file name. jitter_amount Numeric, amount vertical jitter apply points lines. Default 0.05. legend_position position legend. Default \"top\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"ggplot2 object representing individual response plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Basic usage with default settings plot1 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"variable1\", \"variable2\"),   id_col = \"participant_id\",   wave_col = \"year\" )  # Example 2: Plotting specific waves and using random draws plot2 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"score1\", \"score2\", \"score3\"),   waves = c(2020, 2021, 2022),   random_draws = 50,   title = \"Individual Scores Over Time\",   y_label = \"Score\",   x_label = \"Year\",   seed = 123 )  # Example 3: Customizing plot appearance and saving plot3 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"measure1\", \"measure2\"),   full_response_scale = TRUE,   scale_range = c(0, 10),   theme = theme_minimal(),   wave_label_angle = 90,   jitter_amount = 0.03,   legend_position = \"bottom\",   save_path = \"path/to/save\",   prefix = \"custom_plot\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_learners.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Super Learner weights for LMTP nuisance fits — margot_plot_lmtp_learners","title":"Plot Super Learner weights for LMTP nuisance fits — margot_plot_lmtp_learners","text":"Produces heatmap average Super Learner weights wave, learner, shift, nuisance component (outcome regression `m` density-ratio regression `r`). Colours encode mean Super Learner weight averaged across cross-fitting folds.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_learners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Super Learner weights for LMTP nuisance fits — margot_plot_lmtp_learners","text":"","code":"margot_plot_lmtp_learners(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   waves = NULL,   remove_waves = NULL,   component = c(\"both\", \"outcome\", \"treatment\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_learners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Super Learner weights for LMTP nuisance fits — margot_plot_lmtp_learners","text":"x LMTP run output (e.g., result [margot_lmtp()]) object exposes `$density_ratios` structure plot helpers. outcome Character scalar giving outcome name summarise. shifts Optional character vector shifts include (either full names `t5_pwi_z_shift_up` cleaned suffixes `shift_up`). `NULL`, available shifts outcome used. label_mapping Optional named list passed [transform_label()] readable outcome/shift labels. waves Optional integer vector waves keep (matching wave index used LMTP fits). remove_waves Optional integer vector waves drop subsetting. component nuisance models include: `\"\"` (default), `\"outcome\"` (`m`), `\"treatment\"` (`r`).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_learners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Super Learner weights for LMTP nuisance fits — margot_plot_lmtp_learners","text":"`ggplot2` object.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_overlap_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","title":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","text":"Thin wrapper around `margot_lmtp_overlap()` `margot_lmtp_overlap_plot_grid()` returns panel grid optional harmonised user-specified y-axis limits histogram counts.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_overlap_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","text":"","code":"margot_plot_lmtp_overlap_grid(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   show_censored = FALSE,   scale = \"linear\",   theme = \"empty\",   ymax = NULL,   digits = 3,   annotate_graph = c(\"none\", \"waves\", \"shifts\"),   annotate_zeros = FALSE,   waves = NULL,   xlim = NULL,   layout = c(\"waves_by_shifts\", \"shifts_by_waves\"),   ymax_harmonize = \"none\",   xlim_harmonize = \"none\",   headroom = 0.12,   color_by = c(\"wave\", \"shift\", \"constant\"),   color_by_wave = NULL,   fill_palette = NULL,   text_size = 3,   bins = 40,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_overlap_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","text":"x LMTP run output `$models` input accepted `margot_lmtp_overlap()`. outcome Character outcome plot (required). shifts Optional character vector shifts include (full cleaned names). label_mapping Optional label map pretty titles. show_censored Logical; FALSE (default), histograms exclude zeros (r = 0). TRUE, includes zeros. Censoring rate always shown titles. scale Character, \"log10\" \"linear\" ratio scale (passed `margot_lmtp_overlap()`). theme Character ggplot theme keyword passed `margot_lmtp_overlap()`. ymax Optional numeric y-axis maximum histogram counts across panels (passed `margot_lmtp_overlap_plot_grid()`). digits Integer rounding summaries (used plot aesthetics). annotate_graph Character; controls graph annotations: `\"waves\"` places wave labels top, `\"shifts\"` places shift labels top, `\"none\"` disables annotations (default: `\"none\"`). annotate_zeros Logical; TRUE, adds \"zeros: X Default FALSE. waves Optional integer vector specifying waves include (e.g., `c(1, 2, 3)`). NULL, includes waves found outcome. ymax_harmonize Character named vector; controls y-axis harmonization: `\"none\"` (default) gives plot independent y-scale, `\"row\"` harmonizes within rows, `\"column\"` harmonizes within columns, `\"global\"` harmonizes plots. Can also named vector custom values (e.g., `c(wave_1 = 1000)`). xlim_harmonize Character named vector; controls x-axis harmonization: `\"none\"` (default) gives plot independent x-scale, `\"row\"` harmonizes within rows, `\"column\"` harmonizes within columns, `\"global\"` harmonizes plots. Can also named vector custom values. color_by Character; histogram fills coloured (`\"wave\"`, `\"shift\"`, `\"constant\"`). color_by_wave Legacy logical alias `color_by` (`TRUE` = `\"wave\"`, `FALSE` = `\"constant\"`). fill_palette Optional vector colours (named unnamed) used colouring histograms. text_size Numeric size facet annotations (wave/shift/zeros labels).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_overlap_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","text":"patchwork grid object.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_overlap_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot LMTP density-ratio grid (waves x shifts) — margot_plot_lmtp_overlap_grid","text":"default, histograms show **uncensored observations** (r > 0) zeros primarily reflect dropout/censoring. Use `show_censored = TRUE` include zeros.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LMTP positivity (overall and by-wave ESS/N) — margot_plot_lmtp_positivity","title":"Plot LMTP positivity (overall and by-wave ESS/N) — margot_plot_lmtp_positivity","text":"Generates two ggplots `margot_report_lmtp_positivity()` results: bar plot overall ESS/N estimand, line plot ESS/N wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LMTP positivity (overall and by-wave ESS/N) — margot_plot_lmtp_positivity","text":"","code":"margot_plot_lmtp_positivity(   x,   outcome = NULL,   shifts = NULL,   label_mapping = NULL,   digits = 2,   ymax = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LMTP positivity (overall and by-wave ESS/N) — margot_plot_lmtp_positivity","text":"x Either report list `margot_report_lmtp_positivity()` model object acceptable `margot_report_lmtp_positivity()` `outcome` provided. outcome Character outcome (required `x` model object). shifts Optional character vector shifts/policies (full cleaned). label_mapping Optional label mapping passed reporter. digits Integer rounding reporter. ymax Unused ; exists interface consistency (use `margot_plot_lmtp_overlap_grid()` adjust histogram heights).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LMTP positivity (overall and by-wave ESS/N) — margot_plot_lmtp_positivity","text":"list `overall_plot`, `by_wave_plot`, underlying   `report`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch plot/report LMTP positivity for multiple analyses — margot_plot_lmtp_positivity_batch","title":"Batch plot/report LMTP positivity for multiple analyses — margot_plot_lmtp_positivity_batch","text":"Convenience wrapper run `margot_report_lmtp_positivity()` `margot_plot_lmtp_positivity()` across list analyses.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch plot/report LMTP positivity for multiple analyses — margot_plot_lmtp_positivity_batch","text":"","code":"margot_plot_lmtp_positivity_batch(   analyses,   label_mapping = NULL,   digits = 2,   include_plots = TRUE,   ymax = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch plot/report LMTP positivity for multiple analyses — margot_plot_lmtp_positivity_batch","text":"analyses list spec lists, `x`, `outcome`, optional `shifts`, optional `name`. label_mapping Optional label map passed reporters/plots. digits Integer rounding numeric outputs. include_plots Logical; include overlap grid report. ymax Optional numeric histogram y-axis alignment overlap grid.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_lmtp_positivity_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch plot/report LMTP positivity for multiple analyses — margot_plot_lmtp_positivity_batch","text":"named list; element contains `report`, `plots`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"function wrapper `margot_plot()` function, designed multi-arm causal forest models. allows user specify contrast interest, automatically passes `margot_plot()` function. specified contrast found, error reported.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"","code":"margot_plot_multi_arm(   model_table,   contrast,   original_df = NULL,   options,   label_mapping,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   prefix = NULL,   save_path = here::here(\"push_mods\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"model_table list data frame containing model output tables. contrast character string specifying contrast used (e.g. `\"(5.0,7.0] - [1.0,3.0]\"`). original_df Optional data frame containing original (non-transformed) data back-transformation results. options list additional options customising plot, passed directly `margot_plot()`. label_mapping named list custom label mapping outcomes, also passed `margot_plot()`. save_output Logical. TRUE, saves complete output file. Default FALSE. use_timestamp Logical. TRUE, adds timestamp saved filename. Default FALSE. base_filename Character string. base name saved file. Default \"margot_plot_output\". prefix Character string. optional prefix saved filename. Default NULL. save_path Character string. directory path output saved. Default ::(\"push_mods\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"list following elements: `plot`: ggplot object Margot plot. `interpretation`: character string interpretation results. `transformed_table`: data frame transformed labels according options label mappings. `save_output` TRUE, complete output saved file using margot::here_save_qs().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"user must specify contrast `model_table`. contrast found, error raised using `cli` reporting. `margot_plot()` function provides various options customising plot, including ability save plot, modify labels, adjust plot aesthetics. full range options available `margot_plot()` can passed `options` argument. `original_df` provided, function use back-transform results original scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage with multi-arm models multi_results <- margot_plot_multi_arm(   models_multi$combined_tables,   contrast = \"(5.0,7.0] - [1.0,3.0]\",   original_df = df_raw_outcomes,   options = multi_options,   label_mapping = label_mapping,   save_output = TRUE,   save_path = here::here(\"output\", \"margot_plots\"),   base_filename = \"margot_plot_output\",   prefix = \"test\" ) print(multi_results$plot) cat(multi_results$interpretation) print(multi_results$transformed_table) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"function generates combined plot consisting decision tree graph showing relationships variables recommended policy.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"","code":"margot_plot_policy_combo(   result_object,   model_name,   max_depth = 2L,   label_mapping = NULL,   original_df = NULL,   layout = list(heights = c(1, 2)),   annotation = list(tag_levels = \"A\"),   generate_policy_tree = TRUE,   generate_decision_tree = TRUE,   policy_tree_args = list(),   decision_tree_args = list() )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"result_object object containing results multi-arm causal forest model. model_name character string specifying name model. max_depth Integer, 1 2; decision tree depth plot. Default: 2. label_mapping Optional named list custom label mappings. original_df Optional dataframe untransformed variables. layout list specifying layout combined plot max_depth==2. Default `list(heights = c(1, 2))`, sets relative heights two plots. annotation list specifying annotation combined plot max_depth==2. Default `list(tag_levels = \"\")`, adds alphabetic tags subplots. generate_policy_tree Logical, whether generate policy tree plot. Default TRUE. generate_decision_tree Logical, whether generate decision tree plot. Default TRUE. policy_tree_args list arguments pass `margot_plot_policy_tree`. Default list(). decision_tree_args list arguments pass `margot_plot_decision_tree`. Default list().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"list containing: policy_tree ggplot object representing policy tree (generated) decision_tree ggplot object representing decision tree (generated) combined_plot ggplot object representing combined plot (plots generated)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","title":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","text":"Visualise first one two splits `policytree` stored inside multi-arm causal-forest result.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","text":"","code":"margot_plot_policy_tree(   result_object,   model_name,   max_depth = 2L,   original_df = NULL,   shading = NULL,   color_scale = NULL,   point_alpha = 0.5,   theme_function = ggplot2::theme_classic,   label_mapping = NULL,   label_options = list(remove_tx_prefix = TRUE, remove_z_suffix = TRUE,     remove_underscores = TRUE, use_title_case = TRUE),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","text":"result_object list produced `margot_multiclass_cf()` (similar) whose `results` slot holds `policy_tree_depth_1`, `policy_tree_depth_2`, `plot_data` entries `model_name`. model_name Character scalar identifying result inside `result_object$results`. max_depth Integer, 1 2; stored tree visualise. original_df Optional data frame raw-scale variables (used depth-2 plot secondary-axis labels). shading Logical – draw shaded half-planes non-decision regions (depth-2 ).  `NULL` (default) function decides automatically. color_scale pre-built `ggplot2` colour scale (rarely needed). point_alpha Alpha transparency plotted points. theme_function `ggplot2` theme function; default `ggplot2::theme_classic`. label_mapping Named list explicit string replacements; passed `transform_label()`. label_options List logical flags understood `transform_label()` (see function details). ... Extra arguments forwarded **** depth-2 helper (e.g. `title_size`, `jitter_width`, etc.).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","text":"`ggplot` object (depth 1) patchwork object (depth 2).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a policy tree (depth-adaptive) — margot_plot_policy_tree","text":"* **Depth 1** – one–dimensional jitter plot coloured predicted   action annotated split point. * **Depth 2** – existing two-panel scatter-plot (hand-  `margot_plot_policy_tree_depth2()`).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree_depth2.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a policy tree (depth 2) — margot_plot_policy_tree_depth2","title":"plot a policy tree (depth 2) — margot_plot_policy_tree_depth2","text":"visualise first two splits `policytree` object stored inside multi-arm causal-forest result. panel shows primary split variable x-axis one two secondary split variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree_depth2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a policy tree (depth 2) — margot_plot_policy_tree_depth2","text":"","code":"margot_plot_policy_tree_depth2(   result_object,   model_name,   original_df = NULL,   shading = TRUE,   color_scale = NULL,   point_alpha = 0.5,   theme_function = ggplot2::theme_classic,   label_mapping = NULL,   label_options = list(remove_tx_prefix = TRUE, remove_z_suffix = TRUE,     remove_underscores = TRUE, use_title_case = TRUE),   title_size = 16,   subtitle_size = 14,   axis_title_size = 14,   legend_title_size = 14,   jitter_width = 0.3,   jitter_height = 0.3,   split_line_color = \"red\",   split_line_alpha = 0.7,   split_line_type = \"dashed\",   split_line_linewidth = 0.5,   split_label_size = 10,   split_label_color = \"red\",   custom_action_names = NULL,   legend_position = \"bottom\",   plot_selection = \"both\",   shade_fill = \"#6e6e6e\",   shade_alpha = 0.35,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree_depth2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a policy tree (depth 2) — margot_plot_policy_tree_depth2","text":"result_object list produced `margot_multiclass_cf()` (similar) whose `results` slot holds `policy_tree_depth_1`, `policy_tree_depth_2`, `plot_data` entries `model_name`. model_name Character scalar identifying result inside `result_object$results`. original_df Optional data frame raw-scale variables (used depth-2 plot secondary-axis labels). shading Logical – draw shaded half-planes non-decision regions (depth-2 ).  `NULL` (default) function decides automatically. color_scale pre-built `ggplot2` colour scale (rarely needed). point_alpha Alpha transparency plotted points. theme_function `ggplot2` theme function; default `ggplot2::theme_classic`. label_mapping Named list explicit string replacements; passed `transform_label()`. label_options List logical flags understood `transform_label()` (see function details). ... Extra arguments forwarded **** depth-2 helper (e.g. `title_size`, `jitter_width`, etc.).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree_depth2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot a policy tree (depth 2) — margot_plot_policy_tree_depth2","text":"version lets fine-tune placement annotations independently: one top--panel (x split) one y-axis (y split).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"function creates ggplot object displaying Qini curves based results margot_multi_arm_causal_forest() model. includes label transformations informative CLI messages. function designed consistent maq::plot() functionality providing additional features like theme selection spend level indicators.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"margot_plot_qini(   mc_result,   outcome_var,   label_mapping = NULL,   spend_levels = c(0.1, 0.4),   show_spend_lines = TRUE,   spend_line_color = \"red\",   spend_line_alpha = 0.5,   theme = \"classic\",   show_ci = FALSE,   ci_alpha = 0.05,   ci_n_points = 20,   ci_ribbon_alpha = 0.3,   ci_ribbon_color = NULL,   horizontal_line = TRUE,   grid_step = NULL,   return_data = FALSE,   ylim = NULL,   fixed_ylim = FALSE,   baseline_method = \"auto\",   cate_color = \"#d8a739\",   ate_color = \"#4d4d4d\",   scale = \"average\",   treatment_cost = NULL,   seed = 12345,   x_axis = c(\"proportion\", \"budget\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"mc_result list containing results margot_multi_arm_causal_forest(). outcome_var character string specifying name outcome variable plot. match one model names mc_result$results. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL. spend_levels Numeric vector spend levels show vertical lines. Default 0.1. show_spend_lines Logical indicating whether show vertical lines spend levels. Default TRUE. spend_line_color Color spend level lines. Default \"red\". spend_line_alpha Alpha transparency spend lines. Default 0.5. theme Character string specifying ggplot2 theme. Default \"classic\". Options include \"classic\", \"minimal\", \"bw\", \"gray\", \"light\", \"dark\", \"void\". show_ci Logical character indicating confidence intervals show. Options: FALSE (none), TRUE \"\" (curves), \"cate\" (CATE ), \"ate\" (ATE ). Default FALSE. ci_alpha Significance level confidence intervals. Default 0.05. ci_n_points Number points compute confidence intervals. Default 20. ci_ribbon_alpha Alpha transparency confidence interval ribbons. Default 0.3. ci_ribbon_color Color confidence interval ribbons. NULL (default), uses curve color. horizontal_line Logical indicating whether draw horizontal lines Qini curves plateau path complete. Default TRUE. Consistent maq::plot() behavior. grid_step Integer specifying step size subsampling curve data. NULL (default), uses max(floor(nrow(qini_data) / 1000), 1). Set 1 plot points. return_data Logical indicating whether return plot data data.frame instead ggplot object. Default FALSE. TRUE, returns data columns: proportion, gain, lower, upper, curve. ylim Numeric vector length 2 specifying y-axis limits c(min, max). Default NULL (automatic scaling). fixed_ylim Logical; TRUE ylim NULL, uses actual data range padding consistent y-axis scaling across plots. Default FALSE. baseline_method Method generating baseline: \"auto\" (default), \"maq_no_covariates\", \"simple\", \"maq_only\", \"none\". See details margot_generate_qini_data(). cate_color Color CATE (targeted treatment) curve. Default \"#d8a739\" (gold). ate_color Color ATE (-priority/uniform assignment) curve. Default \"#4d4d4d\" (dark gray). scale Character string specifying scale gains: \"average\" (default), \"cumulative\", \"population\". \"average\" shows expected policy effect per unit (maq default), \"cumulative\" shows traditional cumulative gains, \"population\" shows total population impact. treatment_cost Numeric scalar; treatment cost used QINI calculations. Default NULL, attempts extract cost model metadata. found, assumes cost = 1. cost differs stored cost, QINI curves automatically regenerated. cost differs 1, shown plot subtitle. seed Integer; seed reproducible QINI generation treatment_cost differs stored cost. Default 12345. x_axis Type x-axis QINI curves: \"proportion\" (default) \"budget\". \"proportion\" shows proportion population treated (0 1). \"budget\" shows budget per unit (0 treatment_cost), matching maq's visualization.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"return_data FALSE (default), returns ggplot object. return_data TRUE,   returns data.frame plot data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"function provides maq::plot() compatible features including: Horizontal line extension complete paths Grid step subsampling large datasets Data frame return option matching maq::plot() output format Standard error extraction maq objects Key differences maq::plot(): Uses ggplot2 instead base R graphics descriptive axis labels Additional features like theme selection spend indicators Confidence intervals computed via maq::average_gain() accuracy Binary treatment colors: Customizable via cate_color ate_color parameters Important Note Scale: y-axis shows expected policy effects per unit, cumulative gains. follows maq package implementation gains represent Q(B) = E[⟨πB(Xi), τ(Xi)⟩], expected (average) gain treating units according policy πB. differs traditional uplift modeling QINI curves show cumulative gains. 100% spend, CATE ATE curves converge similar values average effect similar regardless treatment ordering everyone treated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage - uses stored treatment cost margot_plot_qini(cf_results, \"model_anxiety\")  # Auto-regenerates with different treatment cost plot1 <- margot_plot_qini(cf_results, \"model_anxiety\", treatment_cost = 1) plot2 <- margot_plot_qini(cf_results, \"model_anxiety\", treatment_cost = 5)  # Compare costs with fixed y-axis scaling plot3 <- margot_plot_qini(cf_results, \"model_anxiety\", treatment_cost = 5, fixed_ylim = TRUE)  # Show CI only for CATE curve plot4 <- margot_plot_qini(cf_results, \"model_anxiety\", show_ci = \"cate\")  # Show CI for both curves plot5 <- margot_plot_qini(cf_results, \"model_anxiety\", show_ci = TRUE)  # Custom seed for reproducibility when regenerating plot6 <- margot_plot_qini(cf_results, \"model_anxiety\", treatment_cost = 2, seed = 42)  # Using custom label mapping label_mapping <- list(   \"anxiety\" = \"Anxiety Symptoms\",   \"depression\" = \"Depression Symptoms\" ) margot_plot_qini(cf_results, \"model_anxiety\", label_mapping = label_mapping) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_annotated_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Annotated QINI Plot with Gain Information — margot_plot_qini_annotated_dev","title":"Create Annotated QINI Plot with Gain Information — margot_plot_qini_annotated_dev","text":"Enhanced version adds gain annotations specified spend levels","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_annotated_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Annotated QINI Plot with Gain Information — margot_plot_qini_annotated_dev","text":"","code":"margot_plot_qini_annotated_dev(   qini_results,   outcome,   annotate_spends = c(0.2),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_annotated_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Annotated QINI Plot with Gain Information — margot_plot_qini_annotated_dev","text":"qini_results Results margot_qini_dev() outcome Single outcome plot annotations annotate_spends Numeric vector spend levels annotate ... Additional arguments passed margot_plot_qini_dev()","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_annotated_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Annotated QINI Plot with Gain Information — margot_plot_qini_annotated_dev","text":"ggplot2 object annotations","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","title":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","text":"function processes subset models (models default), creates QINI (Qini coefficient) plots model using margot package.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","text":"","code":"margot_plot_qini_batch(   mc_result,   model_names = NULL,   label_mapping = NULL,   spend_levels = c(0.1, 0.4),   show_spend_lines = TRUE,   spend_line_color = \"red\",   spend_line_alpha = 0.5,   theme = \"classic\",   show_ci = FALSE,   ci_alpha = 0.05,   ci_n_points = 20,   ci_ribbon_alpha = 0.3,   ci_ribbon_color = NULL,   horizontal_line = TRUE,   grid_step = NULL,   ylim = NULL,   baseline_method = \"auto\",   cate_color = \"#d8a739\",   ate_color = \"#4d4d4d\",   scale = \"average\",   treatment_cost = NULL,   seed = 12345,   fixed_ylim = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","text":"mc_result list containing results margot_causal_forest(). model_names Optional character vector model names process. Can specified without \"model_\" prefix. Default NULL (models). label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL. spend_levels Numeric vector spend levels show vertical lines. Default 0.1. show_spend_lines Logical indicating whether show vertical lines spend levels. Default TRUE. spend_line_color Color spend level lines. Default \"red\". spend_line_alpha Alpha transparency spend lines. Default 0.5. theme Character string specifying ggplot2 theme. Default \"classic\". show_ci Logical character indicating confidence intervals show. Options: FALSE (none), TRUE \"\" (curves), \"cate\" (CATE ), \"ate\" (ATE ). Default FALSE. ci_alpha Significance level confidence intervals. Default 0.05. ci_n_points Number points compute confidence intervals. Default 20. ci_ribbon_alpha Alpha transparency confidence interval ribbons. Default 0.3. ci_ribbon_color Color confidence interval ribbons. NULL (default), uses curve color. horizontal_line Logical indicating whether draw horizontal lines Qini curves plateau path complete. Default TRUE. grid_step Integer specifying step size subsampling curve data. NULL (default), uses max(floor(nrow(qini_data) / 1000), 1). Set 1 plot points. ylim Numeric vector length 2 specifying y-axis limits c(min, max). Default NULL (automatic scaling). baseline_method Method generating baseline: \"auto\" (default), \"maq_no_covariates\", \"simple\", \"maq_only\", \"none\". See details margot_generate_qini_data(). cate_color Color CATE (targeted treatment) curve. Default \"#d8a739\" (gold). ate_color Color ATE (-priority/uniform assignment) curve. Default \"#4d4d4d\" (dark gray). scale Character string specifying scale gains: \"average\" (default), \"cumulative\", \"population\". \"average\" shows expected policy effect per unit (maq default), \"cumulative\" shows traditional cumulative gains, \"population\" shows total population impact. treatment_cost Numeric scalar; treatment cost used QINI calculations. Default NULL, attempts extract cost model metadata. found, assumes cost = 1. cost differs stored cost, QINI curves automatically regenerated. cost differs 1, shown plot subtitle. seed Integer; seed reproducible QINI generation treatment_cost differs stored cost. Default 12345. fixed_ylim Logical; TRUE ylim NULL, calculates y-axis limits accommodate cost=1 scenario consistent scaling across different cost comparisons. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","text":"list containing generated ggplot objects processed model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process and Plot QINI Curves for Multiple Models — margot_plot_qini_batch","text":"","code":"if (FALSE) { # \\dontrun{ # Process all models qini_plots <- margot_plot_qini_batch(mc_result)  # Process specific models with confidence intervals qini_plots <- margot_plot_qini_batch(   mc_result,   model_names = c(\"t2_belong_z\", \"t2_meaning_z\"),   show_ci = TRUE, # shows CI for both curves   ci_n_points = 50 )  # Show CI only for CATE curves qini_plots <- margot_plot_qini_batch(   mc_result,   model_names = c(\"anxiety\", \"depression\"),   show_ci = \"cate\" )  # Custom label mapping label_mapping <- list(   \"t2_belong_z\" = \"Belonging\",   \"t2_meaning_z\" = \"Meaning in Life\" ) qini_plots <- margot_plot_qini_batch(   mc_result,   label_mapping = label_mapping ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"Creates visualizations showing QINI curves change treatment cost multiple models simultaneously. function combines functionality margot_qini_cost_sensitivity() margot_plot_qini_batch() create comprehensive cost sensitivity visualizations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"","code":"margot_plot_qini_batch_cost_sensitivity(   models,   costs = c(0.2, 0.5, 1, 2, 5),   model_names = NULL,   plot_type = c(\"grid\", \"list\", \"combined\"),   spend_levels = 0.1,   baseline_method = \"maq_no_covariates\",   label_mapping = NULL,   ncol = NULL,   heights = NULL,   widths = NULL,   verbose = TRUE,   x_axis = \"budget\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"models List returned margot_causal_forest(), containing results optionally full_models. costs Numeric vector treatment costs evaluate. Default c(0.2, 0.5, 1, 2, 5) representing range cheap expensive treatments. model_names Optional character vector specifying models process. Default NULL (models). plot_type Character; arrange plots: - \"grid\": Arrange grid models rows costs columns - \"list\": Return nested list individual plots - \"combined\": Create single combined plot facets Default \"grid\". spend_levels Numeric vector spend levels annotations. Default 0.1. baseline_method Method generating baseline. See margot_qini() details. Default \"maq_no_covariates\". label_mapping Named character vector converting variable names readable labels. ncol plot_type = \"grid\", number columns grid. Default NULL uses number costs. heights plot_type = \"grid\", relative heights rows. Default NULL gives equal heights. widths plot_type = \"grid\", relative widths columns. Default NULL gives equal widths. verbose Logical; print progress messages (default TRUE). x_axis Type x-axis QINI curves: \"proportion\" \"budget\" (default). \"budget\" shows budget per unit (matching maq visualization) better illustrates effect different treatment costs. ... Additional arguments passed margot_plot_qini().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"Depending plot_type: - \"grid\": combined plot object (requires patchwork package) - \"list\": nested list first level model names, second level costs - \"combined\": single ggplot object facets","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"function efficiently generates QINI curves multiple models different treatment costs, enabling comprehensive cost sensitivity analysis. plots help identify: - models sensitive treatment cost - Cost thresholds targeting becomes ineffective - Optimal cost-benefit trade-offs different outcomes","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_batch_cost_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Plot QINI Curves Across Treatment Costs for Multiple Models — margot_plot_qini_batch_cost_sensitivity","text":"","code":"if (FALSE) { # \\dontrun{ # Create grid of plots for all models grid_plots <- margot_plot_qini_batch_cost_sensitivity(   cf_results,   costs = c(0.5, 1, 2),   plot_type = \"grid\" ) print(grid_plots)  # Get individual plots as a list plot_list <- margot_plot_qini_batch_cost_sensitivity(   cf_results,   costs = c(0.5, 1, 2),   model_names = c(\"anxiety\", \"depression\"),   plot_type = \"list\" ) # Access specific plot: plot_list$model_anxiety$cost_0.5  # Create combined faceted plot combined_plot <- margot_plot_qini_batch_cost_sensitivity(   cf_results,   costs = c(0.5, 1, 2),   model_names = c(\"anxiety\", \"depression\"),   plot_type = \"combined\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_compare_methods_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare QINI Curves Across Different Methods — margot_plot_qini_compare_methods_dev","title":"Compare QINI Curves Across Different Methods — margot_plot_qini_compare_methods_dev","text":"Convenience function comparing QINI curves different baseline methods","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_compare_methods_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare QINI Curves Across Different Methods — margot_plot_qini_compare_methods_dev","text":"","code":"margot_plot_qini_compare_methods_dev(   cf_results,   outcome,   baseline_methods = c(\"maq_no_covariates\", \"simple\", \"none\"),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_compare_methods_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare QINI Curves Across Different Methods — margot_plot_qini_compare_methods_dev","text":"cf_results Results margot_causal_forest_dev() outcome Single outcome analyze baseline_methods Vector baseline methods compare ... Additional arguments passed margot_plot_qini_dev()","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_compare_methods_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare QINI Curves Across Different Methods — margot_plot_qini_compare_methods_dev","text":"ggplot2 object comparing methods","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"Visualizes QINI curves change different treatment costs, showing impact budget constraints optimal treatment allocation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"","code":"margot_plot_qini_cost_sensitivity(   cost_sensitivity_result,   model_name,   plot_type = c(\"overlay\", \"facet\"),   show_baseline = TRUE,   colors = NULL,   title = NULL,   subtitle = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"cost_sensitivity_result Output margot_qini_cost_sensitivity() model_name Character string specifying model plot plot_type Character; either \"overlay\" (costs one plot) \"facet\" (separate panel cost). Default \"overlay\". show_baseline Logical; whether show baseline curves. Default TRUE. colors Optional vector colors different cost scenarios. NULL, uses gradient blue (low cost) red (high cost). title Optional plot title. NULL, auto-generated based model name. subtitle Optional plot subtitle. NULL, describes cost scenarios. ... Additional arguments passed ggplot2 functions","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"function creates visualizations showing QINI curves change treatment cost. Lower costs result steeper curves (people can treated cost-effectively), higher costs result shallower curves (highest-effect individuals justify treatment). \"overlay\" plot type shows cost scenarios one plot different colors, making easy compare curve shapes. \"facet\" plot type creates separate panels cost, useful curves overlap significantly.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot QINI Curves Across Treatment Cost Scenarios — margot_plot_qini_cost_sensitivity","text":"","code":"if (FALSE) { # \\dontrun{ # Run cost sensitivity analysis cost_sens <- margot_qini_cost_sensitivity(   causal_forest_results,   costs = c(0.2, 0.5, 1, 2, 5) )  # Overlay plot (default) margot_plot_qini_cost_sensitivity(cost_sens, \"model_anxiety\")  # Faceted plot margot_plot_qini_cost_sensitivity(   cost_sens,   \"model_anxiety\",   plot_type = \"facet\" )  # Custom styling margot_plot_qini_cost_sensitivity(   cost_sens,   \"model_anxiety\",   colors = c(\"darkgreen\", \"gold\", \"orange\", \"red\", \"darkred\"),   title = \"Treatment Cost Impact on Anxiety Intervention\",   subtitle = \"Lower costs enable treating more patients\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Plot of Optimal Treatment Fractions Across Costs — margot_plot_qini_cost_summary","title":"Create Summary Plot of Optimal Treatment Fractions Across Costs — margot_plot_qini_cost_summary","text":"Creates line plot showing optimal treatment fraction changes treatment cost one models.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Plot of Optimal Treatment Fractions Across Costs — margot_plot_qini_cost_summary","text":"","code":"margot_plot_qini_cost_summary(   cost_sensitivity_result,   model_names = NULL,   spend_level = 0.1,   metric = \"comparison_gain\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Plot of Optimal Treatment Fractions Across Costs — margot_plot_qini_cost_summary","text":"cost_sensitivity_result Output margot_qini_cost_sensitivity() model_names Optional character vector models include. Default NULL includes models. spend_level Numeric; spend level plot. Default 0.1. metric Character; metric plot: \"comparison_gain\" (default), \"difference_gain\", \"reference_gain\". ... Additional arguments passed ggplot2","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_cost_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Summary Plot of Optimal Treatment Fractions Across Costs — margot_plot_qini_cost_summary","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"Creates QINI curve plots margot_qini_dev() results. Can handle single multiple outcomes/models one plot without needing separate batch function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"","code":"margot_plot_qini_dev(   qini_results,   outcomes = NULL,   models = NULL,   scale = \"average\",   show_confidence = TRUE,   show_baseline = TRUE,   spend_markers = NULL,   colors = NULL,   theme_fn = ggplot2::theme_minimal,   title = NULL,   subtitle = NULL,   facet_outcomes = TRUE,   facet_scales = \"fixed\",   label_mapping = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"qini_results Results margot_qini_dev() named list results outcomes Character vector outcomes plot. NULL = . models Character vector model names qini_results list. NULL = . scale Character. Scale gains: \"average\" (default), \"cumulative\", \"population\" show_confidence Logical. Show confidence intervals (default: TRUE) show_baseline Logical. Show baseline curve (default: TRUE) spend_markers Numeric vector. Budget levels mark vertical lines colors Character vector colors curves. Auto-generated NULL. theme_fn ggplot2 theme function (default: theme_minimal()) title Character. Plot title. Auto-generated NULL. subtitle Character. Plot subtitle. Auto-generated NULL. facet_outcomes Logical. Create facets outcome multiple (default: TRUE) facet_scales Character. Facet scales: \"fixed\", \"free\", \"free_x\", \"free_y\" label_mapping Named list variable label translation verbose Logical. Print progress (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"ggplot2 object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"function replaces margot_plot_qini() margot_plot_qini_batch() intelligently handling single multiple model inputs. Scale options: - \"average\": Average gain per unit treated (maq default) - \"cumulative\": Cumulative gain (gain * proportion) - \"population\": Total population gain (gain * proportion * n) multiple models provided (via named list), function can either: - Create separate facets outcome (facet_outcomes = TRUE) - Overlay curves single plot (facet_outcomes = FALSE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Development Version of QINI Curve Plotting — margot_plot_qini_dev","text":"","code":"if (FALSE) { # \\dontrun{ # Single model plot test_data <- margot_simulate_test_data() cf_results <- margot_causal_forest_dev(test_data$data, c(\"Y1\", \"Y2\"), \"A\") qini_results <- margot_qini_dev(cf_results)  plot1 <- margot_plot_qini_dev(qini_results)  # Multiple models comparison cf_results2 <- margot_causal_forest_dev(test_data$data, c(\"Y3\", \"Y4\"), \"A\") qini_results2 <- margot_qini_dev(cf_results2)  plot2 <- margot_plot_qini_dev(   list(model1 = qini_results, model2 = qini_results2),   scale = \"cumulative\",   spend_markers = c(0.2, 0.5) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QINI Curves from Pre-computed Data — margot_plot_qini_direct","title":"Plot QINI Curves from Pre-computed Data — margot_plot_qini_direct","text":"Internal function create QINI plots directly pre-computed qini_data without requiring full causal forest results structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QINI Curves from Pre-computed Data — margot_plot_qini_direct","text":"","code":"margot_plot_qini_direct(   qini_data,   qini_objects = NULL,   outcome_var = \"Outcome\",   label_mapping = NULL,   spend_levels = 0.1,   show_spend_lines = TRUE,   spend_line_color = \"red\",   spend_line_alpha = 0.5,   theme = \"classic\",   show_ci = FALSE,   ci_alpha = 0.05,   ci_n_points = 20,   ci_ribbon_alpha = 0.3,   ci_ribbon_color = NULL,   horizontal_line = TRUE,   ylim = NULL,   fixed_ylim = FALSE,   cate_color = \"#d8a739\",   ate_color = \"#4d4d4d\",   treatment_cost = 1,   x_axis = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QINI Curves from Pre-computed Data — margot_plot_qini_direct","text":"qini_data Data frame columns: proportion, gain, curve qini_objects List maq objects (optional, confidence intervals) outcome_var Character string outcome variable name label_mapping Optional named list label transformations spend_levels Numeric vector spend levels vertical lines show_spend_lines Logical; show vertical spend lines spend_line_color Color spend lines spend_line_alpha Alpha spend lines theme ggplot2 theme name show_ci Logical character confidence intervals ci_alpha Significance level CI ci_n_points Number points CI computation ci_ribbon_alpha Alpha CI ribbons ci_ribbon_color Color CI ribbons horizontal_line Logical; draw horizontal lines complete paths ylim Y-axis limits fixed_ylim Logical; use fixed y-axis scaling cate_color Color CATE curve ate_color Color ATE curve treatment_cost Treatment cost value x_axis Type x-axis: \"proportion\" \"budget\". specified, inferred data. ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QINI Curves from Pre-computed Data — margot_plot_qini_direct","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QINI Curves (Simplified Version) — margot_plot_qini_simple","title":"Plot QINI Curves (Simplified Version) — margot_plot_qini_simple","text":"Creates ggplot2 visualization QINI curves computed margot_qini(). Shows CATE-based targeting vs -priority baseline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QINI Curves (Simplified Version) — margot_plot_qini_simple","text":"","code":"margot_plot_qini_simple(   margot_result,   model_name,   show_ci = FALSE,   ci_alpha = 0.1,   colors = c(cate = \"#1f77b4\", baseline = \"#ff7f0e\"),   spend_levels = c(0.1, 0.4),   title = NULL,   subtitle = NULL,   theme = theme_minimal(),   return_data = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QINI Curves (Simplified Version) — margot_plot_qini_simple","text":"margot_result Output margot_qini() model_name Character string specifying model plot show_ci Logical character. Show confidence intervals: FALSE (none), TRUE/\"\" (curves), \"cate\" (CATE ), \"baseline\" (baseline ) ci_alpha Significance level confidence intervals (default 0.1) colors Named vector colors. Default: c(cate = \"#1f77b4\", baseline = \"#ff7f0e\") spend_levels Numeric vector spend levels mark vertical lines title Character string plot title. NULL, auto-generated subtitle Character string plot subtitle. NULL, auto-generated theme ggplot2 theme. Default theme_minimal() return_data Logical. Return data frame instead plot (default FALSE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QINI Curves (Simplified Version) — margot_plot_qini_simple","text":"ggplot2 object data frame (return_data = TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_rate","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default. Can either plot existing RATE object compute RATE -demand causal forest.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"margot_plot_rate(   x,   outcome_var,   title = NULL,   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   label_mapping = NULL,   target = \"AUTOC\",   tau_hat = NULL,   q = seq(0.1, 1, by = 0.1),   policy = \"treat_best\",   subset = NULL,   use_oob_predictions = TRUE,   seed = 12345,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"x Either object class \"rank_average_treatment_effect\" causal_forest object grf. causal_forest provided, RATE computed -demand. outcome_var character string specifying name outcome variable plot. used plot title proper label transformation. title Character string plot title. NULL (default), title generated using transformed outcome variable name. subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". remove_tx_prefix Logical value indicating whether remove \"tx_\" prefix labels. Default TRUE. remove_z_suffix Logical value indicating whether remove \"_z\" suffix labels. Default TRUE. use_title_case Logical value indicating whether convert labels title case. Default TRUE. remove_underscores Logical value indicating whether remove underscores labels. Default TRUE. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL. target Character; either \"AUTOC\" \"QINI\". used x causal_forest. Default \"AUTOC\". tau_hat Optional vector treatment effect estimates. used x causal_forest. NULL, computed using --bag predictions. q Numeric vector quantiles evaluate. Default seq(0.1, 1, = 0.1). used x causal_forest. policy Character; either \"treat_best\" \"withhold_best\". used x causal_forest. Default \"treat_best\". subset Optional indices subsetting evaluation data. used x causal_forest. use_oob_predictions Logical; TRUE tau_hat NULL, use --bag predictions. used x causal_forest. Default TRUE. seed Optional random seed reproducibility. used x causal_forest. ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming rate_eval is your rank_average_treatment_effect object p <- margot_plot_rate(rate_eval, \"model_t2_belong_z\") print(p)  # Using custom label mapping label_mapping <- list(   \"t2_env_not_env_efficacy_z\" = \"Deny Personal Environmental Efficacy\",   \"t2_env_not_climate_chg_real_z\" = \"Deny Climate Change Real\" ) p <- margot_plot_rate(rate_eval, \"model_t2_env_not_env_efficacy_z\",   label_mapping = label_mapping ) print(p) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process and Plot RATE Curves for Multiple Models — margot_plot_rate_batch","title":"Batch Process and Plot RATE Curves for Multiple Models — margot_plot_rate_batch","text":"function processes subset models (models default), creates RATE (Rank Average Treatment Effect) plots model using margot package. Can plot either AUTOC QINI RATE results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process and Plot RATE Curves for Multiple Models — margot_plot_rate_batch","text":"","code":"margot_plot_rate_batch(   models_binary,   model_names = NULL,   target = c(\"AUTOC\", \"QINI\"),   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   label_mapping = NULL,   compute_on_demand = TRUE,   q = seq(0.1, 1, by = 0.1),   policy = \"treat_best\",   use_oob_predictions = TRUE,   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process and Plot RATE Curves for Multiple Models — margot_plot_rate_batch","text":"models_binary list model results, element contains 'rate_result' /'rate_qini' component. model_names Optional character vector model names process. Default NULL (models). target Character; either \"AUTOC\" (default) \"QINI\". Determines RATE result plot. remove_tx_prefix Logical value indicating whether remove \"tx_\" prefix labels. Default TRUE. remove_z_suffix Logical value indicating whether remove \"_z\" suffix labels. Default TRUE. use_title_case Logical value indicating whether convert labels title case. Default TRUE. remove_underscores Logical value indicating whether remove underscores labels. Default TRUE. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL. compute_on_demand Logical; TRUE RATE results pre-computed, compute -demand causal forest (requires full_models saved). Default FALSE. q Numeric vector quantiles evaluate computing -demand. Default seq(0.1, 1, = 0.1). policy Character; either \"treat_best\" \"withhold_best\" computing -demand. Default \"treat_best\". use_oob_predictions Logical; TRUE, use --bag predictions computing -demand. Default TRUE. seed Optional random seed reproducibility computing -demand.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process and Plot RATE Curves for Multiple Models — margot_plot_rate_batch","text":"list containing generated ggplot objects processed model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Panel Study Response Timeline — margot_plot_response_timeline","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"function creates ggplot2 visualization panel study response timeline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"","code":"margot_plot_response_timeline(   df_timeline,   n_total_participants = NULL,   save = FALSE,   save_path = here::here(\"output\"),   width = 12,   height = 8,   base_filename = \"timeline_histogram\",   title = \"Panel Study Timeline\",   x_label = \"Date\",   y_label = \"Count of Responses\",   color_palette = NULL,   save_png = FALSE,   use_timestamp = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"df_timeline data frame containing processed timeline data, typically output `prepare_panel_data()`. n_total_participants total number unique participants. NULL, extracted df_timeline available. save Logical. TRUE, saves plot qs file. Default FALSE. save_path directory path save plot. Default \"output\" current working directory. width width saved plot inches. Default 12. height height saved plot inches. Default 8. base_filename base filename saving plot. Default \"timeline_histogram\". title main title plot. Default \"Panel Study Timeline\". x_label label x-axis. Default \"Date\". y_label label y-axis. Default \"Count Responses\". color_palette vector colors use waves. NULL, uses default color-blind friendly palette. save_png Logical. TRUE, saves plot PNG file. Default FALSE. use_timestamp Logical. TRUE, includes timestamp PNG filename. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"ggplot2 object representing panel study response timeline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"","code":"if (FALSE) { # \\dontrun{ # Load required libraries library(dplyr) library(lubridate) library(ggplot2) library(here)  # Assume we have a data frame 'nzavs_data' with columns: id, wave, tscore  # Step 1: Define NZAVS-specific wave breaks nzavs_wave_breaks <- list(   \"time 1\" = c(as.Date(\"2009-08-30\"), as.Date(\"2010-10-15\")),   \"time 2\" = c(as.Date(\"2010-10-15\"), as.Date(\"2011-10-15\")),   \"time 3\" = c(as.Date(\"2011-10-15\"), as.Date(\"2012-10-15\")),   \"time 4\" = c(as.Date(\"2012-10-15\"), as.Date(\"2013-10-15\")),   \"time 5\" = c(as.Date(\"2013-10-15\"), as.Date(\"2014-10-15\")),   \"time 6\" = c(as.Date(\"2014-10-15\"), as.Date(\"2015-10-15\")),   \"time 7\" = c(as.Date(\"2015-10-15\"), as.Date(\"2016-10-15\")),   \"time 8\" = c(as.Date(\"2016-10-15\"), as.Date(\"2017-10-15\")),   \"time 9\" = c(as.Date(\"2017-10-15\"), as.Date(\"2018-10-15\")),   \"time 10\" = c(as.Date(\"2018-10-15\"), as.Date(\"2019-10-15\")),   \"time 11\" = c(as.Date(\"2019-10-15\"), as.Date(\"2020-10-15\")),   \"time 12\" = c(as.Date(\"2020-10-15\"), as.Date(\"2021-10-15\")),   \"time 13\" = c(as.Date(\"2021-10-15\"), as.Date(\"2022-10-15\")),   \"time 14\" = c(as.Date(\"2022-10-15\"), as.Date(\"2023-10-15\")) )  # Step 2: Prepare the NZAVS data prepared_data <- prepare_panel_data(   dat = nzavs_data,   wave_col = \"wave\",   tscore_col = \"tscore\",   id_col = \"id\",   base_date = as.Date(\"2009-06-30\"),   wave_breaks = nzavs_wave_breaks )  # Step 3: Create the NZAVS timeline plot nzavs_timeline <- margot_plot_response_timeline(   df_timeline = prepared_data$df_timeline,   n_total_participants = prepared_data$n_total_participants,   save = TRUE,   save_png = TRUE,   use_timestamp = TRUE,   save_path = here::here(\"output\", \"plots\"),   title = \"New Zealand Attitudes and Values Study (panel)\",   x_label = paste(     \"NZAVS years\", min(prepared_data$df_timeline$day, na.rm = TRUE),     \"-\", max(prepared_data$df_timeline$day, na.rm = TRUE),     \"cohort: daily counts by condition\"   ),   y_label = \"Count of Responses\" )  # Display the plot print(nzavs_timeline) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot Plot as PNG — margot_plot_save_png","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"function takes output either `margot_plot()` `margot_plot_multi_arm()` saves plot PNG image using `ggsave()`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"","code":"margot_plot_save_png(   plot_output,   prefix = NULL,   base_filename = \"margot_plot\",   save_path = here::here(\"push_mods\"),   width = 16,   height = 8,   dpi = 500 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"plot_output list containing output `margot_plot()` `margot_plot_multi_arm()`. list `plot` element contains ggplot object. prefix Character string. prefix add filename. Default NULL. base_filename Character string. base name saved file. Default \"margot_plot\". save_path Character string. directory path image saved. Default ::(\"push_mods\"). width Numeric. width saved image inches. Default 16. height Numeric. height saved image inches. Default 8. dpi Numeric. resolution saved image dots per inch. Default 500.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"Invisibly returns path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"function uses `ggsave()` save Margot plot PNG image. save_path directory exist, created. final filename constructed : `prefix_base_filename.png`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have already run margot_plot() or margot_plot_multi_arm() plot_result <- margot_plot(your_data, your_options)  # Save the plot as PNG margot_plot_save_png(   plot_result,   prefix = \"study1\",   base_filename = \"treatment_effects\",   save_path = here::here(\"output\", \"plots\") ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"function creates histogram highlights specified range values visualise shifts data distributions. highlighted range can indicate areas interest, shifts distribution. visualisation useful understanding implications causal contrasts, modified treatment policies. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"","code":"margot_plot_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE,   print_avg_value = TRUE,   show_sd_line = TRUE,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   save_path = NULL,   width = 12,   height = 8,   include_timestamp = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"df dataframe containing variable interest. col_name name column df visualised histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data. range_highlight numeric vector length 2 specifying start end range highlight. NULL, range highlighted. shift character string indicating direction shift, either \"\" \"\". Default \"\". show_avg_line logical value indicating whether display vertical line representing average value. Default TRUE. print_avg_value logical value indicating whether print numerical value average plot. TRUE, value printed horizontally left mean line bottom graph. Default TRUE. show_sd_line logical value indicating whether display vertical dashed lines (grey) representing one standard deviation either side average. Default TRUE. title optional custom title plot. NULL, default title generated. subtitle optional custom subtitle plot. NULL, default subtitle generated. x_lab optional label x-axis. NULL, formatted column name used. y_lab label y-axis. Default \"Count\". save_path optional path save plot. NULL, plot saved. width width saved plot inches. Default 12. height height saved plot inches. Default 8. include_timestamp logical value indicating whether include timestamp saved filename. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"ggplot object representing histogram specified highlights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Slope Plot for Multiple Variables — margot_plot_slope","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"function creates ggplot2 visualization show trends multiple variables time. possible add vertical lines significant events. function now also counts reports number unique participants observations. includes options faceting avoid overplotting dealing multiple variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"","code":"margot_plot_slope(   data,   y_vars,   event_dates = NULL,   event_names = NULL,   start_date = NULL,   end_date = NULL,   title = NULL,   y_label = NULL,   x_label = NULL,   data_fraction = 1,   seed = 12345,   plot_points = FALSE,   point_alpha = 0.03,   jitter_width = 1,   base_date = as.Date(\"2009-06-30\"),   save_path = NULL,   width = 12,   height = 8,   event_line_color = \"darkred\",   event_line_alpha = 0.7,   event_line_type = \"dashed\",   event_line_width = 0.5,   event_label_size = 3,   event_label_color = \"darkred\",   legend_position = \"bottom\",   use_title_case = TRUE,   remove_underscores = TRUE,   y_limits = NULL,   color_palette = NULL,   use_facets = TRUE,   facet_scales = \"free_y\",   facet_ncol = NULL,   facet_nrow = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"data data frame containing variables plotted. y_vars list variable names single variable name plotted y-axis. event_dates optional vector dates representing events. event_names optional vector names events. NULL, events labeled \"Event 1\", \"Event 2\", etc. start_date optional start date x-axis. end_date optional end date x-axis. title optional title plot. NULL, automatic title generated including count participants observations. y_label optional label y-axis. x_label optional label x-axis. data_fraction fraction data use. Default 1 (use data). seed optional seed reproducibility sampling data. plot_points Logical, whether plot individual data points. Default FALSE. point_alpha alpha (transparency) data points. Default 0.03. jitter_width width jitter data points. Default 1. base_date base date timeline. Default \"2009-06-30\". save_path optional path save plot. width width saved plot inches. Default 12. height height saved plot inches. Default 8. event_line_color color event lines. Default \"darkred\". event_line_alpha alpha event lines. Default 0.7. event_line_type type event lines. Default \"dashed\". event_line_width width event lines. Default 0.5. event_label_size size event labels. Default 3. event_label_color color event labels. Default \"darkred\". legend_position position legend. Default \"bottom\". use_title_case Logical, whether use title case labels. Default TRUE. remove_underscores Logical, whether remove underscores labels. Default TRUE. y_limits optional vector two numbers specifying y-axis limits. color_palette optional custom color palette. NULL, default palette used. use_facets Logical, whether use faceting multiple variables. Default TRUE. facet_scales scales parameter facet_wrap. Default \"free_y\". facet_ncol number columns facet_wrap. Default NULL. facet_nrow number rows facet_wrap. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"ggplot2 object representing slope plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(ggplot2) library(tidyr) library(here)  # Basic usage with a single variable single_var_plot <- margot_plot_slope(   data = dat,   y_vars = \"warm_muslims\",   start_date = \"2012-06-06\",   y_label = \"Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\" )  # Multiple variables with events and custom y-axis limits multi_var_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"warm_muslims\", \"warm_immigrants\"),   event_dates = c(\"2019-03-15\", \"2021-01-01\"),   event_names = c(\"Christchurch Attack\", \"COVID-19 Lockdown\"),   start_date = \"2012-06-06\",   y_label = \"Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\",   y_limits = c(1, 7),   use_facets = TRUE )  # Plot with points, using a subset of data and custom facet layout point_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"warm_asians\", \"warm_pacific\", \"warm_immigrants\"),   plot_points = TRUE,   point_alpha = 0.05,   data_fraction = 0.1,   seed = 123,   y_label = \"Warmth\",   use_facets = TRUE,   facet_ncol = 2 )  # Save the plot saved_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"political_orientation\", \"social_dominance_orientation\"),   save_path = here::here(\"outputs\", \"plots\"),   width = 10,   height = 6,   use_facets = TRUE )  # Custom styling and color palette custom_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"sat_government\", \"sat_nz_econ_conditions\"),   event_dates = \"2017-10-26\",   event_names = \"2017 Election\",   y_label = \"Satisfaction Level (0-10)\",   y_limits = c(0, 10),   event_line_color = \"blue\",   event_label_color = \"blue\",   legend_position = \"top\",   color_palette = c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\"),   use_facets = TRUE ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"function creates ggplot2 visualization using ggeffects calculate predicted responses model. allows flexible specification model plotting options. function automatically handles NA infinite values, reports number unique participants observations used analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"","code":"margot_plot_slope_covariate(   data,   formula,   terms,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = NULL,   y_limits = c(1, 7),   color_label = NULL,   include_title = TRUE,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 12,   height = 8,   seed = 12345,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"data data frame containing variables model. formula formula specifying model fit. terms character vector specifying terms used predict_response. id_col Name column containing unique identifiers (default \"id\"). title optional title plot. NULL, automatic title generated. y_label optional label y-axis. NULL, response variable name used. x_label optional label x-axis. NULL, first term used. y_limits optional vector two numbers specifying y-axis limits. Default c(1, 7). color_label optional label color legend. NULL, second term used. include_title Logical, whether include plot title (default TRUE). include_timestamp Logical, whether include timestamp plot title filename (default FALSE). save_path optional path save plot. NULL, plot saved. prefix Optional prefix saved file name (default NULL). width width saved plot inches. Default 12. height height saved plot inches. Default 8. seed optional seed reproducibility. ... Additional arguments passed ggeffects::predict_response.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"ggplot2 object representing plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage remains the same } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"function creates multiple ggplot2 visualizations using ggeffects calculate predicted responses models multiple outcome variables combines single plot using patchwork package. allows flexible specification models plotting options, including layout annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"","code":"margot_plot_slope_covariate_batch(   data,   outcome_vars,   exposure_formula,   terms,   label_mapping = NULL,   x_label = NULL,   color_label = NULL,   save_path = NULL,   file_prefix = \"plot_slope_covariate_batch\",   ncol = NULL,   nrow = NULL,   guides = \"collect\",   patchwork_params = list(),   plot_annotation_params = list(),   caption_size = 10,   include_individual_titles = FALSE,   width = 10,   height = 8,   dpi = 400,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"data data frame containing variables models. outcome_vars character vector specifying outcome variables modeled. exposure_formula formula specifying exposure variables (right-hand side model). terms character vector specifying terms used predict_response. label_mapping optional named list mapping outcome variables custom y-axis labels. x_label optional label x-axis. NULL, first term used. color_label optional label color legend. NULL, second term used. save_path optional path save combined plot. NULL, plot saved. file_prefix Optional prefix saved file name (default \"plot_slope_covariate_batch\"). ncol Number columns combined plot layout. nrow Number rows combined plot layout. guides combine legends. Default \"collect\". patchwork_params list additional parameters passed patchwork::plot_layout(). plot_annotation_params list parameters passed patchwork::plot_annotation(). include_individual_titles Logical, whether include titles individual plots (default FALSE). width Width combined plot inches. Default 12. height Height combined plot inches. Default 8. dpi Resolution saved plot. Default 400. ... Additional arguments passed margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"ggplot2 object representing combined plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcome variables and label mapping outcome_vars <- c(\"var1\", \"var2\", \"var3\") label_mapping <- list(\"var1\" = \"Variable 1\", \"var2\" = \"Variable 2\", \"var3\" = \"Variable 3\")  # Create combined plot combined_plot <- margot_plot_slope_covariate_batch(   data = dat,   outcome_vars = outcome_vars,   exposure_formula = \"~ wave:covariate\",   terms = c(\"wave\", \"covariate\"),   label_mapping = label_mapping,   x_label = \"Time\",   color_label = \"Covariate\",   ncol = 2,   plot_annotation_params = list(     title = \"Combined Slope Plots\",     subtitle = \"Subtitle for the combined plot\"   ),   save_path = \"path/to/save/directory\",   width = 14,   height = 10 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"function creates multiple ggplot2 visualizations using ggeffects calculate predicted responses models multiple outcome variables combines single plot using patchwork package. allows flexible specification models plotting options, including layout annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"","code":"margot_plot_slope_covariate_combo(   data,   outcome_vars,   exposure_formula,   terms,   label_mapping = NULL,   x_label = NULL,   color_label = NULL,   save_path = NULL,   file_prefix = \"plot_slope_covariate_batch\",   ncol = NULL,   nrow = NULL,   guides = \"collect\",   patchwork_params = list(),   plot_annotation_params = list(),   caption_size = 10,   include_individual_titles = FALSE,   width = 12,   height = 8,   dpi = 400,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"data data frame containing variables models. outcome_vars character vector specifying outcome variables modeled. exposure_formula formula specifying exposure variables (right-hand side model). terms character vector specifying terms used predict_response. label_mapping optional named list mapping outcome variables custom y-axis labels. x_label optional label x-axis. NULL, first term used. color_label optional label color legend. NULL, second term used. save_path optional path save combined plot. NULL, plot saved. file_prefix Optional prefix saved file name (default \"plot_slope_covariate_batch\"). ncol Number columns combined plot layout. nrow Number rows combined plot layout. guides combine legends. Default \"collect\". patchwork_params list additional parameters passed patchwork::plot_layout(). plot_annotation_params list parameters passed patchwork::plot_annotation(). include_individual_titles Logical, whether include titles individual plots (default FALSE). width Width combined plot inches. Default 12. height Height combined plot inches. Default 8. dpi Resolution saved plot. Default 400. ... Additional arguments passed margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"ggplot2 object representing combined plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcome variables and label mapping outcome_vars <- c(\"var1\", \"var2\", \"var3\") label_mapping <- list(\"var1\" = \"Variable 1\", \"var2\" = \"Variable 2\", \"var3\" = \"Variable 3\")  # Create combined plot combined_plot <- margot_plot_slope_covariate_combo(   data = dat,   outcome_vars = outcome_vars,   exposure_formula = \"~ wave:covariate\",   terms = c(\"wave\", \"covariate\"),   label_mapping = label_mapping,   x_label = \"Time\",   color_label = \"Covariate\",   ncol = 2,   plot_annotation_params = list(     title = \"Combined Slope Plots\",     subtitle = \"Subtitle for the combined plot\"   ),   save_path = \"path/to/save/directory\",   width = 14,   height = 10 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","title":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","text":"creates faceted grid histograms showing distribution tau hat (individual treatment effects) multiple models. range standardised across facets facilitate comparison. automatically detects handles models_binary structures extracting $results component.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","text":"","code":"margot_plot_tau(   models_list,   label_mapping = NULL,   binwidth = 0.01,   base_size = 14,   ncol = NULL,   title = NULL,   subtitle = NULL,   x_label = expression(tau[i]),   show_zero_line = TRUE,   fill_colour = \"white\",   border_colour = NA,   colour_by_sign = TRUE,   colour_below = \"#4f88c6\",   colour_above = \"#d8a739\",   zero_line_colour = \"red\",   zero_line_alpha = 0.5,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   free_scales = FALSE,   theme = \"void\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","text":"models_list list models results object containing models tau_hat values. can nested list structure like `models_binary$results`, parent `models_binary` object (case `$results` extracted automatically). label_mapping optional named list transforming model names display labels. null, uses automatic label transformation. binwidth numeric; width histogram bins. default 0.01. base_size numeric; base font size plot. default 14. ncol integer; number columns facet grid. null, automatically determined based number models. title character; main title plot. default null. subtitle character; subtitle plot. default null. x_label character; label x-axis. default uses expression tau. show_zero_line logical; whether show vertical line zero. default true. fill_colour character; fill colour histogram bars colour_by_sign false. default \"white\". border_colour character; border colour histogram bars. default NA (border). colour_by_sign logical; whether colour bars differently /zero. default true. colour_below character; colour bars zero colour_by_sign true. default \"#4f88c6\". colour_above character; colour bars zero colour_by_sign true. default \"#d8a739\". zero_line_colour character; colour zero line. default \"red\". zero_line_alpha numeric; transparency zero line. default 0.5. remove_tx_prefix logical; remove time prefixes model names. default true. remove_z_suffix logical; remove _z suffix model names. default true. use_title_case logical; convert labels title case. default true. remove_underscores logical; replace underscores spaces. default true. free_scales logical; whether allow free scales facets. default false maintain fixed range across facets. theme character; ggplot2 theme use. options include \"classic\", \"minimal\", \"bw\", \"light\", \"dark\", \"void\", \"grey\", \"linedraw\". default \"void\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","text":"ggplot object faceted tau hat distributions","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Faceted Tau Hat Distribution Plots — margot_plot_tau","text":"","code":"if (FALSE) { # \\dontrun{ # with label mapping - pass models_binary directly label_map <- list(   \"model_t2_belong_z\" = \"Social Belonging\",   \"model_t2_trust_z\" = \"Trust in Others\",   \"model_t2_log_charity_donate_z\" = \"Charitable Donations\",   \"model_t2_log_hours_charity_z\" = \"Volunteer Hours\" )  # method 1: pass the parent object (auto-extracts $results) tau_plot <- margot_plot_tau(   models_binary,   label_mapping = label_map,   title = \"Individual Treatment Effects\" )  # method 2: pass $results directly (also works) tau_plot <- margot_plot_tau(   models_binary$results,   label_mapping = label_map,   title = \"Individual Treatment Effects\" )  # with different theme tau_plot <- margot_plot_tau(   models_binary,   label_mapping = label_map,   title = \"Individual Treatment Effects\",   theme = \"minimal\" )  # without conditional colouring tau_plot <- margot_plot_tau(   models_binary,   label_mapping = label_map,   title = \"Individual Treatment Effects\",   colour_by_sign = FALSE,   fill_colour = \"lightblue\" )  # with custom colours for above/below zero tau_plot <- margot_plot_tau(   models_binary,   label_mapping = label_map,   title = \"Individual Treatment Effects\",   colour_below = \"darkred\",   colour_above = \"darkgreen\" )  # add borders if desired tau_plot <- margot_plot_tau(   models_binary,   label_mapping = label_map,   border_colour = \"grey50\" )  # without label mapping (auto transform) tau_plot <- margot_plot_tau(models_binary) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"Process list multi-arm causal forest results: generate policy-tree decision-tree plots, Qini curves, difference-gain summaries. Users can toggle outputs include via `output_objects` parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"","code":"margot_policy(   result_outcomes,   policy_tree_args = list(),   decision_tree_args = list(),   max_depth = 2L,   depths_by_model = NULL,   spend_levels = c(0.1, 0.4),   label_mapping = NULL,   original_df = NULL,   model_names = NULL,   output_objects = c(\"policy_tree\", \"decision_tree\", \"combined_plot\", \"qini_plot\",     \"diff_gain_summaries\"),   qini_args = list(),   baseline_method = \"maq_no_covariates\",   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"result_outcomes List returned margot_multi_arm_causal_forest(). policy_tree_args List args margot_plot_policy_tree(). Default: list(). decision_tree_args List args margot_plot_decision_tree(). Default: list(). max_depth Integer, 1 2; fallback depth used per-model mapping supplied via `model_names` `depths_by_model` (default 2). depths_by_model Optional named vector/list mapping models (without `model_` prefix) depth 1 2; merged depth hints supplied `model_names`. spend_levels Numeric vector spend levels difference-gain summaries. Default: 0.1. label_mapping Named list mapping variable names display labels. Default: NULL. original_df Optional data.frame untransformed variables axis annotations. Default: NULL. model_names Character vector model names process. named, values 1 2 (depth assignments) take precedence `max_depth` `depths_by_model`; NULL = . output_objects Character vector specifying outputs include. Options: \"policy_tree\", \"decision_tree\", \"combined_plot\", \"qini_plot\", \"diff_gain_summaries\". Default: . qini_args List additional arguments pass margot_plot_qini(). Default: list(). baseline_method Method generating baseline: \"maq_no_covariates\" (default), \"auto\", \"simple\", \"maq_only\", \"none\". See details margot_generate_qini_data(). seed Integer. Random seed reproducibility QINI computations (default 12345).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"named list; element corresponds model contains requested outputs. returned object includes attribute `depth_map` giving depth used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_methods_statement.html","id":null,"dir":"Reference","previous_headings":"","what":"Policy Learning Methods Statement — margot_policy_methods_statement","title":"Policy Learning Methods Statement — margot_policy_methods_statement","text":"Generates boilerplate methods paragraph describing policy learning workflow used policy trees `margot` (DR scores, tree fitting, honest evaluation, policy value contrasts bootstrap CIs, treated-uplift, optional stability analysis).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_methods_statement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Policy Learning Methods Statement — margot_policy_methods_statement","text":"","code":"margot_policy_methods_statement(   object,   depth = 2L,   include_stability = TRUE,   include_policy_value = TRUE,   include_treated_only = FALSE,   citations = TRUE,   style = c(\"short\", \"long\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_methods_statement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Policy Learning Methods Statement — margot_policy_methods_statement","text":"object `margot_stability_policy_tree` (preferred) list `$results` created `margot_policy_tree()`. depth Integer; tree depth described text (default 2). include_stability Logical; add details stability analysis available (default TRUE). include_policy_value Logical; mention policy value contrasts CIs (default TRUE). include_treated_only Logical; mention treated-uplift coverage (default FALSE). citations Logical; include inline citations (author-year) (default TRUE). style Character; one \"short\" (1 paragraph) \"long\" (multi-line) (default \"short\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_methods_statement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Policy Learning Methods Statement — margot_policy_methods_statement","text":"character scalar methods paragraph(s).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect and adjust policy-value tests, focusing on desired depths — margot_policy_summary","title":"Collect and adjust policy-value tests, focusing on desired depths — margot_policy_summary","text":"Combines [margot_collect_policy_values()] [margot_adjust_policy_p()] single summary step. Keep outcomes learned policy improves treat-","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect and adjust policy-value tests, focusing on desired depths — margot_policy_summary","text":"","code":"margot_policy_summary(cf_out, depths = 2L, adjust = \"bonferroni\", alpha = 0.05)"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect and adjust policy-value tests, focusing on desired depths — margot_policy_summary","text":"cf_out margot result list (running batch helper). depths integer vector. Depths include. Default 2. adjust character. Multiplicity adjustment method. Default \"bonferroni\"; options include \"holm\" supported [stats::p.adjust()]. alpha numeric. Significance threshold adjustment. Default 0.05.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect and adjust policy-value tests, focusing on desired depths — margot_policy_summary","text":"Adjusted summary `tibble` filtered requested depths.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_compare_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Depth-1 vs Depth-2 Policy Summaries and Pick Best per Outcome — margot_policy_summary_compare_depths","title":"Compare Depth-1 vs Depth-2 Policy Summaries and Pick Best per Outcome — margot_policy_summary_compare_depths","text":"Runs [margot_policy_summary_report()] twice (depth 1 depth 2) consistent evaluation settings, produces side--side comparison policy values vs control-selects preferred depth per outcome. default, uses se_method = \"plugin\" turns `auto_recommend` obtain numeric PV CIs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_compare_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Depth-1 vs Depth-2 Policy Summaries and Pick Best per Outcome — margot_policy_summary_compare_depths","text":"","code":"margot_policy_summary_compare_depths(   object,   model_names = NULL,   original_df = NULL,   se_method = c(\"plugin\", \"bootstrap\"),   R = 499L,   seed = 42L,   label_mapping = NULL,   include_split_breakdown_1 = \"branch\",   include_split_breakdown_2 = \"leaf\",   auto_recommend = TRUE,   dominance_threshold = 0.6,   strict_branch = FALSE,   restricted_scope_1 = \"branch\",   restricted_scope_2 = \"leaf\",   split_compact = TRUE,   min_action_pct = 5,   split_drop_zero = TRUE,   split_top_only = FALSE,   verbose = TRUE,   min_gain_for_depth_switch = 0.005 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_compare_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Depth-1 vs Depth-2 Policy Summaries and Pick Best per Outcome — margot_policy_summary_compare_depths","text":"object `margot_stability_policy_tree` object consensus trees depth 1 /depth 2 (run `depth = \"\"` `margot_policy_tree_stability()`). model_names Optional character vector outcomes (without `model_`). original_df Optional original-scale data scale annotations (passed ). se_method Character; \"plugin\" (default) \"bootstrap\"; passed reporter. R Integer; bootstrap replicates `se_method = \"bootstrap\"` (default 499). seed Integer; RNG seed (default 42). label_mapping Optional named list mapping outcome names display labels. include_split_breakdown_1 Character; split view depth 1 (default \"branch\"). include_split_breakdown_2 Character; split view depth 2 (default \"leaf\"). auto_recommend Logical; turn automated restricted-policy recommendations (default TRUE). dominance_threshold Numeric; see [margot_policy_summary_report()]. strict_branch Logical; see [margot_policy_summary_report()]. restricted_scope_1 Character; restricted scope depth 1 (default \"branch\"). restricted_scope_2 Character; restricted scope depth 2 (default \"leaf\"). split_compact Logical; pass-[margot_policy_summary_report()] controlling whether compact split tables generated (default TRUE). min_action_pct Numeric; minimum treated/control share ( action-specific uplifts compact tables (default 5). Lowering can restore split rows otherwise suppressed. split_drop_zero Logical; drop rows zero contributions compact tables (default TRUE). split_top_only Logical; keep top-contributing split per model building compact tables (default FALSE). verbose Logical; print progress (default TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_compare_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Depth-1 vs Depth-2 Policy Summaries and Pick Best per Outcome — margot_policy_summary_compare_depths","text":"list :   - `depth_map`: named integer vector indicating preferred depth (1 2) per model.   - `depth_summary_df`: tidy per-model summary (preferred depth, policy values, gain vs alternative, decision).   - `depth_table_df` / `depth_table_md`: formatted comparison depth-1 vs depth-2 policy values.   - `depth_takeaways_text`: concise prose describing outcomes favour depth-1 vs depth-2.   - `summary_text`: markdown narrative combining depth takeaways key recommendations.   - `recommendations_df`: deployment recommendations policy value details depth.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","title":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","text":"Generates concise textual summary markdown table policy tree results (typically `margot_policy_tree_stability()`). report focuses : - Policy value vs control-vs treat-(95 - Average uplift among treated (95 - Optional stability highlights (consensus strength top split variable) - Optional split breakdown: per-branch selective uplifts contributions","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","text":"","code":"margot_policy_summary_report(   object,   model_names = NULL,   depth = 2L,   depths_by_model = NULL,   R = 499L,   seed = 42L,   label_mapping = NULL,   digits = 3,   include_stability = TRUE,   include_explanation = TRUE,   table_type = c(\"full\", \"treated_only\"),   original_df = NULL,   verbose = TRUE,   report_df = NULL,   order_by = c(\"pv_control_all\", \"uplift_treated\", \"none\"),   decreasing = TRUE,   filter_significant = FALSE,   alpha = 0.05,   group_by_sign = TRUE,   compact = FALSE,   render_markdown = TRUE,   include_split_breakdown = c(\"branch\", \"leaf\", \"none\"),   split_compact = TRUE,   contrib_scale = c(\"rel_abs\", \"rel_signed\", \"abs\"),   show_pvt = FALSE,   show_ci_compact = TRUE,   min_action_pct = 5,   split_drop_zero = TRUE,   split_top_only = FALSE,   se_method = c(\"bootstrap\", \"plugin\"),   source_models = NULL,   audit_with_policytree = FALSE,   auto_recommend = FALSE,   dominance_threshold = 0.6,   strict_branch = FALSE,   restricted_scope = c(\"leaf\", \"branch\"),   audience = c(\"policy\", \"research\"),   return_unit_masks = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","text":"object `margot_stability_policy_tree` object. model_names Optional character vector outcome names (without `model_` prefix). Default: models `object`. depth Integer; policy tree depth summarize (default 2). depths_by_model Optional named vector/list mapping models (without `model_` prefix) depth 1 2; overrides `depth` per-model basis mixed-depth reports can generated. R Integer ≥ 199; bootstrap replicates reporter CIs (default 499). seed Integer NULL; RNG seed (default 42). label_mapping Optional named list display labels. digits Integer; rounding numeric displays (default 3). include_stability Logical; include stability highlights per model (default TRUE). include_explanation Logical; include policy value explanation block (default TRUE). table_type Character; one \"full\" (default) \"treated_only\" condensed table. include_split_breakdown Character; one \"branch\" (default), \"leaf\", \"none\". Adds compact per-split summary per model action-conditional treated-uplift(s) contributions policy value vs control-vs treat-. Coherent construction: report uplift among treated treated subgroups uplift among controlled controlled subgroups. split_compact Logical; TRUE (default), builds compact split tables `split_breakdown` reduced columns. contrib_scale Character; one \"rel_abs\" (default, signed share |PV|), \"rel_signed\" (share signed PV), \"abs\" (raw contribution values). show_pvt Logical; include PV vs treat-contribution column compact tables (default FALSE). show_ci_compact Logical; include CIs compact tables (default TRUE). min_action_pct Numeric (default 5); percent treated controlled split, suppress corresponding action-specific uplift (report \"—\"). split_drop_zero Logical (default TRUE); drop split rows whose PV contributions numerically zero baselines compact tables. split_top_only Logical (default FALSE); TRUE, retain top-contributing split per model compact tables (helpful depth-1 trees complementary branches redundant). se_method Character; one \"bootstrap\" (default) \"plugin\" influence-function plug-SEs based per-unit DR contributions. source_models Optional original model container (e.g., `margot_causal_forest()`) wish run external audits; required estimation. audit_with_policytree Logical; TRUE `source_models` available, performs side--side audit using original GRF predictions test rows: () tau_hat-based policy values PVc = mean(1a=Treat×tau_hat), PVT = mean(1a=Control×(-tau_hat)); (ii) conditional-means-based values using `conditional_means` present. helps validate DR-based values agree GRF-based alternatives evaluation slice. auto_recommend Logical; TRUE, compute report restricted-policy recommendations derived dominant favorable split(s). Default FALSE. dominance_threshold Numeric (0,1); minimum share |PV(control-)| contribution consider split dominant (default 0.6). strict_branch Logical; TRUE, require positive branch-level treated-uplift CI lower bound > 0 consider branch favorable (default FALSE). restricted_scope Character; one \"leaf\" (default) \"branch\"; defines granularity used construct restricted policy (treat inside selected branch/leaf; control elsewhere).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","text":"list :   - `text`: Combined summary text (character scalar)   - `report`: Narrative policy summary formatted scientific reporting   - `interpretation`: Concise sentence-level summary listing wins, caution, uncertain models   - `table_md`: Markdown table (character scalar) `render_markdown = TRUE`   - `table_df`: Data frame policy value summary rows (title-case columns)   - `split_breakdown`: Named list mapping model id -> data frame split-level metrics   - `split_table_compact`: Named list mapping model id -> compact split table (data frame)   - `split_table_compact_df`: Combined compact split table `Outcome` column   - `split_table_compact_md`: Markdown rendering combined compact table   - `method_overview`: Character string describing estimation approach identities   - `method_by_model`: Named list per-model method blurbs (including n_eval, coverage, SE method)   - `policy_value_audit`: Optional named list audit results `audit_with_policytree = TRUE`   - `recommendations_by_model`: Optional per-model recommendation objects `auto_recommend = TRUE`   - `recommendations_text`: Optional combined markdown text recommendations   - `recommended_model_ids`: Character vector model identifiers flagged deployment   - `recommended_model_names`: Character vector human-readable labels recommended models   - `practical_takeaways_text`: Optional high-level bullet summary deployment guidance   - `wins_model_ids`: Character vector model identifiers policy vs control-strictly positive (CI > 0)   - `wins_model_names`: Character vector human-readable labels matching `wins_model_ids`   - `neutral_model_ids`: Character vector model identifiers inconclusive policy vs control-evidence (CI crosses 0)   - `neutral_model_names`: Character vector human-readable labels matching `neutral_model_ids`   - `caution_model_ids`: Character vector model identifiers policy vs control-negative (CI < 0)   - `caution_model_names`: Character vector human-readable labels matching `caution_model_ids`   - `group_table`: Named list grouped brief tables (data frames)   - `group_table_df`: Combined grouped table `Group` column   - `model_depths`: Named integer vector giving depth used model report   - `depth_map`: Convenience alias `model_depths` (passing `depths_by_model`)   - `depth1_model_ids`: Character vector model identifiers summarised depth 1   - `depth1_model_names`: Character vector human-readable labels depth-1 models   - `depth2_model_ids`: Character vector model identifiers summarised depth 2   - `depth2_model_names`: Character vector human-readable labels depth-2 models   - `recommended_depth1_model_ids`: Recommended--deployment models evaluated depth 1   - `recommended_depth1_model_names`: Human-readable labels recommended depth-1 models   - `recommended_depth2_model_ids`: Recommended--deployment models evaluated depth 2   - `recommended_depth2_model_names`: Human-readable labels recommended depth-2 models","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_summary_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Policy Tree Summary Report (text + markdown table) — margot_policy_summary_report","text":"Method (estimation identities): - model depth, evaluate consensus policy held-test set   used build `plot_data` (policytree test indices). - Let μ0(x), μ1(x) conditional means E[Y(0)|X=x], E[Y(1)|X=x] estimated   policytree/GRF. use `double_robust_scores()` stored `dr_scores` obtain   per-unit estimates μ0 μ1 test rows, predict policy actions (x)   consensus policy tree. ensure quantities aligned test   rows mapping via rownames single complete-case mask policy columns. - Policy value contrasts computed sample averages (plugin DR estimators):     PV vs control- = mean( 1a(x)=Treat × (μ1(x) − μ0(x)) )     PV vs treat-   = mean( 1a(x)=Control × (μ0(x) − μ1(x)) ) - Treated-metrics link via identity:     Coverage = mean(1a(x)=Treat), Uplift_Treated = mean(μ1 − μ0 | (x)=Treat)     PV vs control-= Coverage × Uplift_Treated - Split contributions report subgroup decomposition means first split   (leaves), sum exactly overall policy values. Standard errors: - `se_method = \"bootstrap\"` (default): bootstrap resampling test rows   re-prediction policy actions obtain SEs CIs. - `se_method = \"plugin\"`: influence-function plug-SEs via sample variance   per-unit contributions (e.g., TreatMask × (μ1−μ0) PV vs control-); .e.,   se = sd(contribution)/sqrt(n). mimics asymptotic SE used policytree   value estimators based DR pseudo-outcomes raw (Y, W) required. Automated recommendations (optional): - `auto_recommend = TRUE`, reporter identifies dominant favorable split (PV(control-)   contribution share) evaluates restricted policy treats inside split (keeps   learned actions ; forces control elsewhere). compares full vs restricted policies   emits recommendation per model: deploy_full, deploy_restricted, caution, do_not_deploy.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"Computes policy trees causal forest models flexible covariate selection train/test split options. function provides direct way generate policy trees without running full causal forest analysis, paralleling functionality margot_rate() margot_qini().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"","code":"margot_policy_tree(   model_results,   model_names = NULL,   custom_covariates = NULL,   exclude_covariates = NULL,   covariate_mode = c(\"original\", \"custom\", \"add\", \"all\"),   depth = \"both\",   train_proportion = 0.5,   label_mapping = NULL,   verbose = TRUE,   seed = 12345,   tree_method = c(\"policytree\", \"fastpolicytree\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"model_results List returned margot_causal_forest() margot_flip_forests(), containing results optionally covariates data. model_names Optional character vector specifying models process. Default NULL (models). custom_covariates Character vector covariate names use policy trees. NULL, uses original top variables model. exclude_covariates Character vector covariate names patterns exclude. Supports exact matches regex patterns (e.g., \"_log\" excludes variables containing \"_log\"). covariate_mode Character string specifying handle covariates: \"original\"Use original top variables model (default) \"custom\"Use specified custom_covariates \"add\"Add custom_covariates existing top variables \"\"Use available covariates depth Numeric character specifying depth(s) compute: 1 single split, 2 two splits, \"\" depths (default). train_proportion Numeric value 0 1 proportion data used training depth-2 trees. Default 0.5. Note: depth-1 trees use available data selected covariates (depth-2). label_mapping Named character vector converting variable names readable labels. verbose Logical; print progress messages (default TRUE). seed Integer; base seed reproducible computations (default 12345). tree_method Character string specifying package use: \"policytree\" (default) \"fastpolicytree\". fastpolicytree package provides ~10x faster computation identical results. Falls back policytree fastpolicytree installed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"list structured similarly margot_causal_forest() output, containing: results: List element corresponds model contains: dr_scores: Doubly robust scores (original flipped available) policy_tree_depth_1: Single-split policy tree (requested) policy_tree_depth_2: Two-split policy tree (requested possible) plot_data: Data visualization (X_test, X_test_full, predictions) top_vars: Variables used policy trees policy_tree_covariates: Final covariate selection policy_tree_metadata: Metadata computation covariates: covariate matrix used not_missing: Indices complete cases train_proportion: train/test split proportion used","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"function allows : Exclude specific covariates (e.g., log-transformed variables \"_log\") Use custom covariate sets policy optimization Adjust train/test split depth-2 trees Recompute policy trees without re-running causal forests output structured compatible margot_policy(), margot_plot_policy_tree(), margot_plot_policy_combo(), margot_interpret_policy_tree().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recompute Policy Trees with Custom Parameters — margot_policy_tree","text":"","code":"if (FALSE) { # \\dontrun{ # Recompute policy trees with default settings policy_trees <- margot_policy_tree(causal_forest_results)  # Exclude log-transformed variables policy_trees_no_log <- margot_policy_tree(   causal_forest_results,   exclude_covariates = \"_log\" )  # Use custom covariates with 80/20 train/test split policy_trees_custom <- margot_policy_tree(   causal_forest_results,   custom_covariates = c(\"age\", \"gender\", \"income\"),   covariate_mode = \"custom\",   train_proportion = 0.8 )  # Compute only depth-1 trees using all covariates policy_trees_d1 <- margot_policy_tree(   causal_forest_results,   covariate_mode = \"all\",   depth = 1 )  # Process specific models with larger training set policy_trees_selected <- margot_policy_tree(   causal_forest_results,   model_names = c(\"anxiety\", \"depression\"),   train_proportion = 0.8 )  # Visualize results plot <- margot_plot_policy_tree(policy_trees, \"model_anxiety\")  # Create combined plots plots <- margot_plot_policy_combo(policy_trees, \"model_anxiety\") print(plots$combined_plot)  # Interpret results margot_interpret_policy_tree(policy_trees, \"model_anxiety\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"Performs bootstrap analysis policy trees assess stability generate consensus trees. default, varies random seeds create different train/test splits rather bootstrap resampling, trees highly sensitive data perturbations. Uses memory-efficient streaming approach handle large datasets. function deprecated. Please use margot_policy_tree_stability instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"","code":"margot_policy_tree_bootstrap(...)  margot_policy_tree_bootstrap(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"... Arguments passed margot_policy_tree_stability model_results List returned margot_causal_forest() margot_flip_forests() model_names Character vector model names analyze. NULL = models. custom_covariates Character vector covariate names use policy trees. NULL, uses original top variables model. exclude_covariates Character vector covariate names patterns exclude. Supports exact matches regex patterns (e.g., \"_log\" excludes variables containing \"_log\"). covariate_mode Character string specifying handle covariates: \"original\" (use original top variables), \"custom\" (use custom_covariates), \"add\" (add custom existing), \"\" (use available covariates). depth Numeric character specifying depth(s) compute: 1 single split, 2 two splits (default), \"\" depths. n_bootstrap Integer. Number bootstrap iterations (default 300). vary_type Character. Type variation: \"split_only\" (vary train/test split via seeds), \"sample_only\" (bootstrap resample), \"\" (resample + split). Default \"split_only\". consensus_threshold Numeric. Minimum inclusion frequency consensus (default 0.5). train_proportion Numeric. Train/test split vary_train_proportion = FALSE (default 0.5). vary_train_proportion Logical. Whether vary train proportion (default FALSE). train_proportions Numeric vector. Proportions cycle vary_train_proportion = TRUE (default c(0.4, 0.5, 0.6, 0.7)). label_mapping Named character vector converting variable names readable labels. return_consensus_trees Logical. Return fitted consensus trees (default TRUE). metaseed Integer. Master seed reproducibility (default 12345). parallel Logical. Use parallel processing (default FALSE). n_cores Integer. Number cores parallel processing. verbose Logical. Print progress messages (default TRUE). seed Integer. Additional seed parameter compatibility (default 12345). tree_method Character string specifying package use: \"fastpolicytree\" (default) \"policytree\". fastpolicytree package provides ~10x faster computation, particularly beneficial bootstrap analysis. Falls back policytree fastpolicytree installed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"Object class \"margot_bootstrap_policy_tree\" containing: results: List consensus trees bootstrap metrics per model summary_metrics: Variable importance convergence diagnostics metadata: Bootstrap parameters seeds used Result margot_policy_tree_stability","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"function uses memory-efficient approach: Processes one tree time Extracts essential split information Accumulates statistics without storing trees Reconstructs single consensus trees compatibility default, function varies random seeds create different train/test splits iteration rather using bootstrap resampling. decision trees highly sensitive small data perturbations, seed variation provides realistic assessment tree stability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"theoretical-background","dir":"Reference","previous_headings":"","what":"Theoretical Background","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"Policy trees inherit instability decision trees, small changes data can lead completely different tree structures (Breiman, 1996). instability particularly pronounced predictors correlated, tree can arbitrarily choose similar variables split points. Athey Wager's (2021) policy learning framework acknowledges challenges providing methods extract robust insights despite instability. bootstrap analysis helps distinguish : Fundamental instability due weak absent treatment effect heterogeneity Apparent instability due correlated predictors capture similar information Robust patterns emerge consistently across different data samples Use companion functions `margot_assess_variable_correlation()` `margot_stability_diagnostics()` better understand sources instability. Three types variation supported: \"\": Varies bootstrap sampling train/test splits \"sample_only\": bootstrap resampling, fixed train/test split \"split_only\": Fixed sample, varies train/test split","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"complete-workflow-example","dir":"Reference","previous_headings":"","what":"Complete Workflow Example","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"","code":"# 1. Run causal forest (save data for correlation analysis) cf_results <- margot_causal_forest(   data = your_data,   outcome_vars = c(\"outcome1\", \"outcome2\"),   save_data = TRUE  # Important for correlation analysis )  # 2. Run bootstrap analysis to assess stability boot_results <- margot_policy_tree_bootstrap(   cf_results,   n_bootstrap = 300,   tree_method = \"fastpolicytree\"  # 10x faster if available )  # 3. Check variable correlations cor_analysis <- margot_assess_variable_correlation(   cf_results,  # Use original results, NOT boot_results   \"model_outcome1\" )  # 4. Identify clusters of correlated variables clusters <- margot_identify_variable_clusters(cor_analysis)  # 5. Get comprehensive diagnostics diagnostics <- margot_stability_diagnostics(   bootstrap_results = boot_results,   model_results = cf_results,   model_name = \"model_outcome1\" )  # 6. Interpret results interpretation <- margot_interpret_bootstrap(   boot_results,   \"model_outcome1\",   include_theory = TRUE  # Include theoretical context )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"Athey, S., & Wager, S. (2021). Policy learning observational data. Econometrica, 89(1), 133-161. Breiman, L. (1996). Bagging predictors. Machine Learning, 24(2), 123-140. Zhou, Z., Athey, S., & Wager, S. (2023). Offline multi-action policy learning: Generalization optimization. Operations Research, 71(1), 148-183.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Analysis for Policy Trees — margot_policy_tree_bootstrap","text":"","code":"if (FALSE) { # \\dontrun{ # Basic bootstrap with fixed train proportion boot_results <- margot_policy_tree_bootstrap(   causal_forest_results,   n_bootstrap = 300 )  # Vary train proportion with default values boot_results <- margot_policy_tree_bootstrap(   causal_forest_results,   vary_train_proportion = TRUE )  # Custom train proportions boot_results <- margot_policy_tree_bootstrap(   causal_forest_results,   vary_train_proportion = TRUE,   train_proportions = c(0.3, 0.5, 0.7) )  # Use bootstrap resampling instead of seed variation boot_results <- margot_policy_tree_bootstrap(   causal_forest_results,   vary_type = \"sample_only\",   n_bootstrap = 300 )  # Plot consensus tree margot_plot_policy_tree(boot_results, \"model_anxiety\")  # Get bootstrap summary summary(boot_results)  # Interpret results with theoretical context interpretation <- margot_interpret_bootstrap(   boot_results,   \"model_anxiety\",   format = \"text\" )  # Assess variable correlations (using original causal forest results) cor_analysis <- margot_assess_variable_correlation(   causal_forest_results, # NOT boot_results   \"model_anxiety\" )  # Identify variable clusters clusters <- margot_identify_variable_clusters(cor_analysis)  # Run comprehensive stability diagnostics diagnostics <- margot_stability_diagnostics(   bootstrap_results = boot_results,   model_results = causal_forest_results,   model_name = \"model_anxiety\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Stability Analysis for Policy Trees — margot_policy_tree_stability","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"Performs stability analysis policy trees assess robustness generate consensus trees. default, varies random seeds create different train/test splits assess stability. Optionally supports bootstrap resampling traditional bootstrap analysis. Uses memory-efficient streaming approach handle large datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"","code":"margot_policy_tree_stability(   model_results,   model_names = NULL,   custom_covariates = NULL,   exclude_covariates = NULL,   covariate_mode = c(\"original\", \"custom\", \"add\", \"all\"),   depth = 2,   n_iterations = 300,   vary_type = c(\"split_only\", \"bootstrap\", \"both\"),   consensus_threshold = 0.5,   train_proportion = 0.5,   vary_train_proportion = FALSE,   train_proportions = c(0.4, 0.5, 0.6, 0.7),   label_mapping = NULL,   return_consensus_trees = TRUE,   metaseed = 12345,   parrallel = NULL,   parallel = FALSE,   n_cores = NULL,   verbose = TRUE,   seed = 12345,   tree_method = c(\"fastpolicytree\", \"policytree\"),   n_bootstrap = NULL,   compute_policy_values = FALSE,   policy_value_R = 499L,   policy_value_seed = 42L,   policy_value_baseline = c(\"control_all\", \"treat_all\"),   future_globals_max_size = 20 * 1024^3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"model_results List returned margot_causal_forest() margot_flip_forests() model_names Character vector model names analyze. NULL = models. custom_covariates Character vector covariate names use policy trees. NULL, uses original top variables model. exclude_covariates Character vector covariate names patterns exclude. Supports exact matches regex patterns (e.g., \"_log\" excludes variables containing \"_log\"). covariate_mode Character string specifying handle covariates: \"original\" (use original top variables), \"custom\" (use custom_covariates), \"add\" (add custom existing), \"\" (use available covariates). depth Numeric character specifying depth(s) compute: 1 single split, 2 two splits (default), \"\" depths. n_iterations Integer. Number stability iterations (default 300). vary_type Character. Type variation: \"split_only\" (vary train/test split via seeds), \"bootstrap\" (bootstrap resample), \"\" (resample + split). Default \"split_only\". consensus_threshold Numeric. Minimum inclusion frequency consensus (default 0.5). train_proportion Numeric. Train/test split vary_train_proportion = FALSE (default 0.5). vary_train_proportion Logical. Whether vary train proportion (default FALSE). train_proportions Numeric vector. Proportions cycle vary_train_proportion = TRUE (default c(0.4, 0.5, 0.6, 0.7)). label_mapping Named character vector converting variable names readable labels. return_consensus_trees Logical. Return fitted consensus trees (default TRUE). metaseed Integer. Master seed reproducibility (default 12345). parrallel Deprecated misspelling `parallel`; retained backwards compatibility. parallel Logical. Use parallel processing (default FALSE). n_cores Integer. Number cores parallel processing. verbose Logical. Print progress messages (default TRUE). seed Integer. Additional seed parameter compatibility (default 12345). tree_method Character string specifying package use: \"fastpolicytree\" (default) \"policytree\". fastpolicytree package provides ~10x faster computation, particularly beneficial stability analysis. Falls back policytree fastpolicytree installed. n_bootstrap Deprecated. Use n_iterations instead. compute_policy_values Logical. TRUE, compute bootstrap policy-value tests consensus tree store results `policy_value_depth_*` slots (default FALSE). policy_value_R Integer ≥ 1. Number bootstrap replicates policy values `compute_policy_values = TRUE` (default 499). policy_value_seed Optional integer seed policy-value bootstraps. Use NULL inherit ambient RNG state. policy_value_baseline Contrast baseline stored policy values `compute_policy_values = TRUE`. One \"control_all\" (default) \"treat_all\". future_globals_max_size Maximum size (bytes) globals can exported parallel workers `parallel = TRUE`. Defaults 20 GiB. Increase large model objects trigger `future.globals.maxSize` guard.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"Object class \"margot_stability_policy_tree\" containing: results: List consensus trees stability metrics per model summary_metrics: Variable importance convergence diagnostics metadata: Analysis parameters seeds used","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"function uses memory-efficient approach: Processes one tree time Extracts essential split information Accumulates statistics without storing trees Reconstructs single consensus trees compatibility `compute_policy_values = TRUE`, consensus tree also evaluated specified baseline bootstrap policy-value estimates stored `policy_value_depth_1` / `policy_value_depth_2`. allows downstream reporters reuse consistent estimates without rerunning bootstrap. default, function varies random seeds create different train/test splits iteration. assesses stability policy tree structure without computational overhead statistical assumptions bootstrap resampling. True bootstrap resampling can enabled vary_type = \"bootstrap\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"theoretical-background","dir":"Reference","previous_headings":"","what":"Theoretical Background","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"Policy trees inherit instability decision trees, small changes data can lead completely different tree structures (Breiman, 1996). instability particularly pronounced predictors correlated, tree can arbitrarily choose similar variables split points. Athey Wager's (2021) policy learning framework acknowledges challenges providing methods extract robust insights despite instability. stability analysis helps distinguish : Fundamental instability due weak absent treatment effect heterogeneity Apparent instability due correlated predictors capture similar information Robust patterns emerge consistently across different data samples Use companion functions `margot_assess_variable_correlation()` `margot_stability_diagnostics()` better understand sources instability. Three types variation supported: \"split_only\": Fixed sample, varies train/test split (default) \"bootstrap\": Bootstrap resampling replacement \"\": Varies bootstrap sampling train/test splits","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"complete-workflow-example","dir":"Reference","previous_headings":"","what":"Complete Workflow Example","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"","code":"# 1. Run causal forest (save data for correlation analysis) cf_results <- margot_causal_forest(   data = your_data,   outcome_vars = c(\"outcome1\", \"outcome2\"),   save_data = TRUE  # Important for correlation analysis )  # 2. Run stability analysis to assess robustness stability_results <- margot_policy_tree_stability(   cf_results,   n_iterations = 300,   tree_method = \"fastpolicytree\"  # 10x faster if available )  # 3. Check variable correlations cor_analysis <- margot_assess_variable_correlation(   cf_results,  # Use original results, NOT stability_results   \"model_outcome1\" )  # 4. Identify clusters of correlated variables clusters <- margot_identify_variable_clusters(cor_analysis)  # 5. Get comprehensive diagnostics diagnostics <- margot_stability_diagnostics(   stability_results = stability_results,   model_results = cf_results,   model_name = \"model_outcome1\" )  # 6. Interpret results interpretation <- margot_interpret_stability(   stability_results,   \"model_outcome1\",   include_theory = TRUE  # Include theoretical context )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"Athey, S., & Wager, S. (2021). Policy learning observational data. Econometrica, 89(1), 133-161. Breiman, L. (1996). Bagging predictors. Machine Learning, 24(2), 123-140. Zhou, Z., Athey, S., & Wager, S. (2023). Offline multi-action policy learning: Generalization optimization. Operations Research, 71(1), 148-183.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree_stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stability Analysis for Policy Trees — margot_policy_tree_stability","text":"","code":"if (FALSE) { # \\dontrun{ # Basic stability analysis with fixed train proportion stability_results <- margot_policy_tree_stability(   causal_forest_results,   n_iterations = 300 )  # Vary train proportion with default values stability_results <- margot_policy_tree_stability(   causal_forest_results,   vary_train_proportion = TRUE )  # Custom train proportions stability_results <- margot_policy_tree_stability(   causal_forest_results,   vary_train_proportion = TRUE,   train_proportions = c(0.3, 0.5, 0.7) )  # Use bootstrap resampling instead of seed variation stability_results <- margot_policy_tree_stability(   causal_forest_results,   vary_type = \"bootstrap\",   n_iterations = 300 )  # Plot consensus tree margot_plot_policy_tree(stability_results, \"model_anxiety\")  # Get stability summary summary(stability_results)  # Interpret results with theoretical context interpretation <- margot_interpret_stability(   stability_results,   \"model_anxiety\",   format = \"text\" )  # Assess variable correlations (using original causal forest results) cor_analysis <- margot_assess_variable_correlation(   causal_forest_results, # NOT stability_results   \"model_anxiety\" )  # Identify variable clusters clusters <- margot_identify_variable_clusters(cor_analysis)  # Run comprehensive stability diagnostics diagnostics <- margot_stability_diagnostics(   stability_results = stability_results,   model_results = causal_forest_results,   model_name = \"model_anxiety\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_value_explainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Policy Value Explainer (shared text) — margot_policy_value_explainer","title":"Policy Value Explainer (shared text) — margot_policy_value_explainer","text":"Returns concise, reusable explanation policy value quantities used across Margot's policy tree reporting functions. helper intended single source truth describe estimands end users policymakers.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_value_explainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Policy Value Explainer (shared text) — margot_policy_value_explainer","text":"","code":"margot_policy_value_explainer(audience = c(\"policy\", \"research\"))"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_value_explainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Policy Value Explainer (shared text) — margot_policy_value_explainer","text":"audience Character; one \"policy\" \"research\". wording identical now, parameter allows future tailoring.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_value_explainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Policy Value Explainer (shared text) — margot_policy_value_explainer","text":"single character string explanation paragraph(s).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"End-to-end Policy Workflow (depth selection → report → interpretation) — margot_policy_workflow","title":"End-to-end Policy Workflow (depth selection → report → interpretation) — margot_policy_workflow","text":"Runs depth comparison, produces mixed-depth policy summary report, (optionally) generates per-model interpretations. Designed one-call wrapper policymaker-facing reporting, safe defaults prefer simple trees unless depth-2 gains material.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-to-end Policy Workflow (depth selection → report → interpretation) — margot_policy_workflow","text":"","code":"margot_policy_workflow(   stability,   original_df = NULL,   label_mapping = NULL,   se_method = c(\"plugin\", \"bootstrap\"),   R = 499L,   dominance_threshold = 0.8,   strict_branch = TRUE,   min_gain_for_depth_switch = 0.005,   include_interpretation = TRUE,   audience = c(\"policy\", \"research\"),   use_coherent_in_interpret = TRUE,   brief_include_group = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-to-end Policy Workflow (depth selection → report → interpretation) — margot_policy_workflow","text":"stability `margot_stability_policy_tree` object produced [margot_policy_tree_stability()]. original_df Optional original-scale data (scale annotations). label_mapping Optional named list mapping outcome variable names. se_method Character; \"plugin\" (default) \"bootstrap\". R Integer; bootstrap reps `se_method = \"bootstrap\"` (default 499). dominance_threshold Numeric (0,1); required dominance share restricted policy recommendation (default 0.8 policy mode). strict_branch Logical; require positive uplift CI dominant branch recommending restricted deployment (default TRUE). min_gain_for_depth_switch Numeric; minimum PV gain required switch depth-1 depth-2 (default 0.005 standardized outcomes). include_interpretation Logical; also run [margot_interpret_policy_batch()] selected depths (default TRUE). audience Character; one \"policy\" \"research\" (default \"policy\"). use_coherent_in_interpret Logical; TRUE, reuse PV rows coherent summary interpretations instead recomputing (default TRUE). brief_include_group Logical; TRUE, `policy_brief_df` includes Group column (Wins/Neutral/Caution). FALSE, returns simplified brief without Group. Default FALSE policy audiences. ... Additional pass-args [margot_policy_summary_report()], e.g., `split_compact`, `split_top_only`, etc.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-to-end Policy Workflow (depth selection → report → interpretation) — margot_policy_workflow","text":"list components depth selection (best), summary (summary),   optional interpretations (interpret). Includes `policy_brief_df` shortcut drawn   `summary$group_table_df`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","title":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","text":"Produces compact table positivity diagnostics selected outcome/shift `margot_lmtp_positivity()`, showing -weights summary positive-(uncensored) summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","text":"","code":"margot_positivity_panel(   pos,   outcome = NULL,   shift = NULL,   include_overall = TRUE,   digits = 3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","text":"pos result `margot_lmtp_positivity()` (list by_wave, overall, flags). outcome Optional character. provided, filter outcome. shift Optional character. provided, filter shift/policy. include_overall Logical; TRUE, include pooled \"overall\" rows. digits Optional integer; provided, round numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","text":"data.frame (tibble available) compact positivity panel.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_panel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compact positivity panel (all vs positive-only) — margot_positivity_panel","text":"panel includes, available: censoring mass, ESS ESS/N, positive-counts ESS+/N+, tail probabilities chosen thresholds (positive-).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_tails_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Detailed quantiles and tails (all vs positive-only) — margot_positivity_tails_panel","title":"Detailed quantiles and tails (all vs positive-only) — margot_positivity_tails_panel","text":"given outcome/shift wave (overall), return compact table quantiles tail probabilities `margot_lmtp_positivity()` side--side weights vs positive-weights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_tails_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detailed quantiles and tails (all vs positive-only) — margot_positivity_tails_panel","text":"","code":"margot_positivity_tails_panel(   pos,   outcome,   shift,   wave = \"overall\",   digits = 3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_tails_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detailed quantiles and tails (all vs positive-only) — margot_positivity_tails_panel","text":"pos result `margot_lmtp_positivity()`. outcome Character. Outcome name filter. shift Character. Shift/policy name. Can full shift name (e.g., \"t5_pwi_z_shift_up\") cleaned suffix (e.g., \"shift_up\"). wave Character numeric. specific wave index \"overall\". digits Optional integer; provided, round numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_positivity_tails_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detailed quantiles and tails (all vs positive-only) — margot_positivity_tails_panel","text":"list two elements:   - header: one-row tibble outcome, shift, wave, n, n_pos, prop_zero,             prop_nonzero, ess, ess_frac, ess_pos, ess_pos_frac   - panel: tibble columns metric, , pos, diff (pos - )","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Binary Variables in a Data Frame — margot_process_binary_vars","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"function identifies binary variables (factors numeric), converts 0/1 format, renames . allows exceptions specified, ignores variables whose names already end specified suffix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"margot_process_binary_vars(data, exceptions = character(0), suffix = \"_binary\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data data frame process. exceptions character vector column names exclude processing. suffix string append renamed binary variables. Default \"_binary\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data frame processed binary variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"df <- data.frame(   a = factor(c(\"yes\", \"no\", \"yes\")),   b = c(1, 0, 1),   c = c(\"apple\", \"banana\", \"apple\"),   d = factor(c(\"true\", \"false\", \"true\")),   e_binary = c(0, 1, 0) ) processed_df <- margot_process_binary_vars(df, exceptions = \"c\") #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: cli #> Loading required package: knitr #>  #> ── Processing Binary Variables ───────────────────────────────────────────────── #> ℹ Ignoring variables with suffix '_binary': e_binary #>  #> ── Initial Data Summary ── #>  #> Total variables: 5 #> Total observations: 3 #> Exceptions specified: 1 #>  #> ── Binary Variables Identified ── #>  #> Total binary variables: 3 #> List of binary variables: #>  #>  #> |Variable | #> |:--------| #> |a        | #> |b        | #> |d        | #>  #> ── Variable Renaming ── #>  #>  #>  #> |Original |New      | #> |:--------|:--------| #> |a        |a_binary | #> |b        |b_binary | #> |d        |d_binary | #> ── Final Data Summary ── #>  #> Total variables: 5 #> Variables processed: 3 #> Variables excluded (exceptions and ignored): 2 #> ✔ Binary variable processing completed successfully! #> ────────────────────────────────────────────────────────────────────────────────"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"process longitudinal data for three waves — margot_process_longitudinal_data","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function processes longitudinal data exactly three waves (t0, t1, t2). handles attrition, scales baseline variables, optionally encodes ordinal variables. note: function currently implemented three waves .","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"","code":"margot_process_longitudinal_data(   df_wide,   ordinal_columns = NULL,   continuous_columns_keep = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"df_wide wide-format dataframe containing longitudinal data three waves. ordinal_columns character vector column names treated ordinal dummy-coded. continuous_columns_keep character vector continuous column names keep without scaling.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"processed dataframe suitable use longitudinal analyses three waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function performs following steps: 1. creates na conditions t0 t1 based missingness subsequent waves. 2. handles non-factor factor columns, applying attrition logic. 3. scales numeric baseline (t0) variables. 4. selects orders columns. 5. optionally encodes ordinal columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function specifically designed datasets exactly three waves (t0, t1, t2). may work correctly datasets fewer waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"","code":"# assuming df_wide is your wide-format dataframe with three waves processed_data <- margot_process_longitudinal_data(   df_wide,   ordinal_columns = c(\"education\", \"income_category\"),   continuous_columns_keep = c(\"age\", \"bmi\") ) #>  #> ── Longitudinal Data Processing ──────────────────────────────────────────────── #> ℹ Starting data processing for three waves (t0, t1, t2) #>  #> ── Step 1: Creating NA conditions ── #>  #> Error: object 'df_wide' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Process longitudinal dyadic data in wide format with censoring by missing exposure and silent dummy-coding — margot_process_longitudinal_data_wider","title":"Process longitudinal dyadic data in wide format with censoring by missing exposure and silent dummy-coding — margot_process_longitudinal_data_wider","text":"function processes longitudinal data (wide format) across multiple waves, handling dyadic censoring optional censoring exposure missing. `censor_if_missing_exposure = TRUE`, record missing exposure wave t+1 considered lost wave t subsequent wave data set `NA`. dyadic logic ensures member dyad lost, entire dyad censored.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process longitudinal dyadic data in wide format with censoring by missing exposure and silent dummy-coding — margot_process_longitudinal_data_wider","text":"","code":"margot_process_longitudinal_data_wider(   df_wide,   relationship_id = \"NULL\",   ordinal_columns = NULL,   continuous_columns_keep = NULL,   exposure_vars = NULL,   scale_exposure = FALSE,   scale_continuous = TRUE,   censor_if_missing_exposure = TRUE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = NULL,   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process longitudinal dyadic data in wide format with censoring by missing exposure and silent dummy-coding — margot_process_longitudinal_data_wider","text":"df_wide wide-format `data.frame` containing time-prefixed columns (e.g., `t0_x`). relationship_id column name identifying dyads; present, dyadic censoring applied. default: `\"NULL\"`. ordinal_columns character vector ordinal column bases dummy-encode processing. continuous_columns_keep character vector continuous column names retain without scaling. exposure_vars character vector exposure base names (without time prefixes). scale_exposure logical; `TRUE`, scales exposure variables. default: `FALSE`. scale_continuous logical; `TRUE`, scales continuous variables. default: `TRUE`. censor_if_missing_exposure logical; `TRUE`, missing exposures next wave cause censoring. default: `TRUE`. not_lost_in_following_wave suffix -lost indicator. default: `\"not_lost_following_wave\"`. lost_in_following_wave suffix lost indicator; `NULL`, lost indicator added. remove_selected_columns logical; `TRUE`, removes original columns dummy encoding. default: `TRUE`. time_point_prefixes optional vector time-point prefixes (e.g., `c(\"t0\",\"t1\")`). `NULL`, inferred data. time_point_regex regex pattern identify time-point prefixes. used `time_point_prefixes` `NULL`. save_observed_y logical; `TRUE`, retains observed outcomes final wave even censored. default: `FALSE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process longitudinal dyadic data in wide format with censoring by missing exposure and silent dummy-coding — margot_process_longitudinal_data_wider","text":"`data.frame` processed optionally scaled encoded columns, ready longitudinal analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of missing data at baseline — margot_prop_missing","title":"Proportion of missing data at baseline — margot_prop_missing","text":"function calculates proportion missing data baseline wave. wave column present, uses lowest number lowest factor level baseline. wave column found, issues warning uses entire dataset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of missing data at baseline — margot_prop_missing","text":"","code":"margot_prop_missing(data, wave_col = \"wave\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of missing data at baseline — margot_prop_missing","text":"data data frame containing dataset. wave_col character string. Name column indicates wave. default \"wave\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of missing data at baseline — margot_prop_missing","text":"numeric value representing proportion missing data baseline wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion of missing data at baseline — margot_prop_missing","text":"","code":"# Example using a dataset with a wave column # assume dat_long has a column called wave margot_prop_missing(dat_long) #> Error: object 'dat_long' not found  # Example using a dataset without a wave column # assume some_data is a dataset with no wave column margot_prop_missing(some_data) #> Error: object 'some_data' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"function creates propensity score model using specified exposure variable baseline covariates. also generates associated plots diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"","code":"margot_propensity_model_and_plots(   df_propensity,   exposure_variable,   baseline_vars,   weights_var_name,   estimand = \"ATE\",   method = \"ebal\",   focal = NULL,   love_plot_options = list(),   bal_tab_options = list(),   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"df_propensity data frame containing variables propensity score model. exposure_variable character string specifying name exposure variable df_propensity. baseline_vars character vector specifying names baseline covariates df_propensity. weights_var_name character string specifying name weights variable df_propensity. estimand character string specifying estimand. Default \"ATE\" (Average Treatment Effect). method character string specifying method propensity score estimation. Default \"ebal\". focal binary treatments, value treatment considered \"focal\" (.e., intervention). Default NULL. love_plot_options list options passed cobalt::love.plot(). Default empty list. bal_tab_options list options passed cobalt::bal.tab(). Default empty list. verbose logical value indicating whether print progress messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"list containing following elements: match_propensity: propensity score model object. love_plot: love plot object created cobalt::love.plot(). summary: summary propensity score model. summary_plot: plot propensity score model summary. balance_table: balance table created cobalt::bal.tab(). diagnostics: list additional diagnostic information.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_propensity is your dataset with appropriate variables results <- margot_propensity_model_and_plots(   df_propensity = df_propensity,   exposure_variable = \"treatment\",   baseline_vars = c(\"age\", \"sex\", \"bmi\"),   weights_var_name = \"sample_weights\",   love_plot_options = list(     thresholds = c(m = .05),     size = 4   ),   bal_tab_options = list(     thresholds = c(m = .1, v = 2.5)   ),   verbose = TRUE )  # Access the results print(results$summary) plot(results$love_plot) print(results$balance_table) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate QINI Curves and Difference Gain Summaries — margot_qini","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"Computes QINI curves difference gain summaries causal forest models. function provides direct way generate QINI results without running full policy analysis, paralleling functionality margot_rate(). Computes QINI curves causal forest models using exact methodology GRF/MAQ packages. Uses test set data train/test splits used margot_causal_forest(). function provides backward compatibility margot_interpret_qini formatting output margot_qini_alternative expected structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"","code":"margot_qini(   margot_result,   model_names = NULL,   seed = 12345,   n_bootstrap = 200,   verbose = TRUE,   spend_levels = c(0.1, 0.4),   label_mapping = NULL )  margot_qini(   margot_result,   model_names = NULL,   seed = 12345,   n_bootstrap = 200,   verbose = TRUE,   spend_levels = c(0.1, 0.4),   label_mapping = NULL )  margot_qini(   margot_result,   model_names = NULL,   seed = 12345,   n_bootstrap = 200,   verbose = TRUE,   spend_levels = c(0.1, 0.4),   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"margot_result Output margot_causal_forest() model_names Character vector model names process (NULL = ) seed Random seed reproducibility n_bootstrap Number bootstrap replicates confidence intervals verbose Print progress messages spend_levels Numeric vector spend levels analysis (default 0.1) label_mapping Named list label transformations models List returned margot_causal_forest(), containing results optionally full_models. baseline_method Method generating baseline: \"maq_no_covariates\" (default), \"auto\", \"simple\", \"maq_only\", \"none\". See margot_generate_qini_data() details. remove_tx_prefix Logical; remove treatment prefix variable names (default TRUE). remove_z_suffix Logical; remove z-score suffix variable names (default TRUE). use_title_case Logical; convert variable names title case (default TRUE). remove_underscores Logical; replace underscores spaces (default TRUE). treatment_cost Scalar treatment cost per unit. Default 1. Lower values (e.g., 0.2) represent cheap treatments; higher values (e.g., 5) represent expensive treatments. Affects QINI curve shape - lower costs create steeper curves, higher costs create shallower curves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"list element corresponds model contains:   qini_objects (maq objects CATE baseline curves),   qini_data (data.frame proportion, gain, curve columns plotting),   diff_gain_summaries (list difference gain summaries spend level),   model_name (processed model name). input margot_result object added qini_results component containing: cate MAQ object CATE-based targeting baseline MAQ object -priority baseline test_indices Indices used QINI computation n_test Number observations used List formatted margot_interpret_qini diff_gain_summaries","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"function generates QINI curves -demand using margot_generate_qini_data(). binary treatments, creates CATE baseline (e.g., ATE) curves. difference gain summaries quantify much better CATE-based targeting performs compared baseline specified spend levels. treatment_cost parameter allows cost sensitivity analysis without rerunning causal forest models. Lower costs (e.g., 0.2) create steeper QINI curves indicating people can treated cost-effectively, higher costs (e.g., 5) create shallower curves indicating highest-effect individuals justify treatment. Cost Invariance Property: treatment costs uniform across individuals, relative benefit CATE-based targeting uniform allocation remains constant regardless cost level. absolute gains scale inversely cost (gain cost c = gain cost 1 / c), difference CATE ATE curves scales proportionally, preserving relative advantage personalized treatment. means value heterogeneous treatment effects targeting decisions independent uniform cost level. output structured compatible margot_interpret_qini() QINI visualization functions. function implements standard QINI curve methodology GRF MAQ packages. computes two curves: 1. CATE curve: Prioritizes treatment based estimated individual treatment effects 2. Baseline curve: -priority assignment (random allocation) margot_causal_forest() run use_train_test_split = TRUE, QINI curves computed test set , following best practices avoiding overfitting policy evaluation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate QINI Curves and Difference Gain Summaries — margot_qini","text":"","code":"if (FALSE) { # \\dontrun{ # Run causal forest with train/test split cf_results <- margot_causal_forest(   data = mydata,   outcome_vars = c(\"outcome1\", \"outcome2\"),   covariates = covariates,   W = treatment,   use_train_test_split = TRUE )  # Compute QINI curves cf_results <- margot_qini(cf_results)  # Plot results margot_plot_qini(cf_results, model_name = \"model_outcome1\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_alternative.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute QINI Curves (Alternative Implementation) — margot_qini_alternative","title":"Compute QINI Curves (Alternative Implementation) — margot_qini_alternative","text":"Computes QINI curves using existing data margot_causal_forest results. version works standard output structure without requiring save_models = TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_alternative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute QINI Curves (Alternative Implementation) — margot_qini_alternative","text":"","code":"margot_qini_alternative(   margot_result,   model_names = NULL,   seed = 12345,   n_bootstrap = 200,   verbose = TRUE,   spend_levels = c(0.1, 0.4),   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_alternative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute QINI Curves (Alternative Implementation) — margot_qini_alternative","text":"margot_result Output margot_causal_forest() model_names Character vector model names process (NULL = ) seed Random seed reproducibility n_bootstrap Number bootstrap replicates confidence intervals verbose Print progress messages spend_levels Numeric vector spend levels diff_gain_summaries (default 0.1) label_mapping Ignored (compatibility)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"Generates QINI curves across multiple treatment cost scenarios understand optimal treatment allocation changes cost. allows exploration policy recommendations different budget constraints without rerunning causal forest models.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"","code":"margot_qini_cost_sensitivity(   models,   costs = c(0.2, 0.5, 1, 2, 5),   model_names = NULL,   spend_levels = 0.1,   baseline_method = \"maq_no_covariates\",   verbose = TRUE,   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"models List returned margot_causal_forest(), containing results optionally full_models. costs Numeric vector treatment costs evaluate. Default c(0.2, 0.5, 1, 2, 5) representing range cheap expensive treatments. model_names Optional character vector specifying models process. Default NULL (models). spend_levels Numeric vector spend levels difference gain summaries. Default 0.1. baseline_method Method generating baseline. See margot_qini() details. verbose Logical; print progress messages (default TRUE). seed Integer; base seed reproducible computations (default 12345).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"list class \"margot_qini_cost_sensitivity\" containing: results: Named list element cost scenario containing     QINI results margot_qini() costs: cost values used models_processed: Names models processed summary: Data frame summarizing key metrics across costs","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"function systematically varies treatment_cost parameter margot_qini() show QINI curves optimal treatment fractions change cost. Lower costs (e.g., 0.2) represent scenarios treatment cheap relative budget, resulting steeper QINI curves larger optimal treatment fractions. Higher costs (e.g., 5) represent expensive treatments highest-effect individuals justify treatment. summary table includes optimal treatment fraction expected gain key spend levels cost scenario, facilitating comparison across different budget constraints.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_cost_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Cost Sensitivity Analysis for QINI Curves — margot_qini_cost_sensitivity","text":"","code":"if (FALSE) { # \\dontrun{ # Basic cost sensitivity analysis cost_sens <- margot_qini_cost_sensitivity(   causal_forest_results,   costs = c(0.5, 1, 2) )  # View summary of optimal treatment fractions print(cost_sens$summary)  # Plot results for a specific model across costs margot_plot_qini_cost_sensitivity(cost_sens, model_name = \"model_anxiety\")  # Detailed analysis for specific models cost_sens_detailed <- margot_qini_cost_sensitivity(   causal_forest_results,   costs = seq(0.2, 3, by = 0.2), # Fine-grained cost grid   model_names = c(\"model_anxiety\", \"model_depression\"),   spend_levels = c(0.05, 0.1, 0.2, 0.4) # More spend levels ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"Computes QINI curves related metrics using test set margot_causal_forest_dev(). Integrates functionality margot_qini() margot_interpret_qini() single coherent function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"","code":"margot_qini_dev(   cf_results,   outcome_vars = NULL,   baseline_method = \"maq_no_covariates\",   use_evaluation_forest = TRUE,   spend_levels = c(0.05, 0.1, 0.2, 0.4),   n_bootstrap = 200,   confidence_level = 0.95,   seed = 12345,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"cf_results Results margot_causal_forest_dev() outcome_vars Character vector outcomes analyze. NULL = . baseline_method Method baseline curve: \"maq_no_covariates\" (default), \"simple\", \"maq_only\", \"auto\", \"none\" use_evaluation_forest Logical. Use evaluation forest DR scores available (default: TRUE) spend_levels Numeric vector budget levels gain summaries (default: c(0.05, 0.1, 0.2, 0.4)) n_bootstrap Integer. Bootstrap iterations inference (default: 200) confidence_level Numeric. Confidence level (default: 0.95) seed Integer. Random seed (default: NULL) verbose Logical. Print progress (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"List class \"margot_qini_dev\" containing: qini_curves Data frame QINI curve data outcomes qini_objects List maq objects outcome gain_summaries Gain summaries specified spend levels qini_metrics Summary metrics (peak gain, area curve, etc.) metadata Analysis parameters data info","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"function: - Uses test set causal forest honest evaluation - Can use evaluation forests computing DR scores available - Provides multiple baseline methods comparison - Computes gain summaries specified budget levels - Includes bootstrap inference uncertainty quantification baseline methods : - \"maq_no_covariates\": Uses maq target..covariates = FALSE - \"simple\": Constant treatment effect assumption - \"maq_only\": Standard maq baseline - \"auto\": Tries methods order one succeeds - \"none\": baseline curve","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Development Version of QINI Analysis with Integrated Interpretation — margot_qini_dev","text":"","code":"if (FALSE) { # \\dontrun{ # Generate test data and fit forests test_data <- margot_simulate_test_data() cf_results <- margot_causal_forest_dev(   data = test_data$data,   outcome_vars = c(\"Y1\", \"Y2\", \"Y3\", \"Y4\"),   treatment = \"A\" )  # Compute QINI curves qini_results <- margot_qini_dev(cf_results)  # Analyze specific outcomes with custom parameters qini_results_custom <- margot_qini_dev(   cf_results,   outcome_vars = c(\"Y1\", \"Y4\"),   baseline_method = \"simple\",   spend_levels = c(0.1, 0.25, 0.5) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","title":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","text":"Compare QINI gains plotted data, direct maq calculations, diff summaries help identify discrepancies different calculation methods.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","text":"","code":"margot_qini_diagnostic(   mc_result,   model_names = NULL,   spend_levels = 0.1,   tolerance = 0.01,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","text":"mc_result Results margot_causal_forest similar qini_data qini_objects model_names Character vector models check (NULL = models) spend_levels Numeric vector spend levels check (default: 0.1) tolerance Numeric tolerance flagging discrepancies (default: 0.01) verbose Logical detailed output (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","text":"tibble comparing gain values different sources columns:   - model: Model name   - spend: Spend level   - source: Source gain value (\"plot_data\", \"maq_direct\", \"diff_summary\")   - cate_gain: CATE gain value   - ate_gain: ATE/baseline gain value   - difference: CATE - ATE difference   - se: Standard error (available)   - discrepancy: Logical flag values differ tolerance","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_diagnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnose QINI Gain Discrepancies — margot_qini_diagnostic","text":"","code":"if (FALSE) { # \\dontrun{ # Run diagnostic on all models diag_results <- margot_qini_diagnostic(mc_result)  # Check specific models at custom spend levels diag_results <- margot_qini_diagnostic(   mc_result,   model_names = c(\"model_anxiety\", \"model_depression\"),   spend_levels = c(0.1, 0.2, 0.5) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_note.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","title":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","text":"Creates descriptive note explaining QINI curve scale represents based selected scale type (average, cumulative, population).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","text":"","code":"margot_qini_scale_note(scale = \"average\", n_units = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","text":"scale Character string specifying scale: \"average\", \"cumulative\", \"population\" n_units Optional integer specifying number units (population scale)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","text":"character string containing explanatory note","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_note.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Explanatory Note for QINI Scale — margot_qini_scale_note","text":"","code":"margot_qini_scale_note(\"average\") #> [1] \"The y-axis shows expected policy effects per unit (Q(B) = E[⟨πB(Xi), τ(Xi)⟩]), representing the expected gain from treating units according to the policy. This is the standard maq implementation where gains converge to the ATE at 100% spend.\" margot_qini_scale_note(\"cumulative\") #> [1] \"The y-axis shows cumulative gains, where the gain at each point represents the total accumulated benefit from treating all units up to that proportion. This is the traditional uplift modeling approach where curves show total impact.\" margot_qini_scale_note(\"population\", n_units = 1000) #> [1] \"The y-axis shows total population impact for 1000 units. Values represent the absolute gain in the outcome from treating units according to the prioritization policy.\""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_subtitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","title":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","text":"Creates brief description QINI scale use plot subtitles","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_subtitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","text":"","code":"margot_qini_scale_subtitle(scale = \"average\", n_units = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_subtitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","text":"scale Character string specifying scale: \"average\", \"cumulative\", \"population\" n_units Optional integer specifying number units (population scale)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_subtitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","text":"character string containing brief description","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_scale_subtitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Brief Scale Description for Plot Subtitles — margot_qini_scale_subtitle","text":"","code":"margot_qini_scale_subtitle(\"average\") #> [1] \"Showing expected policy effects (maq default)\" margot_qini_scale_subtitle(\"cumulative\") #> [1] \"Showing cumulative gains\" margot_qini_scale_subtitle(\"population\", n_units = 1000) #> [1] \"Showing total impact for 1000 units\""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_simple_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Simple QINI Baseline Object — margot_qini_simple_baseline","title":"Create Simple QINI Baseline Object — margot_qini_simple_baseline","text":"Creates simple baseline object represents expected gain random treatment allocation. serves robust fallback maq fails generate baseline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_simple_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Simple QINI Baseline Object — margot_qini_simple_baseline","text":"","code":"margot_qini_simple_baseline(   mean_tau,   n_points = 100,   n_units = NULL,   treatment_cost = 1,   x_axis = \"proportion\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_simple_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Simple QINI Baseline Object — margot_qini_simple_baseline","text":"mean_tau average treatment effect (mean tau_hat) n_points Number points gain curve (default 100) n_units Total number units (metadata) treatment_cost Scalar treatment cost per unit (default 1) x_axis Type x-axis: \"proportion\" (default) \"budget\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_qini_simple_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Simple QINI Baseline Object — margot_qini_simple_baseline","text":"list mimicking maq output structure :   - _path: list gain, spend, std.err   - mean_tau: average treatment effect   - treatment_cost: treatment cost used   - baseline_type: \"simple\"   - class: \"qini_simple_baseline\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble RATE tables (AUTOC and QINI) — margot_rate","title":"Assemble RATE tables (AUTOC and QINI) — margot_rate","text":"Convenience wrapper around margot_rate_batch(). Returns two data frames, sorted descending RATE Estimate, reliable results highlighted bold.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble RATE tables (AUTOC and QINI) — margot_rate","text":"","code":"margot_rate(   models,   model_names = NULL,   policy = c(\"treat_best\", \"withhold_best\"),   round_digits = 3,   highlight_significant = TRUE,   label_mapping = NULL,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   adjust = \"none\",   alpha = 0.05,   apply_adjustment = adjust != \"none\",   seed = 12345,   use_evaluation_subset = TRUE,   target = c(\"AUTOC\", \"QINI\"),   q = seq(0.1, 1, by = 0.1),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble RATE tables (AUTOC and QINI) — margot_rate","text":"models List margot_causal_forest(). model_names Optional character vector specifying models process. Default NULL (models). policy Character; \"treat_best\" (default) \"withhold_best\". round_digits Integer; decimal places (default 3). highlight_significant Logical; bold outcomes whose 95 percent CI excludes 0 (default TRUE). Note: positive significant effects bolded, negative effects bolded. label_mapping Named character vector converting variable names readable labels. remove_tx_prefix Logical; remove treatment prefix variable names (default TRUE). remove_z_suffix Logical; remove z-score suffix variable names (default TRUE). use_title_case Logical; convert variable names title case (default TRUE). remove_underscores Logical; replace underscores spaces (default TRUE). adjust Character; method adjusting p-values. \"bonferroni\" \"none\" recommended. methods technically available stats::p.adjust(), may appropriate contexts (e.g., cross-validation). Default \"none\". using Bonferroni, consider alpha = 0.2 due conservative nature. alpha Numeric; significance threshold (default 0.05). using Bonferroni correction noisy heterogeneous treatment effect models, alpha = 0.2 may appropriate maintain reasonable statistical power. apply_adjustment Logical; TRUE, compute p-values apply adjustment method. FALSE, just document adjustment method without recomputing. Default TRUE adjust parameter provided, FALSE otherwise. seed Integer; base seed reproducible RATE computations (default 12345). use_evaluation_subset Logical; TRUE, use test indices qini_metadata available proper --sample evaluation (default TRUE). target Character vector; weighting schemes compute: \"AUTOC\", \"QINI\", c(\"AUTOC\", \"QINI\") (default). single target specified, table returned. q Numeric vector quantiles evaluate. Default seq(0.1, 1, = 0.1) matches GRF default. ... Additional arguments passed grf::rank_average_treatment_effect().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble RATE tables (AUTOC and QINI) — margot_rate","text":"target includes \"AUTOC\" \"QINI\", returns list elements: * rate_autoc: AUTOC RATE table * rate_qini: QINI RATE table single target specified, returns just table data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-compute RATEs for each outcome in a margot_causal_forest result — margot_rate_batch","title":"Batch-compute RATEs for each outcome in a margot_causal_forest result — margot_rate_batch","text":"replaces legacy internal RATE code function actually talks grf. flips CATE vector fly policy \"withhold_best\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-compute RATEs for each outcome in a margot_causal_forest result — margot_rate_batch","text":"","code":"margot_rate_batch(   model_results,   policy = c(\"treat_best\", \"withhold_best\"),   target = c(\"AUTOC\", \"QINI\"),   level = 0.95,   round_digits = 3,   model_prefix = \"model_\",   verbose = TRUE,   seed = 12345,   q = seq(0.1, 1, by = 0.1),   use_evaluation_subset = TRUE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-compute RATEs for each outcome in a margot_causal_forest result — margot_rate_batch","text":"model_results List returned margot_causal_forest(), containing results full_models. policy Character; either \"treat_best\" (default) \"withhold_best\". target Character; weighting scheme: \"AUTOC\" (default) \"QINI\". level Numeric; Wald confidence level (default 0.95). round_digits Integer; decimal places keep (default 3). model_prefix Character; common prefix model names (default \"model_\"). verbose Logical; print progress cli (default TRUE). seed Integer; base seed reproducible RATE computations (default 12345). q Numeric vector quantiles evaluate. Default seq(0.1, 1, = 0.1) matches GRF default. use_evaluation_subset Logical; TRUE, use test indices qini_metadata available proper --sample evaluation (default TRUE). ... Additional arguments passed compute_rate_on_demand() ultimately grf::rank_average_treatment_effect().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"Performs uncorrelated sequential cross-validation test treatment effect heterogeneity using approach recommended grf package (Wager 2024). method provides robust statistical testing avoids overfitting using sequential, non-overlapping training sets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"","code":"margot_rate_cv(   model_results,   num_folds = 5,   target = c(\"AUTOC\", \"QINI\"),   model_names = NULL,   use_full_data = TRUE,   seed = 12345,   verbose = TRUE,   parallel = FALSE,   n_cores = future::availableCores() - 1,   future_globals_maxSize = 22,   alpha = 0.05,   adjust = \"none\",   label_mapping = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"model_results Output `margot_causal_forest()` `margot_flip_forests()` num_folds Integer. Number cross-validation folds (default 5). Must least 3. target Character vector. RATE targets test: \"AUTOC\", \"QINI\", c(\"AUTOC\", \"QINI\") (default). specified, results combined adjusted p-values accounting testing metrics. model_names Character vector. Specific models test (default NULL tests ) use_full_data Logical. TRUE data available, refit forests full data rather using training split (default TRUE) seed Integer NULL. Random seed reproducibility. NULL, defaults 12345 verbose Logical. Print progress messages (default TRUE) parallel Logical. Use parallel processing multiple models (default FALSE). Note: Parallel processing requires margot package installed (just loaded devtools::load_all()). package installed, function fall back sequential processing warning. n_cores Integer. Number cores parallel processing parallel = TRUE (default cores - 1) future_globals_maxSize Numeric. Maximum allowed size exporting globals parallel workers GiB. Default 22. Set Inf disable limit. alpha Numeric. Significance level hypothesis tests (default 0.05). using Bonferroni correction, consider alpha = 0.2 due conservative nature. adjust Character. Multiple testing adjustment method. \"bonferroni\" \"none\" valid cross-validation due martingale aggregation method. Default \"none\". methods like BH//FDR statistically appropriate CV aggregation. label_mapping Optional named list custom label mappings. Keys model names (without \"model_\" prefix), values desired display labels. ... Additional arguments passed grf::causal_forest","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"list containing: cv_results Data frame CV test results model interpretation Character string interpreting results significant_models Character vector models significant heterogeneity tables List formatted tables similar margot_rate() output (rate_autoc, rate_qini) method_details List details CV procedure","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"function implements sequential cross-validation approach Wager (2024) Nie & Wager (2020). method: - Splits data K folds - Trains folds 1 k-1, tests fold k - Aggregates t-statistics using martingale property - Provides valid p-values heterogeneity testing null hypothesis treatment effect heterogeneity (individuals treatment effect). ## Multiple Testing Correction Due martingale aggregation method used CV, Bonferroni correction correction statistically valid. Methods like Benjamini-Hochberg (BH) false discovery rate (FDR) control appropriate assume independent p-values, violated sequential CV structure. Bonferroni correction conservative, especially noisy heterogeneous treatment effect models. recommend using alpha = 0.2 applying Bonferroni correction maintain reasonable statistical power. memory efficiency large model objects, function pre-extracts necessary data model parallel processing. However, parallel processing currently experimental disabled default due potential memory issues large model objects. want try parallel processing, set parallel = TRUE consider increasing future.globals.maxSize option : options(future.globals.maxSize = 15 * 1024^3) # 15 GB","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"Wager, S. (2024). Sequential validation heterogeneous treatment effects. arXiv preprint arXiv:2401.06818. Nie, X., & Wager, S. (2021). Quasi-oracle estimation heterogeneous treatment effects. Biometrika, 108(2), 299-319.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-Validation Test for Treatment Effect Heterogeneity — margot_rate_cv","text":"","code":"if (FALSE) { # \\dontrun{ # Run causal forest cf_results <- margot_causal_forest(   data = mydata,   outcome_vars = c(\"outcome1\", \"outcome2\"),   covariates = covariates,   W = treatment,   save_data = TRUE # Important for CV )  # Test for heterogeneity with cross-validation (both targets by default) cv_results <- margot_rate_cv(   model_results = cf_results,   num_folds = 5,   alpha = 0.2, # recommended with Bonferroni   adjust = \"bonferroni\" )  # With custom labels label_mapping <- list(   \"model_happiness\" = \"Happiness\",   \"model_depression\" = \"Depression\" ) cv_results <- margot_rate_cv(   model_results = cf_results,   label_mapping = label_mapping )  # Test single target only cv_results_autoc <- margot_rate_cv(   model_results = cf_results,   target = \"AUTOC\" )  # View results cat(cv_results$interpretation)  # Access formatted tables (similar to margot_rate output) cv_results$tables$rate_autoc # AUTOC table cv_results$tables$rate_qini # QINI table  # Get detailed interpretation with tables (similar to margot_interpret_rate) detailed_results <- margot_interpret_rate_cv(cv_results) cat(detailed_results$interpretation)  # View individual target interpretations cat(detailed_results$autoc_results) cat(detailed_results$qini_results)  # Comparison between AUTOC and QINI if (!is.null(detailed_results$comparison)) {   cat(detailed_results$comparison) }  # Create visualization plot <- margot_plot_cv_results(cv_results) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_resistance.html","id":null,"dir":"Reference","previous_headings":"","what":"RATE on “resistance” (–τ̂), robust to old/new GRF APIs — margot_rate_resistance","title":"RATE on “resistance” (–τ̂), robust to old/new GRF APIs — margot_rate_resistance","text":"RATE “resistance” (–τ̂), robust old/new GRF APIs","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_resistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RATE on “resistance” (–τ̂), robust to old/new GRF APIs — margot_rate_resistance","text":"","code":"margot_rate_resistance(model_results, round_digits = 3, ...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_resistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RATE on “resistance” (–τ̂), robust to old/new GRF APIs — margot_rate_resistance","text":"model_results list `margot_causal_forest()`, ** `$results`. round_digits integer; decimals keep. ... extra args `grf::rank_average_treatment_effect()`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate_resistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RATE on “resistance” (–τ̂), robust to old/new GRF APIs — margot_rate_resistance","text":"tibble(model, outcome, estimate, variance, 2.5","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"function allows recalculation policy trees using custom covariate sets. provides flexibility explore different covariate specifications policy tree estimation maintaining original causal forest results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"","code":"margot_recalculate_policy_trees(   model_results,   outcomes_to_recalculate = NULL,   custom_covariates = NULL,   exclude_covariates = NULL,   covariate_mode = c(\"original\", \"custom\", \"add\", \"all\"),   model_prefix = \"model_\",   verbose = TRUE,   parallel = FALSE,   n_cores = future::availableCores() - 1,   seed = 12345,   tree_method = c(\"policytree\", \"fastpolicytree\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"model_results list containing model results margot_causal_forest(). outcomes_to_recalculate Character vector outcome names recalculate. NULL (default), recalculates models marked needing recalculation. custom_covariates Character vector covariate names use policy trees. NULL, uses original top variables model. exclude_covariates Character vector covariate names patterns exclude. Supports exact matches regex patterns (e.g., \"^t0_log_\" excludes variables starting \"t0_log_\"). covariate_mode Character string specifying handle covariates: \"original\"Use original top variables model (default) \"custom\"Use specified custom_covariates \"add\"Add custom_covariates existing top variables \"\"Use available covariates model_prefix Character string prefix model names. Default \"model_\". verbose Logical indicating whether display messages. Default TRUE. parallel Logical indicating whether use parallel processing. Default FALSE. n_cores Number cores parallel processing. Default availableCores() - 1. seed Random seed reproducibility. Default NULL. tree_method Character string specifying method use policy tree computation: \"policytree\"Use policytree package (default) \"fastpolicytree\"Use fastpolicytree package (10x faster)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"modified copy model_results recalculated policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"function useful : Exploring sensitivity policy recommendations covariate selection Excluding covariates measurement error concerns Using domain knowledge select policy-relevant covariates Testing robustness policy tree findings function preserves original model results updates: policy_tree_depth_1: Single-split policy tree policy_tree_depth_2: Two-split policy tree (≥2 covariates) plot_data: Data visualization Metadata covariates used","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recalculate Policy Trees with Custom Covariates — margot_recalculate_policy_trees","text":"","code":"if (FALSE) { # \\dontrun{ # recalculate with custom covariates results_custom <- margot_recalculate_policy_trees(   model_results,   custom_covariates = c(\"age\", \"gender\", \"income\"),   covariate_mode = \"custom\" )  # exclude measurement error variables results_clean <- margot_recalculate_policy_trees(   model_results,   exclude_covariates = c(\"bmi\", \"^log_\"),   covariate_mode = \"original\" )  # use all covariates results_all <- margot_recalculate_policy_trees(   model_results,   covariate_mode = \"all\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":null,"dir":"Reference","previous_headings":"","what":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"function allows recomputation average treatment effects (ATEs) fitted causal forest models using different target samples estimation methods without refitting models. useful sensitivity analysis exploring treatment effects different subpopulations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"","code":"margot_recompute_ate(   causal_forest_output,   target_sample = c(\"all\", \"treated\", \"control\", \"overlap\"),   method = \"AIPW\",   scale = c(\"RD\", \"RR\"),   delta = 1,   sd = 1,   subset = NULL,   respect_train_test_split = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"causal_forest_output Output `margot_causal_forest()` `margot_causal_forest_parallel()`. Must run `save_models = TRUE`. target_sample Character string specifying target sample ATE estimation. Options : \"\" - units (default original models) \"treated\" - treated units (ATT) \"control\" - control units (ATC) \"overlap\" - Units propensity scores away 0 1 method Character string specifying estimation method. Currently \"AIPW\" (Augmented Inverse Probability Weighting) supported grf. scale Character string specifying scale estimate. Either \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". delta hypothesized increase outcome RD scale E-value calculations. Default 1. sd standard deviation outcome RD scale E-value calculations. Default 1. subset Optional logical vector subsetting data. Default NULL. respect_train_test_split Logical. TRUE original analysis used use_train_test_split=TRUE, computes treatment effects test set consistency policy evaluation. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"list structure original causal forest output, : Updated `ate` values model's results Recomputed `custom_table` new E-values renamed effect columns (ATE/ATT/ATC/ATO) Updated `combined_table` new estimates new element `ate_params` documenting parameters used","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"function requires original causal forest models saved (using `save_models = TRUE`). extracts fitted models recomputes ATEs using specified target sample. different target samples represent different estimands: - \"\": Average Treatment Effect (ATE) entire population - \"treated\": Average Treatment Effect Treated (ATT) - \"control\": Average Treatment Effect Control (ATC) - \"overlap\": ATE units good overlap propensity scores","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recompute Average Treatment Effects with Different Target Samples — margot_recompute_ate","text":"","code":"if (FALSE) { # \\dontrun{ # First fit causal forest models with saved models cf_results <- margot_causal_forest(   data = mydata,   outcome_vars = outcomes,   covariates = X,   save_models = TRUE )  # Later, get ATEs for different target populations ate_overlap <- margot_recompute_ate(cf_results, target_sample = \"overlap\") ate_treated <- margot_recompute_ate(cf_results, target_sample = \"treated\")  # Compare estimates cf_results$combined_table # Original (all units) ate_overlap$combined_table # Overlap units only ate_treated$combined_table # Treated units only } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Recompute ATEs for Multiple Target Samples — margot_recompute_ate_batch","title":"Batch Recompute ATEs for Multiple Target Samples — margot_recompute_ate_batch","text":"Convenience function recompute ATEs multiple target samples , returning comparison table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Recompute ATEs for Multiple Target Samples — margot_recompute_ate_batch","text":"","code":"margot_recompute_ate_batch(   causal_forest_output,   target_samples = c(\"all\", \"treated\", \"control\", \"overlap\"),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Recompute ATEs for Multiple Target Samples — margot_recompute_ate_batch","text":"causal_forest_output Output `margot_causal_forest()` saved models target_samples Character vector target samples compute. Default four: c(\"\", \"treated\", \"control\", \"overlap\") ... Additional arguments passed `margot_recompute_ate()`","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_ate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Recompute ATEs for Multiple Target Samples — margot_recompute_ate_batch","text":"list containing: `results` - Named list recomputed outputs target sample `comparison_table` - Data frame comparing ATEs across target samples `parameters` - Parameters used recomputation","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":null,"dir":"Reference","previous_headings":"","what":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"Recomputes QINI curves binary treatment causal forest models using Augmented Inverse Probability Weighted (AIPW) scores instead IPW scores. provides robust estimates, especially observational data treatment assignment may confounded.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"","code":"margot_recompute_qini_aipw(   margot_result,   model_name = NULL,   method = c(\"regression_forest\", \"grf_scores\"),   n.trees = 2000,   treatment_var = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"margot_result list returned margot_causal_forest() save_models = TRUE save_data = TRUE. model_name Character string specifying model recompute. NULL (default), models recomputed. method Character string specifying method estimate mu.hat. Options \"regression_forest\" (default) \"grf_scores\". n.trees Number trees use regression forests method = \"regression_forest\". Default 2000. treatment_var Character string specifying treatment variable name. NULL, function try detect automatically. verbose Logical. TRUE, prints progress messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"modified version input margot_result updated QINI   curves based AIPW scores. structure remains compatible   existing plotting interpretation functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"AIPW scores provide double robustness: estimator consistent either propensity score model outcome model correctly specified. particularly valuable observational studies. function supports two methods estimating conditional means (mu.hat): regression_forest: Trains separate regression forests     control treated units estimate E[Y|W=0,X] E[Y|W=1,X]. grf_scores: Uses doubly robust scores grf's     internal computations (available).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_aipw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recompute QINI Curves Using AIPW Scores — margot_recompute_qini_aipw","text":"","code":"if (FALSE) { # \\dontrun{ # Recompute QINI curves with AIPW for all models results_aipw <- margot_recompute_qini_aipw(margot_results)  # Recompute for a specific model results_aipw <- margot_recompute_qini_aipw(   margot_results,   model_name = \"model_anxiety\" )  # Use with plotting functions as normal margot_plot_qini(results_aipw, \"model_anxiety\")  # Specify treatment variable if auto-detection fails results_aipw <- margot_recompute_qini_aipw(   margot_results,   treatment_var = \"t1_treatment\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":null,"dir":"Reference","previous_headings":"","what":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"Recomputes QINI curves binary treatment causal forest models using Inverse Probability Weighted (IPW) scores. simpler alternative margot_recompute_qini_aipw() uses IPW scores .","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"","code":"margot_recompute_qini_ipw(   margot_result,   model_name = NULL,   treatment_var = NULL,   W.hat = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"margot_result list returned margot_causal_forest(). model_name Character string specifying model recompute. NULL (default), models recomputed. treatment_var Character string specifying treatment variable name. NULL, function try detect automatically. W.hat Numeric vector propensity scores. NULL, use propensity scores model estimate . verbose Logical. TRUE, prints progress messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"modified version input margot_result updated QINI   curves based IPW scores. structure remains compatible   existing plotting interpretation functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"function provides way recompute QINI curves using modern maq API IPW scores. useful : Debugging QINI curve differences Faster computation compared AIPW Ensuring consistency across different model computations function handles various data storage patterns including models stored results list separate full_models list.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recompute_qini_ipw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recompute QINI Curves Using IPW Scores — margot_recompute_qini_ipw","text":"","code":"if (FALSE) { # \\dontrun{ # Recompute QINI curves with IPW for all models results_ipw <- margot_recompute_qini_ipw(margot_results)  # Recompute for a specific model results_ipw <- margot_recompute_qini_ipw(   margot_results,   model_name = \"model_anxiety\" )  # Specify treatment variable if auto-detection fails results_ipw <- margot_recompute_qini_ipw(   margot_results,   treatment_var = \"t1_treatment\" )  # Compare with AIPW results results_aipw <- margot_recompute_qini_aipw(margot_results) # Plot both for comparison } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_report_consensus_policy_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Policy Value for Consensus Trees — margot_report_consensus_policy_value","title":"Report Policy Value for Consensus Trees — margot_report_consensus_policy_value","text":"Computes reports much better consensus policy trees perform () treat-(ATE baseline) (b) treat-none (universal control), 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_consensus_policy_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Policy Value for Consensus Trees — margot_report_consensus_policy_value","text":"","code":"margot_report_consensus_policy_value(   object,   model_names = NULL,   depths = c(1L, 2L),   R = 499L,   seed = 42L,   ci_level = 0.95,   include_treated_only = FALSE,   label_mapping = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_report_consensus_policy_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Policy Value for Consensus Trees — margot_report_consensus_policy_value","text":"object Object class \"margot_stability_policy_tree\" produced [margot_policy_tree_stability()]. Must contain consensus policy trees `policy_tree_depth_1` /`policy_tree_depth_2`, plus `plot_data` `dr_scores`/`dr_scores_flipped`. model_names Optional character vector model names include (without `model_` prefix). Default: . depths Integer vector depths evaluate (default `c(1, 2)`). R Integer ≥ 199; number bootstrap replicates (default 499). seed Integer NULL; RNG seed reproducibility (default 42). ci_level Confidence level intervals (default 0.95). verbose Logical; print progress (default TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_consensus_policy_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Policy Value for Consensus Trees — margot_report_consensus_policy_value","text":"data.frame one row per model × depth × contrast containing   estimate, standard error, confidence interval.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_lmtp_positivity.html","id":null,"dir":"Reference","previous_headings":"","what":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","title":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","text":"Builds manuscript-ready positivity diagnostics (overall -wave) optional density-ratio grid selected outcome set shifts.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_lmtp_positivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","text":"","code":"margot_report_lmtp_positivity(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   digits = 2,   include_plots = TRUE,   ymax = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_report_lmtp_positivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","text":"x LMTP run output `$models` (e.g., result `margot_lmtp()`), list compatible `margot_lmtp_positivity()`. outcome Character; outcome name report (required). shifts Optional character vector shifts/policies include; accepts full names (`t5_pwi_z_shift_up`) cleaned (`shift_up`). NULL, includes available shifts outcome. label_mapping Optional named list prettify estimand labels via `transform_label()`; missing, minimal cleaning applied. digits Integer rounding numeric outputs. include_plots Logical; TRUE, returns `overlap_grid`. ymax Optional numeric; supplied, sets common y-limit histogram counts density-ratio grid; otherwise common limit inferred.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_lmtp_positivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","text":"list elements:   - overall: tibble Estimand, N, Prop_zero, ESS, ESS/N   - by_wave_ess_frac: tibble wide (Wave x Estimand) ESS/N   - by_wave_ess: tibble wide (Wave x Estimand) ESS   - flags: tibble positivity flags (ESS+/(N+) removed)   - overlap_grid: patchwork object (include_plots = TRUE)   - text_summary: brief prose summary","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_lmtp_positivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"One-stop LMTP positivity/overlap reporting for an analysis — margot_report_lmtp_positivity","text":"- Computes summaries via `margot_lmtp_positivity()` - Produces overall table (Estimand, N, Prop_zero, ESS, ESS/N) - Produces combined -wave tables (ESS/N wave; ESS wave) - Optionally returns wave--shift density-ratio grid using   `margot_lmtp_overlap()` `margot_lmtp_overlap_plot_grid()`   harmonised user-specified histogram heights","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","title":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","text":"convenience wrapper makes complete, end--end policy report one line. : 1. optionally runs bootstrap test selected outcomes (via    `margot_add_policy_batch()`), 2. pulls depth‑specific results `margot_policy_summary()`, 3. returns tidy summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","text":"","code":"margot_report_policy(   cf_out,   keep = NULL,   depth = 2L,   adjust = \"bonferroni\",   alpha = 0.05,   R = 999L,   seed = 2025L )"},{"path":"https://go-bayes.github.io/margot/reference/margot_report_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","text":"cf_out **margot** result list. keep character. outcomes include; `NULL` keeps . depth integer. policy-tree depth. default 2. adjust character. multiplicity adjustment method *p*-values. default \"bonferroni\". alpha numeric. significance level pass/fail flag. default 0.05. R, seed bootstrap settings tests need (re)run.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","text":"tibble. one row per outcome adjusted *p*-values pass flag.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_report_policy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summarise policy tests (add if absent, adjust, return tidy table) — margot_report_policy","text":"nothing printed; decide tibble (view, knit, etc.).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rescue_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process models to recover Qini curves via propensity trimming — margot_rescue_qini","title":"Post-process models to recover Qini curves via propensity trimming — margot_rescue_qini","text":"model results list whose qini_objects null empty, function applies overlap restriction estimated\\ n#' propensity scores recomputes ‑sample Qini curves trimmed data, without touching original ATE forest objects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rescue_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process models to recover Qini curves via propensity trimming — margot_rescue_qini","text":"","code":"margot_rescue_qini(   model_results,   propensity_bounds = c(0.05, 0.95),   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_rescue_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process models to recover Qini curves via propensity trimming — margot_rescue_qini","text":"model_results list margot_causal_forest() save_models = TRUE save_data = TRUE propensity_bounds numeric length‑2 vector lower/upper bounds forest$W.hat (default c(0.05, 0.95)) verbose logical; TRUE prints progress messages (default TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rescue_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process models to recover Qini curves via propensity trimming — margot_rescue_qini","text":"modified model_results rescued qini_data qini_objects   models initially empty gain","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_resort_contrast_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","title":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","text":"function recomputes LMTP contrasts desired ordering calling lmtp::lmtp_contrast() models specified order, regenerating evaluation tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_resort_contrast_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","text":"","code":"margot_resort_contrast_lmtp(   lmtp_output,   contrast_order = NULL,   contrast_type = c(\"pairwise\", \"null\"),   contrast_scale = c(\"additive\", \"rr\", \"or\"),   specific_contrasts = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_resort_contrast_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","text":"lmtp_output Output margot_lmtp() function containing models, contrasts, tables contrast_order character vector specifying desired order shift names (e.g., c(\"convert\", \"religious\", \"done\", \"secular\", \"null\")) contrast_type Type contrasts compute: \"pairwise\" \"null\". Default \"pairwise\". contrast_scale Scale contrasts: \"additive\", \"rr\", \"\". Default \"additive\". specific_contrasts Optional list specific contrasts compute. element character vector length 2 shift names (e.g., list(c(\"convert\", \"religious\")))","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_resort_contrast_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","text":"modified version lmtp_output reordered contrasts regenerated tables","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_resort_contrast_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resort/Reorder LMTP Contrasts by Recomputing from Models — margot_resort_contrast_lmtp","text":"","code":"if (FALSE) { # \\dontrun{ # reorder all contrasts with new preference order result_reordered <- margot_resort_contrast_lmtp(   models_6_cp,   contrast_order = c(\"convert\", \"religious\", \"done\", \"secular\", \"null\") )  # compute specific contrasts only result_specific <- margot_resort_contrast_lmtp(   models_6_cp,   specific_contrasts = list(     c(\"convert\", \"religious\"),     c(\"done\", \"religious\"),     c(\"secular\", \"religious\")   ) ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_reversed_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Update label map by marking reversed outcomes — margot_reversed_labels","title":"Update label map by marking reversed outcomes — margot_reversed_labels","text":"Helper tag reversed outcomes prepending \"(reduced)\" labels. function now handles new \"_r\" suffix convention flipped models.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_reversed_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update label map by marking reversed outcomes — margot_reversed_labels","text":"","code":"margot_reversed_labels(   label_map,   reversed,   use_r_suffix = TRUE,   remove_original = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_reversed_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update label map by marking reversed outcomes — margot_reversed_labels","text":"label_map named list mapping variable names human-readable labels reversed character vector variable names flipped use_r_suffix logical; TRUE (default), creates new entries \"_r\" suffix flipped outcomes. FALSE, uses old behavior modifying -place. remove_original logical; TRUE use_r_suffix TRUE, removes original (non-flipped) entries label map. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_reversed_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update label map by marking reversed outcomes — margot_reversed_labels","text":"named list labels, \"(reduced)\" prepended specified entries","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_reversed_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update label map by marking reversed outcomes — margot_reversed_labels","text":"","code":"label_mapping_all <- list(   t2_log_hours_exercise_z        = \"Hours of Exercise (log)\",   t2_hlth_fatigue_z              = \"Fatigue\",   t2_kessler_latent_anxiety_z    = \"Anxiety\",   t2_kessler_latent_depression_z = \"Depression\",   t2_rumination_z                = \"Rumination\",   t2_foregiveness_z              = \"Forgiveness\",   t2_perfectionism_z             = \"Perfectionism\",   t2_self_esteem_z               = \"Self Esteem\",   t2_gratitude_z                 = \"Gratitude\",   t2_lifesat_z                   = \"Life Satisfaction\",   t2_meaning_purpose_z           = \"Meaning: Purpose\",   t2_meaning_sense_z             = \"Meaning: Sense\",   t2_pwi_z                       = \"Personal Well-being Index\",   t2_belong_z                    = \"Social Belonging\",   t2_neighbourhood_community_z   = \"Neighbourhood Community\",   t2_support_z                   = \"Social Support\" )  flip_outcomes <- c(   \"t2_kessler_latent_anxiety_z\",   \"t2_kessler_latent_depression_z\",   \"t2_rumination_z\" )  # new behavior (default): creates entries with _r suffix label_mapping_new <- margot_reversed_labels(label_mapping_all, flip_outcomes) print(label_mapping_new[c(\"t2_kessler_latent_anxiety_z\", \"t2_kessler_latent_anxiety_z_r\")]) #> $t2_kessler_latent_anxiety_z #> [1] \"Anxiety\" #>  #> $t2_kessler_latent_anxiety_z_r #> [1] \"(reduced) Anxiety\" #>  #> $t2_kessler_latent_anxiety_z #> [1] \"Anxiety\" #> $t2_kessler_latent_anxiety_z_r #> [1] \"(reduced) Anxiety\"  # old behavior: modifies in place label_mapping_old <- margot_reversed_labels(label_mapping_all, flip_outcomes, use_r_suffix = FALSE) print(label_mapping_old[[\"t2_kessler_latent_anxiety_z\"]]) #> [1] \"(reduced) Anxiety\" #> [1] \"(reduced) Anxiety\"  # remove original entries label_mapping_clean <- margot_reversed_labels(label_mapping_all, flip_outcomes, remove_original = TRUE) # original anxiety entry removed, only _r version remains"},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"function runs multiple GRF models specified outcome variables, calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections, depth-2 policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"","code":"margot_run_models_grf(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 15.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. tau_hats list tau.hat estimates model. tau_hat_plots list ggplot objects tau.hat histograms. rate_results list RATE results (compute_rate TRUE). dr_scores list double robust scores model. policy_trees list policy trees depth 1 model. not_missing vector indices complete cases. variable_importance_rankings list top n variables importance model, n specified top_n_vars. best_linear_projections list best linear projection results using top n variables model, n specified top_n_vars. policy_trees_depth_2 list policy trees depth 2 using top n variables model, n specified top_n_vars. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot Plot as PNG — margot_save_png","title":"Save Margot Plot as PNG — margot_save_png","text":"function takes output either `margot_plot()` `margot_plot_multi_arm()` saves plot PNG image using `ggsave()`. function saves plot object PNG image, supporting multiple plotting systems including ggplot2, base R plots, plotting libraries.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot Plot as PNG — margot_save_png","text":"","code":"margot_save_png(   plot_output,   prefix = NULL,   base_filename = \"plot\",   save_path = here::here(push_mods),   width = 12,   height = 12,   dpi = 500 )  margot_save_png(   plot_output,   prefix = NULL,   base_filename = \"plot\",   save_path = here::here(push_mods),   width = 12,   height = 12,   dpi = 500 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot Plot as PNG — margot_save_png","text":"plot_output Either plot object directly, list containing plot element. Supported plot types include ggplot objects, base R plot objects, others. prefix Character string. prefix add filename. Default NULL. base_filename Character string. base name saved file. Default \"plot\". save_path Character string. directory path image saved. Default ::(\"push_mods\"). width Numeric. width saved image inches. Default 16. height Numeric. height saved image inches. Default 8. dpi Numeric. resolution saved image dots per inch. Default 500.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot Plot as PNG — margot_save_png","text":"Invisibly returns path saved file. Invisibly returns path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Margot Plot as PNG — margot_save_png","text":"function uses `ggsave()` save Margot plot PNG image. save_path directory exist, created. final filename constructed : `prefix_base_filename.png`. function handles different types plot objects saves PNG images: - ggplot2 objects: Uses ggsave() - plot types: Uses png() dev.() final filename constructed : `prefix_base_filename.png`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Margot Plot as PNG — margot_save_png","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have already run margot_plot() or margot_plot_multi_arm() plot_result <- margot_plot(your_data, your_options)  # Save the plot as PNG margot_save_png(   plot_result,   prefix = \"study1\",   base_filename = \"treatment_effects\",   save_path = here::here(\"output\", \"plots\") ) } # }  if (FALSE) { # \\dontrun{ # For a ggplot object plot_result <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() margot_save_png(plot_result, prefix = \"study1\", base_filename = \"scatter\")  # For a base R plot plot_result <- plot(mtcars$mpg, mtcars$wt) margot_save_png(plot_result, prefix = \"study1\", base_filename = \"scatter\")  # For a list containing a plot plot_list <- list(plot = ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point()) margot_save_png(plot_list, prefix = \"study1\", base_filename = \"scatter\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_screen_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen margot models by p-value tests with robust handling of missing components — margot_screen_models","title":"Screen margot models by p-value tests with robust handling of missing components — margot_screen_models","text":"Screen margot models p-value tests robust handling missing components","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_screen_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen margot models by p-value tests with robust handling of missing components — margot_screen_models","text":"","code":"margot_screen_models(   model_results,   rule = c(\"ate_or_rate\", \"ate\", \"rate\"),   target = c(\"AUTOC\", \"QINI\", \"either\", \"both\"),   alpha = 0.05,   adjust = c(\"none\", \"bonferroni\", \"holm\", \"BH\", \"fdr\", \"BY\"),   use_boot = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_screen_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen margot models by p-value tests with robust handling of missing components — margot_screen_models","text":"model_results list. output `margot_causal_forest()`, containing $results rule character; choose among \"ate_or_rate\", \"ate\", \"rate\" target character; one \"AUTOC\", \"QINI\", \"either\", \"\" alpha numeric; significance threshold adjustment adjust character; p.adjust method: \"none\", \"bonferroni\", \"holm\", \"BH\", \"fdr\", \"\" use_boot logical; TRUE, use bootstrap tests available. Default = FALSE","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_screen_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen margot models by p-value tests with robust handling of missing components — margot_screen_models","text":"tibble outcomes, raw adjusted p-values, 'keep' flag","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"`margot_simulate()` draws baseline covariates (`B`), time-varying covariates (`L`), exposures (``), lead outcomes (`Y`) synthetic panel study.  Monotone attrition can depend past exposure /latent shared frailty, optional indicator column records whether unit remains uncensored every wave.  simulator supports heterogeneous treatment effects, feedback previous outcomes future exposures, marginal item missingness.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"","code":"margot_simulate(   n,   waves,   exposures = NULL,   outcomes = NULL,   p_covars = 20,   censoring = list(rate = 0.25),   item_missing_rate = 0,   exposure_outcome = 0.5,   y_feedback = 0.4,   positivity = \"good\",   outcome_type = NULL,   wide = TRUE,   seed = NULL,   params = list(),   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"n Number individuals. waves Number follow-waves (outcomes produced wave waves + 1). exposures Named list describing exposure.  Every element must contain type field (`\"binary\"` `\"normal\"`). Optional elements: het (baseline modifiers) lag_Y = TRUE enable outcome--exposure feedback. outcomes Named list describing outcomes.  Defaults single normal outcome called `\"Y\"`. p_covars Number baseline (`B`) covariates. censoring List controlling attrition.  Must include rate; optional logical flags exposure_dependence, latent_dependence, numeric latent_rho, logical indicator append tX_not_censored columns. item_missing_rate MCAR probability observed value replaced NA. exposure_outcome Coefficient exposure → outcome path. y_feedback Coefficient lagged outcome feedback exposure lists lag_Y = TRUE. positivity `\"good\"`, `\"poor\"`, numeric probability (0, 1) governing baseline exposure prevalence. outcome_type Shortcut single outcome: `\"continuous\"` (default) `\"binary\"`.  Ignored outcomes supplied. wide TRUE (default) return wide data set; otherwise long format. seed Integer seed reproducibility. params Named list scalar coefficients (see ). ... Deprecated arguments; ignored warning.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"`tibble` wide long form containing baseline `B`   variables, time-varying `L` covariates, `` exposures, optional   censoring indicators, lead outcomes `Y`.  object carries   attribute \"margot_meta\" matched call timestamp.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"default parameter set ","code":".default_sim_params()  ## $cens_exp_coef   0.4  ## $cens_latent_rho 0.5  ## $exp_intercept   -0.2  ## $exp_L1_coef     0.2  ## $out_B1_coef     0.1"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"the-params-argument","dir":"Reference","previous_headings":"","what":"The `params` argument","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"Supply named list override internal defaults given .default_sim_params().  Typical entries include cens_exp_coef, exp_L1_coef, out_B1_coef.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal exposures, outcomes, and covariates — margot_simulate","text":"","code":"## basic usage dat <- margot_simulate(n = 200, waves = 3, seed = 1) dplyr::glimpse(dat) #> Rows: 200 #> Columns: 35 #> $ id    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1… #> $ B1    <dbl> 1.38717622, 0.30733801, 1.52385587, -1.45786586, -1.31218682, 0.… #> $ B2    <dbl> 0.56867050, 0.32317764, -0.79634791, -0.84417680, -0.02831455, -… #> $ B3    <dbl> 0.359327067, -0.498545661, 0.645835598, -1.284425798, 0.62591385… #> $ B4    <dbl> 1.13120902, 2.15236607, 0.50850055, -1.05442367, -0.39867018, 0.… #> $ B5    <dbl> -0.09360758, -0.65509314, -0.25503349, 0.02718249, 2.37682411, -… #> $ B6    <dbl> 1.3358744996, -0.9704755209, 0.3616893118, -1.4063023965, -0.931… #> $ B7    <dbl> -1.576558708, -0.088479569, 0.487995724, -2.264870579, 0.1313669… #> $ B8    <dbl> 1.20071079, -0.59614574, -1.04053816, 0.47034678, 0.56500777, 0.… #> $ B9    <dbl> 0.97922287, 0.42597734, -0.01367560, 0.58258505, -0.26852743, 2.… #> $ B10   <dbl> 1.19511520, 0.23398869, -0.57308037, -0.95525308, -0.34721398, 1… #> $ B11   <dbl> -0.61221854, -2.04242795, 1.02058737, -1.07656682, -1.29516511, … #> $ B12   <dbl> 0.53291378, 0.08565599, 0.03440012, -2.29850687, -1.24441193, 1.… #> $ B13   <dbl> -0.176066882, 0.742283929, 0.333243297, -1.440735602, 0.05931179… #> $ B14   <dbl> 1.93000559, 0.05657933, 0.40769632, -1.33184913, 0.05518891, -1.… #> $ B15   <dbl> -0.319607922, -0.445111940, 0.453195957, -2.113141884, 0.1863665… #> $ B16   <dbl> -0.51130370, -1.25585264, 1.82817341, 1.61178682, -0.04679639, -… #> $ B17   <dbl> 0.89312064, -0.01132154, 1.52172495, -0.22530871, -0.86537188, 0… #> $ B18   <dbl> -0.073517558, -1.502434951, 1.923492831, -0.785495001, -0.452210… #> $ B19   <dbl> -0.5040000, 1.3892949, 0.5235887, -1.2756173, -0.3453183, 0.9109… #> $ B20   <dbl> -0.3947381, 0.2234016, 0.7777960, -1.3440720, -0.2789659, 1.1170… #> $ t0_A1 <int> 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0… #> $ t1_L1 <dbl> -1.47983426, 1.02834657, -2.22105108, NA, -1.63855763, NA, 0.357… #> $ t1_L2 <dbl> -0.302092925, 0.517340829, -1.164086557, NA, 1.274679847, NA, -0… #> $ t1_L3 <dbl> -0.107179673, -0.298918555, 0.309770555, NA, 0.254681415, NA, 0.… #> $ t1_A1 <dbl> 0, 1, 0, NA, 1, NA, 1, 0, 1, 0, 0, NA, 1, NA, 1, NA, 1, 1, 1, 0,… #> $ t2_L1 <dbl> NA, NA, -0.7394305, NA, -1.5425303, NA, 0.3851541, -1.4544780, -… #> $ t2_L2 <dbl> NA, NA, 1.56739714, NA, -1.34127895, NA, -0.93517145, -0.0457230… #> $ t2_L3 <dbl> NA, NA, 0.97422723, NA, 1.33379026, NA, 0.27279618, 1.96492237, … #> $ t2_A1 <dbl> NA, NA, 0, NA, 1, NA, 0, 0, 0, 0, NA, NA, 1, NA, NA, NA, 0, 1, 1… #> $ t3_L1 <dbl> NA, NA, 1.28184341, NA, -1.36408357, NA, -0.03276689, -1.1094694… #> $ t3_L2 <dbl> NA, NA, 0.16440270, NA, 0.34927903, NA, 0.95314451, -2.22791423,… #> $ t3_L3 <dbl> NA, NA, 1.9731395, NA, -0.6404094, NA, -0.5885797, 1.2987237, NA… #> $ t3_A1 <dbl> NA, NA, 0, NA, 0, NA, 0, 1, NA, NA, NA, NA, 1, NA, NA, NA, NA, 0… #> $ t4_Y  <dbl> NA, NA, 0.7151895, NA, NA, NA, 0.3641293, -1.8084884, NA, NA, NA…  ## heterogeneous treatment effect with censoring indicator dat2 <- margot_simulate(   n = 800,   waves = 4,   exposures = list(     A1 = list(       type = \"binary\",       het  = list(modifier = \"B2\", coef = 0.6)     )   ),   censoring = list(     rate = 0.25, exposure_dependence = TRUE,     indicator = TRUE   ),   seed = 42 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"Creates consistent synthetic dataset testing development versions margot functions. Generates panel data known treatment effects enable validation causal inference methods.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"","code":"margot_simulate_test_data(   n = 5000,   k = 3,   p_covars = 20,   treatment_effects = list(Y1 = \"positive\", Y2 = \"negative\", Y3 = \"null\", Y4 =     \"heterogeneous\"),   missing_prop = 0.1,   binary_outcomes = c(FALSE, FALSE, FALSE, TRUE),   censoring_rate = 0.1,   seed = 2025 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"n Integer. Number individuals (default: 5000) k Integer. Number time points including baseline (default: 3) p_covars Integer. Number baseline covariates (default: 20) treatment_effects Named list specifying treatment effect patterns outcome. Options: \"positive\", \"negative\", \"null\", \"heterogeneous\". Default creates 4 outcomes different patterns. missing_prop Numeric. Proportion missing data introduce (default: 0.1) binary_outcomes Logical vector indicating outcomes binary (default: c(FALSE, FALSE, FALSE, TRUE)) censoring_rate Numeric. Rate censoring/attrition (default: 0.1) seed Integer. Random seed reproducibility (default: 2025)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"list containing: data Data frame variables wide format true_effects List true treatment effect functions metadata List generation parameters variable information","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"function creates: - Baseline covariates (B1-Bp) multivariate normal - Binary treatment () propensity depending covariates - Multiple outcomes (Y1-Y4) different treatment effect patterns:   - Y1: Positive homogeneous effect (ATE = 0.3)   - Y2: Negative homogeneous effect (ATE = -0.2)   - Y3: Null effect (ATE = 0)   - Y4: Strong heterogeneous effect based B1 B2 Treatment assignment depends B1 B2 create confounding. Missing data introduced randomly (MCAR) testing robustness.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Test Data for margot Development Functions — margot_simulate_test_data","text":"","code":"# Generate default test dataset test_data <- margot_simulate_test_data()  # Generate with more observations and covariates test_data_large <- margot_simulate_test_data(n = 10000, p_covars = 30)  # Generate with custom treatment effects test_data_custom <- margot_simulate_test_data(   treatment_effects = list(     Y1 = \"heterogeneous\",     Y2 = \"positive\",     Y3 = \"heterogeneous\"   ) )"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","title":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","text":"Convenience function generates test data creates flipped versions specified outcomes testing flip forest functionality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","text":"","code":"margot_simulate_test_data_flip(flip_outcomes = \"Y1\", ...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","text":"flip_outcomes Character vector outcome names flip (default: \"Y1\") ... Additional arguments passed margot_simulate_test_data()","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","text":"List structure margot_simulate_test_data() plus   flipped outcome columns (\"_r\" suffix)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_simulate_test_data_flip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Test Data with Flipped Outcomes — margot_simulate_test_data_flip","text":"","code":"# Generate test data with Y1 flipped test_data_flip <- margot_simulate_test_data_flip()  # Generate test data with Y1 and Y4 flipped test_data_flip_multi <- margot_simulate_test_data_flip(   flip_outcomes = c(\"Y1\", \"Y4\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the size of an R object in megabytes — margot_size","title":"Calculate the size of an R object in megabytes — margot_size","text":"function takes R object returns size megabytes (MB). useful understanding memory footprint large data structures complex objects R environment. now includes cli alerts improved user feedback.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the size of an R object in megabytes — margot_size","text":"","code":"margot_size(obj, name = \"Object\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the size of an R object in megabytes — margot_size","text":"obj R object whose size want measure name optional name object (default \"Object\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the size of an R object in megabytes — margot_size","text":"character string representing size object MB,         formatted two decimal places","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the size of an R object in megabytes — margot_size","text":"KEY MESSAGE: Monitoring object sizes crucial efficient memory       management, especially working large datasets complex       analyses. Use function keep track memory usage optimize       R code better performance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the size of an R object in megabytes — margot_size","text":"","code":"big_matrix <- matrix(rnorm(1e6), nrow = 1000) margot_size(big_matrix, \"Big Matrix\") #> ℹ Big Matrix size: 7.63 MB #> [1] \"7.63 MB\"  summary_tables <- list(table1 = data.frame(a = 1:1000, b = rnorm(1000))) margot_size(summary_tables, \"Summary Tables\") #> ℹ Summary Tables size: 0.01 MB #> [1] \"0.01 MB\""},{"path":"https://go-bayes.github.io/margot/reference/margot_stability_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnose Policy Tree Stability — margot_stability_diagnostics","title":"Diagnose Policy Tree Stability — margot_stability_diagnostics","text":"Comprehensive stability diagnostics policy trees, combining correlation analysis stability results provide actionable insights tree instability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_stability_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnose Policy Tree Stability — margot_stability_diagnostics","text":"","code":"margot_stability_diagnostics(   stability_results,   model_results,   model_name,   correlation_threshold = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_stability_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnose Policy Tree Stability — margot_stability_diagnostics","text":"stability_results Output margot_policy_tree_stability() model_results Original causal forest results model_name Model analyze correlation_threshold Threshold correlation analysis (default 0.5)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_stability_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnose Policy Tree Stability — margot_stability_diagnostics","text":"List containing diagnostic results recommendations","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process Subset Models for Causal Forests — margot_subset_batch","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"compared treatment effects across multiple subsets derived causal forest models (using grf package). subset, number participants, total sample size, corresponding percentage computed, describing composition targeted subpopulation. addition, subset plot, interpretation, transformed table generated summarise causal effect estimates. Note exploratory comparisons causal forest analyses interpreted caution, subsetting targeted subpopulations may yield unstable treatment effect estimates, typically indicated large standard errors wide confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"","code":"margot_subset_batch(   model_results,   X,   base_defaults = list(),   title = \"\",   label_mapping = NULL,   subsets,   debug = FALSE,   original_df = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"model_results Results causal forest model. X Covariate matrix. base_defaults list default plotting options. title character string main title plots. label_mapping named vector mapping variable names labels. subsets named list subset definitions. element list containing: var character string specifying variable subset . value value used define subset. operator (Optional) comparison operator (default \"==\"). subset_condition (Optional) pre-computed logical vector defining subset. description (Optional) character string describing subset. label (Optional) user-friendly label subset. missing, list name used. debug Logical; TRUE, prints debugging information. original_df Optional data frame containing original (non-transformed) data back-transformation. ... Additional arguments passed margot_plot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"list following elements: results list subset results, containing plot, interpretation, transformed table along sample statistics. summary data frame summarising sample size, total sample size, percentage subset. explanation character string providing comprehensive explanation subsetting process results model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"function extracts combines evaluation tables specified outcome variables model results, handling binary categorical exposure models. provides enhanced functionality creating analyzing subsets based various conditions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"","code":"margot_subset_model(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\",   contrast = NULL,   X = NULL,   subset_var = NULL,   subset_value = 1,   subset_operator = \"==\",   subset_description = NULL,   debug = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"model_results list model results `model_causal_forest` similar functions. outcome_vars Optional. character vector outcome variable names. NULL, function use models input. subset_condition logical vector indicating subset data use. Default NULL. Can generated using subset_var, subset_value, subset_operator parameters. scale character string indicating scale use. Default \"RD\". contrast categorical exposures, single character string specifying contrast extract. X Optional. feature matrix used original models. Required using subset_var. subset_var Optional. name variable use subsetting. subset_value Optional. value compare subsetting. Default 1. subset_operator Optional. operator use comparison (\"==\", \">\", \">=\", \"<\", \"<=\", \"!=\"). Default \"==\". subset_description Optional. description subset reporting. NULL, one generated. debug Logical. TRUE, print debug information. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"list containing: results data frame combining custom evaluation tables specified outcomes contrast. subset_condition logical vector used subsetting. subset_description description subset. subset_info Additional information subset, available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"function can used two ways: 1. providing pre-computed logical vector `subset_condition`. 2. providing variable name (`subset_var`), value (`subset_value`), operator (`subset_operator`)    generate subset condition automatically. categorical exposures, specify contrast parameter extract specific comparisons.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Basic subsetting with a pre-computed condition subset_condition_conservative <- X[, \"t0_political_conservative_z\"] > 1 model_subset_conservative <- margot_subset_model(   model_results = models_binary,   subset_condition = subset_condition_conservative,   debug = FALSE )  # Example 2: Using the built-in subsetting functionality model_subset_religious <- margot_subset_model(   model_results = models_binary,   X = X,   subset_var = \"t0_religion_bigger_denominations_not_rel_binary\",   subset_value = 1,   subset_description = \"Effects among religious participants\",   debug = TRUE )  # Example 3: For categorical exposures with specific contrast model_subset_gen_z <- margot_subset_model(   model_results = models_cat,   X = X,   subset_var = \"t0_gen_cohort_gen_Z_binary\",   subset_value = 1,   contrast = \"[6.0,7.0] - [1.0,5.0)\",   scale = \"RD\",   debug = FALSE )  # Example 4: Multiple outcome variables model_subset_boomers <- margot_subset_model(   model_results = models_binary,   outcome_vars = c(\"t2_wellbeing_z\", \"t2_depression_z\"),   X = X,   subset_var = \"t0_gen_cohort_gen_Boomers_binary\",   subset_value = 1,   subset_operator = \"==\",   subset_description = \"Effects among Baby Boomer participants\",   debug = TRUE )  # Example 5: More complex subsetting (multiple conditions) # Define a complex condition directly complex_condition <- X[, \"t0_political_conservative_z\"] > 1 & X[, \"t0_age_z\"] > -2 model_subset_complex <- margot_subset_model(   model_results = models_binary,   subset_condition = complex_condition,   subset_description = \"Conservative (>1 SD) and not very young (>-2 SD in age)\",   debug = FALSE ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function calculates new evaluation tables specified outcome variables using subset condition, combines single data frame. uses models generated `margot_run_models_grf` create tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"margot_subset_table_grf(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"model_results list model results `margot_run_models_grf`. outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. subset_condition logical vector indicating subset data use. Default NULL. scale character string indicating scale use `margot_model_evalue`. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"data frame combining custom evaluation tables specified subset condition.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function uses `margot_model_evalue` calculate evaluation metrics model subset data specified `subset_condition`. outcome_vars provided, attempt use outcome_vars model_results input (assuming output margot_run_models_grf). neither available, use models input.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"Ensure `model_results` list contains results specified `outcome_vars`, otherwise outcomes may omitted final table.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"if (FALSE) { # Assuming result_psychological_well_being is your results object from margot_run_models_grf subset_condition <- X[, \"t0_self_esteem_z\"] < 1 combined_table_subset <- margot_subset_table_grf(   model_results = result_psychological_well_being,   outcome_vars = NULL,   subset_condition = subset_condition,   scale = \"RD\" ) print(combined_table_subset) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summarise_all.html","id":null,"dir":"Reference","previous_headings":"","what":"summarise ate, rate and policy tests across all outcomes — margot_summarise_all","title":"summarise ate, rate and policy tests across all outcomes — margot_summarise_all","text":"pared‑back copy original (pre‑refactor) helper pulls key diagnostics – average treatment effect, two rate metrics (AUTOC & QINI) depth‑specific policy *p*‑value – every outcome object. returns tibble ready downstream plotting reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summarise_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarise ate, rate and policy tests across all outcomes — margot_summarise_all","text":"","code":"margot_summarise_all(   cf_out,   target = c(\"AUTOC\", \"QINI\", \"both\"),   adjust = c(\"bonferroni\", \"holm\", \"BH\", \"none\"),   alpha = 0.05 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summarise_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarise ate, rate and policy tests across all outcomes — margot_summarise_all","text":"cf_out margot result list. target character. keep rate metrics (`\"\"`, default) drop one: `\"AUTOC\"` `\"QINI\"`. adjust character. multiplicity adjustment method (see [stats::p.adjust()]). default \"bonferroni\". alpha numeric. confidence level rate intervals (default 0.05).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summarise_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarise ate, rate and policy tests across all outcomes — margot_summarise_all","text":"tibble. one row per outcome.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"function computes difference average gains integrated difference reference curve (maq object) comparison curve specified spend level. returns list formatted strings easy use Quarto markdown text.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"","code":"margot_summary_cate_difference_gain(   mc_result,   outcome_var,   reference_curve,   comparison_curve,   spend,   digits = 3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"mc_result list containing results margot_multi_arm_causal_forest(). outcome_var character string specifying name outcome variable. reference_curve character string specifying name reference Qini curve (e.g., \"baseline\"). comparison_curve character string specifying name comparison Qini curve (e.g., \"arm2\"). spend numeric value specifying spend level (0 1). digits integer specifying number decimal places round output. Default 3.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"list containing formatted strings use Quarto markdown text: diff_gain Formatted string difference gains int_diff Formatted string integrated difference summary summary sentence comparison","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming mc_result is the result of margot_multi_arm_causal_forest() result <- margot_summary_cate_difference_gain(mc_result,   outcome_var = \"model_Y\",   reference_curve = \"baseline\",   comparison_curve = \"arm2\",   spend = 0.3 ) # Use in text glue::glue(\"The difference in gains is {result$diff_gain}. {result$summary}\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Panel for Margot Study — margot_summary_panel","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"function creates summary tables panel study, including unique IDs wave, participant wave summary, grouped participant wave summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"","code":"margot_summary_panel(   data,   output_format = \"markdown\",   group_waves_at = 3,   id_col = \"id\",   wave_col = \"wave\",   year_measured_col = \"year_measured\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"data data frame containing panel study data. output_format Character string specifying output format: \"markdown\" (default) \"kable\". group_waves_at Numeric value specifying number waves start grouping (default 3). id_col Character string specifying name ID column (default \"id\"). wave_col Character string specifying name wave column (default \"wave\"). year_measured_col Character string specifying name year measured column (default \"year_measured\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"list containing three elements: unique_ids_by_wave, participant_wave_summary, participant_wave_summary_grouped.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'dat' is your dataset results <- margot_summary_panel(dat)  # Custom settings custom_results <- margot_summary_panel(   data = dat,   output_format = \"markdown\",   group_waves_at = 4,   id_col = \"participant_id\",   wave_col = \"survey_wave\",   year_measured_col = \"measurement_year\" )  # View results results$unique_ids_by_wave results$participant_wave_summary results$participant_wave_summary_grouped  # For markdown output cat(custom_results$unique_ids_by_wave) cat(custom_results$participant_wave_summary) cat(custom_results$participant_wave_summary_grouped) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary tables and plots for longitudinal data — margot_summary_tables","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"Generate summary tables plots longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"","code":"margot_summary_tables(   data,   baseline_wave,   exposure_waves,   outcome_wave,   name_exposure,   name_exposure_cat = NULL,   baseline_vars = NULL,   outcome_vars = NULL,   extra_vars = c(\"id\", \"wave\", \"year_measured\", \"not_lost\", \"sample_weights\"),   baseline_labels = NULL,   exposure_labels = NULL,   outcome_labels = NULL,   create_plots = FALSE,   plot_type = \"boxplot\",   show_progress = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"data data frame containing longitudinal data baseline_wave wave number baseline measurements exposure_waves vector wave numbers exposure measurements outcome_wave wave number outcome measurements name_exposure name exposure variable name_exposure_cat name categorical exposure variable (optional) baseline_vars vector baseline variable names outcome_vars vector outcome variable names extra_vars vector additional variable names (default: c(\"id\", \"wave\", \"year_measured\", \"not_lost\", \"sample_weights\")) baseline_labels named vector labels baseline variables (optional) exposure_labels named vector labels exposure variables (optional) outcome_labels named vector labels outcome variables (optional) create_plots Logical, whether create plots (default: FALSE) plot_type type plot create (\"boxplot\" \"density\", default: \"boxplot\") show_progress Logical, whether show progress bar (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"list containing summary tables, information, optional plots","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"margot_tab_lmtp(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"# Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_tab_lmtp(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) #> Error in eval(expr, envir, enclos): object 'contrast_hours_charity_z_null' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_table_consensus_policy_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Manuscript-ready table for consensus policy value — margot_table_consensus_policy_value","title":"Manuscript-ready table for consensus policy value — margot_table_consensus_policy_value","text":"Produces compact table (data.frame) summarizing consensus policy value model selected depth, relative treat-control-baselines, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_table_consensus_policy_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manuscript-ready table for consensus policy value — margot_table_consensus_policy_value","text":"","code":"margot_table_consensus_policy_value(   object,   model_names = NULL,   depth = 2L,   R = 499L,   seed = 42L,   ci_level = 0.95,   report_df = NULL,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_table_consensus_policy_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manuscript-ready table for consensus policy value — margot_table_consensus_policy_value","text":"object Stability result [margot_policy_tree_stability()]. model_names Optional outcomes include (without `model_`). depth Integer; default 2. R, seed, ci_level Passed [margot_report_consensus_policy_value()].","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_table_treated_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Condensed table: treated-only summary — margot_table_treated_only","title":"Condensed table: treated-only summary — margot_table_treated_only","text":"Produces one-row-per outcome × depth table focused treated-signal: average uplift among treated 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_table_treated_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condensed table: treated-only summary — margot_table_treated_only","text":"","code":"margot_table_treated_only(report_df, label_mapping = NULL, digits = 3)"},{"path":"https://go-bayes.github.io/margot/reference/margot_table_treated_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condensed table: treated-only summary — margot_table_treated_only","text":"report_df Data frame returned [margot_report_consensus_policy_value()], called `include_treated_only = TRUE`. label_mapping Optional named list outcome label mapping. digits Integer; rounding digits numeric columns (default 3).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_table_treated_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condensed table: treated-only summary — margot_table_treated_only","text":"condensed data frame columns:   outcome, depth, avg_uplift_treated, (optional) avg_uplift_treated_ci,   coverage_treated_","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"Reshapes long‑format transition frequency data frame wide‑format table totals, formats using markdown. Diagonal elements bolded highlight state stability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"","code":"margot_transition_table(   data,   state_var,   id_var,   wave_var,   waves = NULL,   state_names = NULL,   observed_var = NULL,   observed_val = 1,   table_name = \"transition_table\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"data data frame containing id, state, wave, (optionally) observed indicator. state_var name column indicating state wave. id_var name column identifying participant. wave_var name column indicating wave (numeric factor). waves optional numeric vector waves include (defaults present data). state_names optional character vector labels state. observed_var optional name column marking participants still observed. observed_val value observed_var denotes “observed” (default 1). table_name name output object (default \"transition_table\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"object class margot_transitions   tables, explanation, wave_info,   quarto_code helper.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"function first trims weights specified lower‐quantile threshold /specified upper‐quantile threshold, standardises (possibly trimmed) weights mean 1.  Missing values preserved.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"","code":"margot_trim_sample_weights(   weights_vec,   lower_quantile = NULL,   upper_quantile = 0.99 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"weights_vec Numeric vector sample weights.  Must positive NA. lower_quantile Numeric (0,1); weights quantile raised (“winsorised ”) lower quantile value.  NULL <= 0, lower‐end trimming skipped. upper_quantile Numeric (0,1); weights quantile lowered (“winsorised ”) upper quantile value.  NULL >= 1, upper‐end trimming skipped.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"numeric vector length weights_vec, extremes   winsorised rescaled mean 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"Trimming tails inverse-probability weights can mitigate influence implausibly small large weights, trading bit bias lower variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_trim_sample_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise and (optionally) trim sample weights at both ends — margot_trim_sample_weights","text":"","code":"set.seed(42) w <- c(rlnorm(90, 0, 0.5), runif(5, 5, 20), runif(5, 0, 0.01), NA) summary(w) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's  #>  0.001333  0.718449  1.071490  1.756801  1.440705 18.770846         1   # trim both lower 1% and upper 99%, then standardise w_both <- margot_trim_sample_weights(   w,   lower_quantile = 0.01,   upper_quantile = 0.99 ) #> Raised 1 weight(s) below the 1.0% quantile (threshold = 0.00286206). #> Lowered 1 weight(s) above the 99.0% quantile (threshold = 17.9478). summary(w_both) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's  #>  0.001637  0.410874  0.612776  1.000000  0.823926 10.264162         1   # only upper trim at 95th percentile w_up95 <- margot_trim_sample_weights(w, lower_quantile = NULL, upper_quantile = 0.95) #> Lowered 5 weight(s) above the 95.0% quantile (threshold = 3.42476). summary(w_up95) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's  #> 0.001099 0.592212 0.883222 1.000000 1.187563 2.823008        1   # only lower trim at 5th percentile w_low5 <- margot_trim_sample_weights(w, lower_quantile = 0.05, upper_quantile = NULL) #> Raised 5 weight(s) below the 5.0% quantile (threshold = 0.213166). summary(w_low5) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.1206  0.4066  0.6063  1.0000  0.8153 10.6220       1   # no trimming (both NULL), only standardise w_std <- margot_trim_sample_weights(w, lower_quantile = NULL, upper_quantile = NULL) summary(w_std) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's  #> 7.589e-04 4.090e-01 6.099e-01 1.000e+00 8.201e-01 1.068e+01         1"},{"path":"https://go-bayes.github.io/margot/reference/margot_view_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to view flipped contrasts — margot_view_contrasts","title":"Helper function to view flipped contrasts — margot_view_contrasts","text":"Helper function view flipped contrasts","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_view_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to view flipped contrasts — margot_view_contrasts","text":"","code":"margot_view_contrasts(lmtp_output, table_type = \"combined\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_view_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to view flipped contrasts — margot_view_contrasts","text":"lmtp_output Output margot_lmtp() margot_resort_contrast_lmtp() table_type tables show: \"combined\", \"individual\", \"\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_view_lmtp_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to view available models and contrasts — margot_view_lmtp_structure","title":"Helper function to view available models and contrasts — margot_view_lmtp_structure","text":"Helper function view available models contrasts","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_view_lmtp_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to view available models and contrasts — margot_view_lmtp_structure","text":"","code":"margot_view_lmtp_structure(lmtp_output, show = \"all\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_view_lmtp_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to view available models and contrasts — margot_view_lmtp_structure","text":"lmtp_output Output margot_lmtp() margot_resort_contrast_lmtp() show show: \"models\", \"contrasts\", \"tables\", \"\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with labels — margot_wide","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"**Deprecated**: Use `margot_wide_machine()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with labels — margot_wide","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names include. exposure_var character vector exposure variable names. outcome_vars character vector outcome variable names.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"wide-format data frame prefixed time-stamped columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"deprecated","dir":"Reference","previous_headings":"","what":"Deprecated","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"function soft-deprecated version 1.0.38 removed future release.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":"**Deprecated**: Use `margot_wide_machine(imputation_method = \"mice\")` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names include impute. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"deprecated","dir":"Reference","previous_headings":"","what":"Deprecated","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":"function soft-deprecated version 1.0.38 removed future major release.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format and impute baseline (soft-deprecated) — margot_wide_impute_baseline","text":"","code":"# Preferred: use margot_wide_machine with mice imputation # wide_df <- margot_wide_machine( #   df, #   baseline_vars = c(\"age\", \"male\"), #   exposure_var = \"forgiveness\", #   outcome_vars = \"kessler_latent_anxiety\", #   imputation_method = \"mice\" # )"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with baseline imputation and optional NA indicators — margot_wide_machine","title":"Transform longitudinal data to wide format with baseline imputation and optional NA indicators — margot_wide_machine","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labeled included. handles multiple observations per subject across indefinite number waves, allows specification baseline variables, exposure variables, outcome variables, time-varying confounders.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with baseline imputation and optional NA indicators — margot_wide_machine","text":"","code":"margot_wide_machine(   .data,   id = \"id\",   wave = \"wave\",   baseline_vars,   exposure_var,   outcome_vars,   confounder_vars = NULL,   imputation_method = c(\"median\", \"mice\", \"none\"),   include_exposure_var_baseline = TRUE,   include_outcome_vars_baseline = TRUE,   extend_baseline = FALSE,   include_na_indicators = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with baseline imputation and optional NA indicators — margot_wide_machine","text":".data data frame containing longitudinal data long format. id name ID column identifying subjects (default \"id\"). wave name wave/time column (default \"wave\"). baseline_vars character vector baseline variable names included t0. exposure_var character string specifying name exposure variable tracked across time. outcome_vars character vector outcome variable names tracked across time. confounder_vars optional character vector time-varying confounder variable names include without imputation (default NULL). imputation_method character string specifying imputation method use baseline variables. Options 'median' (default), 'mice', 'none'. include_exposure_var_baseline Logical indicating whether include exposure variable baseline (t0). include_outcome_vars_baseline Logical indicating whether include outcome variables baseline (t0). extend_baseline Logical indicating whether include baseline_vars subsequent waves (default FALSE). include_na_indicators Logical indicating whether generate NA indicator columns baseline variables (default TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with baseline imputation and optional NA indicators — margot_wide_machine","text":"wide-format data frame subject's observations across time points         represented single row. Baseline variables, exposure variables baseline,         outcome variables baseline missing values imputed specified.         NA indicators created variables baseline include_na_indicators TRUE.         Exposure variables tracked across waves imputed beyond baseline.         Outcome variables included final wave unless include_outcome_vars_baseline TRUE.         Confounders () included without imputation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":null,"dir":"Reference","previous_headings":"","what":"General Matching Function for Multiple Imputation Data — match_mi_general","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"function facilitates propensity score matching datasets, including generated multiple imputation, assess covariate balance across treatment groups. leverages WeightIt MatchThem packages calculate propensity scores apply matching techniques. Users referred packages detailed methodological specifications additional functionality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"match_mi_general(   data,   X,   baseline_vars,   estimand,   method,   subgroup = NULL,   focal = NULL,   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"data data frame 'mids' object containing data matching. X string naming treatment exposure variable within `data`. baseline_vars character vector naming covariates include propensity score model. estimand string specifying target estimand ('ATE', 'ATT', 'ATC'). method method estimating propensity scores, per WeightIt package's documentation. subgroup (Optional) string specifying variable subgroup data within-group matching. focal (Optional) Specifies focal treatment group, useful 'ATT' 'ATC' estimands. sample_weights (Optional) string indicating variable `data` representing sample weights. stabilize Logical. Indicates whether stabilize weights, defaulting TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"list matched datasets subgroup level (`subgroup` used)   single matched dataset. element typically data frame object   reflecting matched data structure, depending matching method applied.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"Detailed methodology additional options can found : - WeightIt package propensity score estimation. - MatchThem package matching within imputed datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"if (FALSE) { # \\dontrun{ # Assume `df` is a data frame with treatment, covariates, and sample weights matched_data <- match_mi_general(data = df,                                  X = \"treatment_var\",                                  baseline_vars = c(\"covariate1\", \"covariate2\"),                                  estimand = \"ATE\",                                  method = \"nearest\",                                  stabilize = TRUE) } # }"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"plot_rank_average_treatment_effect(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for Margot plot — prepare_margot_plot_data","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"Prepare data Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"","code":"prepare_margot_plot_data(   .data,   type,   order,   options,   label_mapping,   original_df )"},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":".data Input data frame type Type effect (RD RR) order Ordering method options Options list label_mapping Label mapping list original_df Original data frame back-transformation","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"Prepared data frame","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"function prepares panel data timeline visualization across multiple waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"","code":"prepare_panel_data(   dat,   wave_col = \"wave\",   tscore_col = \"tscore\",   id_col = \"id\",   base_date = as.Date(\"1970-01-01\"),   wave_breaks = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"dat data frame containing panel data. Must include columns wave, time score, participant ID. wave_col name column containing wave information. Default \"wave\". tscore_col name column containing time score information. Default \"tscore\". id_col name column containing participant IDs. Default \"id\". base_date base date calculating timeline. Default \"1970-01-01\". wave_breaks named list date ranges wave. NULL, waves categorized.","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"list containing two elements: df_timeline data frame processed timeline data n_total_participants total number unique participants dataset","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"","code":"if (FALSE) { # \\dontrun{ dat <- read.csv(\"panel_data.csv\") wave_breaks <- list(   \"wave 1\" = c(as.Date(\"2010-01-01\"), as.Date(\"2010-12-31\")),   \"wave 2\" = c(as.Date(\"2011-01-01\"), as.Date(\"2011-12-31\")) ) prepared_data <- prepare_panel_data(dat,   wave_col = \"Wave\", tscore_col = \"TimeScore\",   id_col = \"ParticipantID\", base_date = \"2010-01-01\",   wave_breaks = wave_breaks ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numbers with Commas — pretty_number","title":"Format Numbers with Commas — pretty_number","text":"function takes numeric vector formats inserting commas thousands separators, making large numbers easier read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numbers with Commas — pretty_number","text":"","code":"pretty_number(x)"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numbers with Commas — pretty_number","text":"x numeric vector want format.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numbers with Commas — pretty_number","text":"character vector number formatted commas thousands separators.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numbers with Commas — pretty_number","text":"","code":"numbers <- c(1000, 50000, 1234567) pretty_number(numbers) #> [1] \"1,000\"     \"50,000\"    \"1,234,567\""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_bootstrap_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for bootstrap policy tree results — print.margot_bootstrap_policy_tree","title":"Print method for bootstrap policy tree results — print.margot_bootstrap_policy_tree","text":"Print method bootstrap policy tree results","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_bootstrap_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for bootstrap policy tree results — print.margot_bootstrap_policy_tree","text":"","code":"# S3 method for class 'margot_bootstrap_policy_tree' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_bootstrap_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for bootstrap policy tree results — print.margot_bootstrap_policy_tree","text":"x Object class \"margot_bootstrap_policy_tree\" ... Additional arguments (unused)","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_bootstrap_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for bootstrap policy tree results — print.margot_bootstrap_policy_tree","text":"Invisibly returns object","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_causal_forest_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for margot_causal_forest_dev objects — print.margot_causal_forest_dev","title":"Print method for margot_causal_forest_dev objects — print.margot_causal_forest_dev","text":"Print method margot_causal_forest_dev objects","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_causal_forest_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for margot_causal_forest_dev objects — print.margot_causal_forest_dev","text":"","code":"# S3 method for class 'margot_causal_forest_dev' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_causal_forest_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for margot_causal_forest_dev objects — print.margot_causal_forest_dev","text":"x margot_causal_forest_dev object ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_correlation_assessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for margot_correlation_assessment — print.margot_correlation_assessment","title":"Print method for margot_correlation_assessment — print.margot_correlation_assessment","text":"Print method margot_correlation_assessment","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_correlation_assessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for margot_correlation_assessment — print.margot_correlation_assessment","text":"","code":"# S3 method for class 'margot_correlation_assessment' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_cv_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for margot_cv_results — print.margot_cv_results","title":"Print method for margot_cv_results — print.margot_cv_results","text":"Print method margot_cv_results","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_cv_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for margot_cv_results — print.margot_cv_results","text":"","code":"# S3 method for class 'margot_cv_results' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_cv_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for margot_cv_results — print.margot_cv_results","text":"x margot_cv_results object ... Additional arguments (used)","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_qini_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for margot_qini_dev objects — print.margot_qini_dev","title":"Print method for margot_qini_dev objects — print.margot_qini_dev","text":"Print method margot_qini_dev objects","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_qini_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for margot_qini_dev objects — print.margot_qini_dev","text":"","code":"# S3 method for class 'margot_qini_dev' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_qini_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for margot_qini_dev objects — print.margot_qini_dev","text":"x margot_qini_dev object ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_stability_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for stability policy tree results — print.margot_stability_policy_tree","title":"Print method for stability policy tree results — print.margot_stability_policy_tree","text":"Print method stability policy tree results","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_stability_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for stability policy tree results — print.margot_stability_policy_tree","text":"","code":"# S3 method for class 'margot_stability_policy_tree' print(x, ...)"},{"path":"https://go-bayes.github.io/margot/reference/print.margot_stability_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for stability policy tree results — print.margot_stability_policy_tree","text":"x Object class \"margot_stability_policy_tree\" ... Additional arguments (unused)","code":""},{"path":"https://go-bayes.github.io/margot/reference/print.margot_stability_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for stability policy tree results — print.margot_stability_policy_tree","text":"Invisibly returns object","code":""},{"path":"https://go-bayes.github.io/margot/reference/process_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to process E-values for naive regressions — process_evalue","title":"Helper function to process E-values for naive regressions — process_evalue","text":"Helper function process E-values naive regressions","code":""},{"path":"https://go-bayes.github.io/margot/reference/process_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to process E-values for naive regressions — process_evalue","text":"","code":"process_evalue(tab, scale, delta, sd)"},{"path":"https://go-bayes.github.io/margot/reference/rate_sequential_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Cross-Validation for RATE — rate_sequential_cv","title":"Sequential Cross-Validation for RATE — rate_sequential_cv","text":"Internal function implementing uncorrelated sequential cross-validation approach Wager (2024). function exported technical reasons (parallel processing) called directly users.","code":""},{"path":"https://go-bayes.github.io/margot/reference/rate_sequential_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Cross-Validation for RATE — rate_sequential_cv","text":"","code":"rate_sequential_cv(   X,   Y,   W,   weights = NULL,   num_folds = 5,   target = \"AUTOC\",   grf_defaults = list(),   seed = 12345,   verbose = FALSE,   model_name = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Multiple Images from a Folder — read_multiple_images","title":"Read Multiple Images from a Folder — read_multiple_images","text":"function reads multiple images specified folder returns list magick image objects. uses `` package path handling, `magick` image reading, `stringr` string manipulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Multiple Images from a Folder — read_multiple_images","text":"","code":"read_multiple_images(path_multi_plots, pattern = \"policy_tree_plot\\\\.png$\")"},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Multiple Images from a Folder — read_multiple_images","text":"path_multi_plots Character string specifying path folder containing images, relative project root. pattern Character string specifying pattern match filenames. Default \"policy_tree_plot\\.png$\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Multiple Images from a Folder — read_multiple_images","text":"named list magick image objects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Multiple Images from a Folder — read_multiple_images","text":"","code":"if (FALSE) { # \\dontrun{ path_multi_plots <- \"plots\" policy_tree_plots <- read_multiple_images(path_multi_plots, \"policy_tree_plot\\\\.png$\") qini_plots <- read_multiple_images(path_multi_plots, \"qini_plot\\\\.png$\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/recalculate_evalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate E-values after confidence interval correction — recalculate_evalues","title":"Recalculate E-values after confidence interval correction — recalculate_evalues","text":"Recalculate E-values confidence interval correction","code":""},{"path":"https://go-bayes.github.io/margot/reference/recalculate_evalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate E-values after confidence interval correction — recalculate_evalues","text":"","code":"recalculate_evalues(df, scale = \"RD\")"},{"path":"https://go-bayes.github.io/margot/reference/recalculate_evalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recalculate E-values after confidence interval correction — recalculate_evalues","text":"df data frame corrected confidence intervals scale \"RD\" \"RR\"","code":""},{"path":"https://go-bayes.github.io/margot/reference/recalculate_evalues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recalculate E-values after confidence interval correction — recalculate_evalues","text":"data frame updated E-values","code":""},{"path":"https://go-bayes.github.io/margot/reference/recalculate_policy_trees_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate policy trees for a single model — recalculate_policy_trees_single","title":"Recalculate policy trees for a single model — recalculate_policy_trees_single","text":"Recalculate policy trees single model","code":""},{"path":"https://go-bayes.github.io/margot/reference/recalculate_policy_trees_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate policy trees for a single model — recalculate_policy_trees_single","text":"","code":"recalculate_policy_trees_single(   model_result,   model_name,   covariates,   not_missing,   custom_covariates,   exclude_covariates,   covariate_mode,   verbose,   seed,   tree_method )"},{"path":"https://go-bayes.github.io/margot/reference/reconstruct_consensus_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a consensus tree from consensus splits — reconstruct_consensus_tree","title":"Reconstruct a consensus tree from consensus splits — reconstruct_consensus_tree","text":"Reconstruct consensus tree consensus splits Reconstruct consensus tree consensus splits","code":""},{"path":"https://go-bayes.github.io/margot/reference/reconstruct_consensus_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a consensus tree from consensus splits — reconstruct_consensus_tree","text":"","code":"reconstruct_consensus_tree(consensus_splits, dr_scores, covariates, depth)  reconstruct_consensus_tree(consensus_splits, dr_scores, covariates, depth)"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Regression with Covariates — regress_with_covariates","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"unitility function performs generalized linear regression specified dataset using outcome variable, exposure variable, set baseline covariates. default, function uses Gaussian family (linear regression), allows specifying families generalized linear models (GLM).","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"regress_with_covariates(   data,   outcome,   exposure,   baseline_vars,   family = gaussian(),   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"data data frame containing variables analysis. outcome character string specifying name outcome variable data frame. exposure character string specifying name main exposure variable data frame. baseline_vars character vector specifying names baseline covariates include model addition exposure variable. family family object character string naming family (default gaussian(), performs linear regression). parameter determines error distribution link function used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"object class glm representing fitted model, includes coefficients, residuals, model diagnostics. object can analyzed using standard methods GLM objects, summary() model summaries anova() analysis variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"function constructs model formula using outcome, exposure, baseline variables. fits generalized linear model using formula. baseline variables filtered exclude outcome exposure variables model fitting. function prints formula used regression analysis verification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"if (FALSE) { # \\dontrun{ # using `df_margot_example` is your data frame with \"hours_exercise\" as the continuous outcome variable, # \"age\" as an exposure variable, and other covariates outcome_var <- \"hours_exercise\" exposure_var <- \"age\" baseline_vars <- c(\"age\", \"male\", \"partner\") model <- regress_with_covariates(df_margot_example, outcome_var, exposure_var, baseline_vars, family = gaussian()) summary(model) } # }"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"Iterates column provided data frame. column numeric attributes, function removes attributes converting column basic numeric vector. particularly useful cleaning data frames operations may add undesired attributes numeric columns, aggregations merges.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"remove_numeric_attributes(df)"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"df `data.frame` object attributes numeric columns removed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"`data.frame` attributes removed numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"df <- data.frame(a = I(1:3), b = c(\"x\", \"y\", \"z\"), c = I(rnorm(3))) cleaned_df <- remove_numeric_attributes(df) str(cleaned_df) #> 'data.frame':\t3 obs. of  3 variables: #>  $ a: 'AsIs' int  1 2 3 #>  $ b: chr  \"x\" \"y\" \"z\" #>  $ c: 'AsIs' num  1.200965.... 1.044751.... -1.00320...."},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Simulations for Estimating ATE — run_simulations","title":"Run Simulations for Estimating ATE — run_simulations","text":"function simulates data estimates Average Treatment Effect (ATE) using different methods specified causal model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Simulations for Estimating ATE — run_simulations","text":"","code":"run_simulations(   num_simulations,   N,   prob_L1,   A_on_Y,   L_on_A,   L_on_Y,   method = \"ps\" )"},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Simulations for Estimating ATE — run_simulations","text":"num_simulations Integer, number simulations run. N Integer, sample size simulation. prob_L1 Double, probability parameter generating L1. A_on_Y Double, effect size Y. L_on_A Double, effect size L . L_on_Y Double, effect size L Y. method Character, method IPTW DR adjustment (\"ps\" ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Simulations for Estimating ATE — run_simulations","text":"tibble containing estimated ATEs confidence intervals method.","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot plot output — save_margot_output","title":"Save Margot plot output — save_margot_output","text":"Save Margot plot output","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot plot output — save_margot_output","text":"","code":"save_margot_output(output, use_timestamp, base_filename, prefix, save_path)"},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot plot output — save_margot_output","text":"output Complete output save use_timestamp Whether include timestamp filename base_filename Base filename prefix Optional filename prefix save_path Directory save ","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot plot output — save_margot_output","text":"return value","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Rename Columns Based on Criteria — select_and_rename_cols","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"Selects columns base set match specified baseline variables renames outcome variable changing prefix. Useful longitudinal data time-point prefixes need standardised adjusted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"select_and_rename_cols(   names_base,   baseline_vars,   outcome,   from_prefix = \"t2\",   to_prefix = \"t0\" )"},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"names_base character vector column names select. baseline_vars character vector baseline variables match `names_base`. outcome name outcome variable whose prefix replaced. from_prefix original prefix outcome variable replaced, defaulting \"t2\". prefix include character immediately preceding numeric value underscore, e.g., \"t2_\". to_prefix new prefix replace original prefix outcome variable, defaulting \"t0\". prefix format `from_prefix`, including character immediately preceding numeric value underscore, e.g., \"t0_\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"character vector selected column names outcome variable name   modified reflect new prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"names_base <- c(\"t0_age\", \"t0_weight\", \"t0_height\", \"t0_outcome\") baseline_vars <- c(\"age\", \"weight\") outcome_var <- \"t2_outcome\"  final_columns <- select_and_rename_cols(names_base, baseline_vars, outcome_var, \"t2\", \"t0\") print(final_columns) #> [1] \"t0_age\"     \"t0_weight\"  \"t0_outcome\""},{"path":"https://go-bayes.github.io/margot/reference/select_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Select models based on criteria — select_models","title":"Select models based on criteria — select_models","text":"Select models based criteria","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select models based on criteria — select_models","text":"","code":"select_models(   evidence_summary,   require_any_positive,   exclude_negative_any,   require_omnibus,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup options for Margot plot — setup_margot_plot_options","title":"Setup options for Margot plot — setup_margot_plot_options","text":"Setup options Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup options for Margot plot — setup_margot_plot_options","text":"","code":"setup_margot_plot_options(options, ...)"},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup options for Margot plot — setup_margot_plot_options","text":"options User-provided options list ... Additional parameters included options","code":""},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup options for Margot plot — setup_margot_plot_options","text":"Merged options list","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"Generates simulated data sample population study average treatment effects (ATE), considering presence effect modifier. function simulates differences distribution effect modifiers sample population without altering treatment effect effect-modification. Weights calculated adjust distribution differences effect modifier sample population.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 1e+05,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   beta_az = 0.5,   noise_sd = 0.5,   seed = 12345 )"},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"n_sample Integer, size sample. Default 10000. n_population Integer, size population. Default 100000. p_z_sample Numeric, probability effect modifier sample. Default 0.1. p_z_population Numeric, probability effect modifier population. Default 0.5. beta_a Numeric, treatment effect. Default 1. beta_z Numeric, coefficient effect modifier. Default 2.5. beta_az Numeric, interaction term representing effect modification treatment effect modifier. Default 0.5. noise_sd Numeric, standard deviation noise outcome variable. Default 0.5. seed Optional. integer value setting seed ensure reproducibility. Default `NULL`, set seed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"list containing two data frames: `sample_data` `population_data`, comprising outcome variable `y`, treatment variable ``, effect modifier `z`. `sample_data` data frame also includes calculated weights observation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"data <- simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 100000,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   noise_sd = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/stability_single_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Stability analysis for a single model — stability_single_model","title":"Stability analysis for a single model — stability_single_model","text":"Stability analysis single model","code":""},{"path":"https://go-bayes.github.io/margot/reference/stability_single_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stability analysis for a single model — stability_single_model","text":"","code":"stability_single_model(   model_result,   model_name,   covariates,   not_missing,   custom_covariates,   exclude_covariates,   covariate_mode,   n_iterations,   vary_type,   depths,   actual_train_props,   all_seeds,   consensus_threshold,   return_consensus_trees,   label_mapping,   verbose,   seed,   tree_method,   compute_policy_values,   policy_value_R,   policy_value_seed,   policy_value_baseline )"},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"function processes wide-format longitudinal data multiple time points. wrapper around internal function `.strict_exposure_outcome_censoring`. See internal function documentation details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"","code":"strict_exposure_outcome_censoring(   df_wide,   exposure_vars,   ordinal_columns = NULL,   continuous_columns_keep = NULL,   scale_exposure = FALSE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = \"lost_following_wave\",   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"df_wide wide-format dataframe columns like t0_X, t1_X, t2_X, etc. exposure_vars Character vector exposure names (e.g. c(\"aaron_antagonism\", \"aaron_disinhibition\", ...)). ordinal_columns Character vector ordinal (factor) variables dummy-coded. continuous_columns_keep Numeric columns want scale (e.g. must remain original units). scale_exposure FALSE, scale exposures; TRUE, exposures also scaled. not_lost_in_following_wave Name \"lost\" indicator (default \"not_lost_following_wave\"). lost_in_following_wave Name \"lost\" indicator (default \"lost_following_wave\"). remove_selected_columns TRUE, remove original columns dummy-coding ordinal columns. time_point_prefixes Optional vector wave prefixes (like c(\"t0\",\"t1\",\"t2\")); NULL, auto-detect via regex. time_point_regex Regex used detect wave prefixes `time_point_prefixes` NULL. save_observed_y FALSE, set missing final-wave outcomes NA. TRUE, keep partial final-wave outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"processed dataframe, strict --nothing censoring","code":""},{"path":"https://go-bayes.github.io/margot/reference/summarise_lmtp_learners.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Super Learner weights for LMTP nuisance models — summarise_lmtp_learners","title":"Summarise Super Learner weights for LMTP nuisance models — summarise_lmtp_learners","text":"Internal helper collapses cross-fit Super Learner weights stored LMTP model (`fits_m` outcome regression `fits_r` density-ratio regression) per-wave summaries. Returns tidy data frame used downstream plotting interpretation utilities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/summarise_lmtp_learners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Super Learner weights for LMTP nuisance models — summarise_lmtp_learners","text":"","code":"summarise_lmtp_learners(   x,   outcome,   shifts = NULL,   label_mapping = NULL,   waves = NULL,   remove_waves = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_bootstrap_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for bootstrap policy tree results — summary.margot_bootstrap_policy_tree","title":"Summary method for bootstrap policy tree results — summary.margot_bootstrap_policy_tree","text":"Summary method bootstrap policy tree results","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_bootstrap_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for bootstrap policy tree results — summary.margot_bootstrap_policy_tree","text":"","code":"# S3 method for class 'margot_bootstrap_policy_tree' summary(object, ...)"},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_bootstrap_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for bootstrap policy tree results — summary.margot_bootstrap_policy_tree","text":"object Object class \"margot_bootstrap_policy_tree\" ... Additional arguments (unused)","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_bootstrap_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for bootstrap policy tree results — summary.margot_bootstrap_policy_tree","text":"Invisibly returns summary list","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_qini_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for margot_qini_dev objects — summary.margot_qini_dev","title":"Summary method for margot_qini_dev objects — summary.margot_qini_dev","text":"Summary method margot_qini_dev objects","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_qini_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for margot_qini_dev objects — summary.margot_qini_dev","text":"","code":"# S3 method for class 'margot_qini_dev' summary(object, ...)"},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_qini_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for margot_qini_dev objects — summary.margot_qini_dev","text":"object margot_qini_dev object ... Additional arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_stability_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for stability policy tree results — summary.margot_stability_policy_tree","title":"Summary method for stability policy tree results — summary.margot_stability_policy_tree","text":"Summary method stability policy tree results","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_stability_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for stability policy tree results — summary.margot_stability_policy_tree","text":"","code":"# S3 method for class 'margot_stability_policy_tree' summary(object, ...)"},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_stability_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for stability policy tree results — summary.margot_stability_policy_tree","text":"object Object class \"margot_stability_policy_tree\" ... Additional arguments (unused)","code":""},{"path":"https://go-bayes.github.io/margot/reference/summary.margot_stability_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for stability policy tree results — summary.margot_stability_policy_tree","text":"Invisibly returns summary list","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"function processes simulation results tabulate marginal effects along E-values, providing summary suited reporting. supports risk difference (RD) risk ratio (RR) types estimates handles continuous categorical treatment variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"tab_engine_marginal(   x,   new_name,   delta = 1,   sd = 1,   type = c(\"RD\", \"RR\"),   continuous_X = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"x data frame matrix containing simulation results processed. new_name new name assign output row, typically describing variable model. delta assumed smallest worthwhile effect, used E-value calculations. sd standard deviation effect estimate, used E-value calculations. type Character vector specifying scale effect size, either \"RD\" \"RR\". parameter determines effects calculated presented. continuous_X Logical indicating whether treatment variable X continuous. TRUE, adjusts row names based type parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"data frame specified new_name row name. data frame includes         effect estimates, confidence intervals, E-values, relevant statistics formatted         easy reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"# Assuming you have results from a simulation or model in `results_df` tabulated_results <- tab_engine_marginal(   x = results_df,   new_name = \"Treatment Effect\",   delta = 1,   sd = 0.2,   type = \"RD\" ) # Corrected 'scale' to 'type' #> Error in tab_engine_marginal(x = results_df, new_name = \"Treatment Effect\",     delta = 1, sd = 0.2, type = \"RD\"): could not find function \"tab_engine_marginal\""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Table Row Names with CLI Feedback — transform_table_rownames","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"function transforms row names data frame based specified criteria provides CLI feedback changes made.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"","code":"transform_table_rownames(df, label_mapping = NULL, options = list())"},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"df data frame whose row names transformed. remove_tx_prefix Logical. TRUE, removes 't' followed numbers underscore start row names. remove_z_suffix Logical. TRUE, removes '_z' end row names. use_title_case Logical. TRUE, converts row names title case. remove_underscores Logical. TRUE, replaces underscores spaces row names.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"data frame transformed row names.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"function applies following transformations order: 1. Removes 't' followed numbers underscore start (remove_tx_prefix TRUE) 2. Removes '_z' end (remove_z_suffix TRUE) 3. Replaces underscores spaces (remove_underscores TRUE) 4. Converts title case (use_title_case TRUE) function provides CLI feedback change made summary transformation process.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"","code":"df <- data.frame(x = 1:3, row.names = c(\"t1_variable_z\", \"t2_another_var\", \"last_variable\")) transformed_df <- transform_table_rownames(df) #> Error in transform_table_rownames(df): could not find function \"transform_table_rownames\""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Z-Score Results to Original Scale — transform_to_original_scale","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"function takes dataframe z-score results transforms back original scale using standard deviations original dataset. particularly useful interpreting causal contrasts calculated z-transformed data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"","code":"transform_to_original_scale(results_df, original_df, label_mapping = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"results_df dataframe containing z-score results. original_df dataframe containing original (non-transformed) data. Column names match results_df mappable via label_mapping. label_mapping optional named list mapping row names results_df column names original_df. Use names match exactly.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"dataframe similar results_df, additional columns back-transformed   estimates confidence intervals (suffixed \"_original\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_var_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a variable name into a human-readable label, preserving acronyms — transform_var_name","title":"Transform a variable name into a human-readable label, preserving acronyms — transform_var_name","text":"function applies explicit mappings, strips numeric-range suffixes, removes time-prefixes z-suffixes, replaces underscores, converts title case preserving NZ, SDO, RWA acronyms.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_var_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a variable name into a human-readable label, preserving acronyms — transform_var_name","text":"","code":"transform_var_name(   var_name,   label_mapping = NULL,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/transform_var_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a variable name into a human-readable label, preserving acronyms — transform_var_name","text":"var_name Character; original variable name label_mapping Optional named list explicit mappings remove_tx_prefix Logical; remove leading 't0_' etc. remove_z_suffix Logical; remove trailing '_z' use_title_case Logical; convert title case remove_underscores Logical; replace underscores spaces","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_var_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a variable name into a human-readable label, preserving acronyms — transform_var_name","text":"character scalar transformed label, NA input missing","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Transition Table — transition_table","title":"Format Transition Table — transition_table","text":"Helper function format single transition data frame markdown table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Transition Table — transition_table","text":"","code":"transition_table(   trans_df,   state_names = NULL,   wave_info = NULL,   table_name = \"transition_table\" )"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Transition Table — transition_table","text":"trans_df data frame columns '', '', 'Freq' state_names Optional vector state names wave_info Optional wave information string table_name Name table (default \"transition_table\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Transition Table — transition_table","text":"list formatted table explanation","code":""},{"path":"https://go-bayes.github.io/margot/reference/update_accumulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Update accumulator with tree information — update_accumulator","title":"Update accumulator with tree information — update_accumulator","text":"Update accumulator tree information","code":""},{"path":"https://go-bayes.github.io/margot/reference/update_accumulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update accumulator with tree information — update_accumulator","text":"","code":"update_accumulator(accumulator, tree_info, depth)"},{"path":"https://go-bayes.github.io/margot/reference/update_stability_accumulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Update accumulator with tree information for stability analysis — update_stability_accumulator","title":"Update accumulator with tree information for stability analysis — update_stability_accumulator","text":"Update accumulator tree information stability analysis","code":""},{"path":"https://go-bayes.github.io/margot/reference/update_stability_accumulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update accumulator with tree information for stability analysis — update_stability_accumulator","text":"","code":"update_stability_accumulator(accumulator, tree_info, depth)"},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate input for Margot plot — validate_margot_plot_input","title":"Validate input for Margot plot — validate_margot_plot_input","text":"Validate input Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate input for Margot plot — validate_margot_plot_input","text":"","code":"validate_margot_plot_input(.data)"},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate input for Margot plot — validate_margot_plot_input","text":".data Input data frame","code":""},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate input for Margot plot — validate_margot_plot_input","text":"return, throws error invalid","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"performance-improvements-1-0-254","dir":"Changelog","previous_headings":"","what":"Performance Improvements","title":"[2025-10-02] margot 1.0.254","text":"CRITICAL FIX: margot_lmtp() now respects user’s external future::plan() manage_future_plan = FALSE (default), enabling parallel cross-validation within model (~5x speedup) CRITICAL FIX: Removed future::plan(sequential) override disabling parallelization manage_future_plan = FALSE Fixed: Set mc.cores parallelly.maxWorkers.localhost early manage_future_plan = TRUE prevent “1 CPU cores available” errors nested futures Fixed: User interrupts (Ctrl+C) now work correctly - removed interrupt detection code catching interrupts errors","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"changed-1-0-254","dir":"Changelog","previous_headings":"","what":"Changed","title":"[2025-10-02] margot 1.0.254","text":"margot_lmtp(): manage_future_plan = FALSE, models run sequentially model can now use user’s future plan parallel CV margot_lmtp(): Improved CLI diagnostics show whether LMTP internal parallelization enabled many workers available margot_lmtp(): Treatment variable preflight check now handles character vectors properly provides better error messages","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"expected-performance-1-0-254","dir":"Changelog","previous_headings":"","what":"Expected Performance","title":"[2025-10-02] margot 1.0.254","text":"external future plan: Set future::plan(multisession, workers = 5) calling margot_lmtp() default manage_future_plan = FALSE → ~5x faster (sequential models, parallel CV) managed nested futures: Use margot_lmtp(..., manage_future_plan = TRUE, cv_workers = 5, n_cores = 12) → ~10x faster (2 models × 5 CV workers = 10 cores)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-253","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-10-02] margot 1.0.253","text":"None","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"added-1-0-253","dir":"Changelog","previous_headings":"","what":"Added","title":"[2025-10-02] margot 1.0.253","text":"margot_lmtp(): incremental checkpointing system saves model immediately completion timestamped subdirectory (save_path/checkpoints/prefix_YYYYMMDD_HHMMSS/), protecting power failures interruptions. margot_lmtp(): preflight validation checks required variables (treatment, outcomes, baseline, time_vary, cens) exist data expensive computation begins. margot_lmtp(): enhanced error messages showing available variables validation fails.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-253","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2025-10-02] margot 1.0.253","text":"margot_lmtp(): future parallelization conflicts resolved. manage_future_plan = FALSE, explicitly sets sequential outer loop preserving user’s future::plan() LMTP’s internal cross-validation. margot_lmtp(): null model validation crash fixed. Now checks null model exists valid computing contrasts, preventing “attempt select less one element” error. margot_lmtp(): error logs saved checkpoint directory failed models.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-253","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-10-02] margot 1.0.253","text":"margot_lmtp(): checkpoint saves use qs::qsave() high compression single thread compatibility future parallelization. margot_lmtp(): CLI messages show checkpoint directory path individual file saves. margot_lmtp(): preflight checks provide detailed feedback missing variables suggestions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-252","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-10-02] margot 1.0.252","text":"LMTP positivity diagnostics now focus uncensored observations: margot_interpret_lmtp_positivity() reports ESS metrics computed density ratios > 0 (uncensored observations). Censoring rate (proportion r = 0) reported separately per shift. margot_interpret_lmtp_positivity(): output format changed. shift line now shows: censoring = X%; uncensored ESS wave — .... margot_interpret_lmtp_positivity(): internal summarise_shift() now returns ess_pos, ess_pos_frac, n_all, n_pos, prop_censored instead ess, ess_frac, n. LMTP density ratio plots now show uncensored observations default: margot_lmtp_overlap() margot_plot_lmtp_overlap_grid() histograms exclude zeros (r = 0) default. Use show_censored = TRUE include zeros. Plot titles now indicate “uncensored | censored: X%” “censored: X%” depending parameter.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"conceptual-change-1-0-252","dir":"Changelog","previous_headings":"","what":"Conceptual Change","title":"[2025-10-02] margot 1.0.252","text":"Zeros LMTP density ratios primarily reflect censoring, positivity violations: Following expert guidance, zeros (r = 0) longitudinal LMTP density ratios arise individuals drop (censored) treatment observed subsequent waves. censoring-induced zeros appear identically across policies. True treatment positivity violations policy-specific. Therefore, ESS distributional diagnostics focus uncensored observations (r > 0) assess positivity treatment actually observed.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"added-1-0-252","dir":"Changelog","previous_headings":"","what":"Added","title":"[2025-10-02] margot 1.0.252","text":"margot_interpret_lmtp_positivity(): methods section (include_methods = TRUE) now includes “Censoring vs. Treatment Positivity” subsection explaining distinction rationale focusing uncensored observations. margot_lmtp_positivity(): enhanced documentation explaining censoring vs. treatment positivity role *_pos columns. Now computes min_pos, max_pos, mean_pos, sd_pos, cv_pos uncensored observations. margot_lmtp_overlap() margot_plot_lmtp_overlap_grid(): new show_censored parameter (default: FALSE) controls whether zeros included histograms.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-252","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-10-02] margot 1.0.252","text":"margot_interpret_lmtp_positivity(): header now reads “LMTP positivity diagnostics [outcome] (uncensored observations).” margot_interpret_lmtp_positivity(): detailed diagnostics (include_diagnostics = TRUE) now use *_pos columns (range_pos, mean_pos, sd_pos, cv_pos, qpos, p_gt_pos) margot_lmtp_positivity() display “Censoring rate” separately. Per-shift lines now clearly distinguish censoring rate uncensored ESS metrics better interpretability. margot_lmtp_overlap(): plot titles clarify whether showing uncensored observations observations censoring rate. LMTP positivity/overlap documentation updated explain censoring vs. treatment positivity distinction.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-251","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-10-01] margot 1.0.251","text":"margot_interpret_lmtp_positivity(): removed include_overview parameter. Averaging statistics across interventions incoherent removed.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"added-1-0-251","dir":"Changelog","previous_headings":"","what":"Added","title":"[2025-10-01] margot 1.0.251","text":"margot_interpret_lmtp_positivity(): new include_methods parameter (default: FALSE) prepends methodological explanation density ratios, interpretation rebalancing weights, ESS computation formula. margot_interpret_lmtp_positivity(): new include_diagnostics parameter (default: FALSE) appends detailed diagnostics per shift including zeros, range, mean ± SD, CV, tail probabilities, quantiles. Uses margot_lmtp_positivity() internally.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-251","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-10-01] margot 1.0.251","text":"margot_interpret_lmtp_positivity(): mathematical notation now uses LaTeX formatting (e.g., $r_t > 1$, $\\text{ESS} = (\\sum w)^2 / \\sum w^2$) proper rendering Quarto markdown. margot_interpret_lmtp_positivity(): removed redundant “ESS computed raw density ratios using colSums” text header. margot_interpret_lmtp_positivity(): return = \"list\", now includes $methods $diagnostics components programmatic access.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-250","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-10-01] margot 1.0.250","text":"margot_plot_lmtp_overlap_grid() margot_lmtp_overlap_plot_grid(): replaced annotate_wave annotate_shift parameters unified annotate_graph parameter accepting “none”, “waves”, “shifts”. margot_plot_lmtp_overlap_grid() margot_lmtp_overlap_plot_grid(): replaced ymax_by_wave flexible ymax_harmonize parameter accepting “none” (default), “row”, “column”, “global”, custom named vectors. Removed remove_waves parameter; use waves parameter positive selection instead.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"added-1-0-250","dir":"Changelog","previous_headings":"","what":"Added","title":"[2025-10-01] margot 1.0.250","text":"xlim_harmonize parameter x-axis harmonization margot_plot_lmtp_overlap_grid() margot_lmtp_overlap_plot_grid() options: “none” (default), “row”, “column”, “global”, custom values. Automatic colour detection shifts margot_lmtp_overlap(): shifts containing “null” → grey (#7f7f7f), “” → orange (#d95f0e), “” → blue (#2c7fb8). Layout-aware axis harmonization: “row” “column” options intelligently adapt based whether rows/columns represent waves shifts.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-250","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-10-01] margot 1.0.250","text":"Default headroom increased 0.06 0.12 better annotation visibility. Annotation positioning adjusted (vjust = 1.2) clearer wave/shift labels top plots. Updated “lab” palette alias match automatic shift colours. Fixed annotate_zeros documentation correctly reflect logical (TRUE/FALSE) implementation. Added @param waves documentation wrapper function.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"added-1-0-249","dir":"Changelog","previous_headings":"","what":"Added","title":"[2025-09-30] margot 1.0.249","text":"margot_plot_lmtp_learners() heatmap summarising Super Learner weights wave/component. margot_interpret_lmtp_learners() prose helper highlights dominant learners (e.g., LOCF-driven collapses). margot_plot_lmtp_overlap_grid() now accepts color_by, fill_palette, text_size control histogram aesthetics.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"changed-1-0-248","dir":"Changelog","previous_headings":"","what":"Changed","title":"[2025-09-30] margot 1.0.248","text":"Introduced margot_interpret_lmtp_positivity() colSums-based ESS summaries wave overall, replacing earlier zero-focused reporting. margot_interpret_lmtp_overlap() now forwards new helper soft-deprecation warning ease migration. pkgdown reference navigation now lists margot_interpret_lmtp_positivity() place deprecated alias. Removed redundant positivity helper wrappers (margot_positivity_panel(), margot_positivity_tails_panel(), margot_lmtp_ratio_multigrid(), margot_plot_lmtp_positivity(), margot_plot_lmtp_positivity_batch()).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-247","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-09-29] margot 1.0.247","text":"margot_overlap_bullets() reports positivity results margot_interpret_lmtp_positivity_overview() - compares results","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-247","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-09-29] margot 1.0.247","text":"margot_report_lmtp_positivity() now uses label_mapping pretty‑print outcome plot titles returns outcome_label report list. Reporter now returns by_wave_ess_compact slim Wave × Shift table (e.g., Wave | Shift | Shift | Null). Also returns n_participants (baseline participants) n_person_time (pooled rows).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-246","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-09-28] margot 1.0.246","text":"margot_report_lmtp_positivity(): one‑stop reporter LMTP positivity diagnostics returns overall tables, combined ‑wave tables (ESS/N ESS), optional density‑ratio grids harmonised custom y‑limits, filtered flags. Backwards‑compatible alias margot_lmtp_positivity_report() provided. margot_plot_lmtp_overlap_grid(): wrapper wave‑‑shift density‑ratio grids optional y‑axis control. margot_plot_lmtp_positivity(): quick ggplots overall ESS/N (bar) ESS/N wave (line) positivity reporter. margot_plot_lmtp_positivity_batch(): run positivity reporter/plots across multiple analyses one call.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-246","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-28] margot 1.0.246","text":"margot_lmtp_overlap_plot_grid() now harmonises y‑axis heights across panels accepts ymax override force comparable histogram scales across waves shifts.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-245","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-09-27] margot 1.0.245","text":"margot_positivity_panel(): compact positivity summary (vs positive-) LMTP models. margot_positivity_tails_panel(): detailed quantiles tail probabilities (vs positive-). margot_lmtp_overlap(): LMTP overlap/positivity helper built margot_lmtp_positivity(), optional density-ratio plots scale toggle. margot_lmtp_ratio_grid(): panel grid per-wave density-ratio histograms selected outcome/shift. margot_lmtp_ratio_multigrid(): multi-shift facet grid (waves x shifts) density ratios selected outcome; supports label mapping log10/linear scales. margot_lmtp_overlap_plot_grid(): arrange margot_lmtp_overlap() ratio_plots wave--shift grid single outcome; supports ordering title control. margot_grf_overlap(): new name GRF overlap diagnostics (wraps existing functionality).","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"changes-1-0-245","dir":"Changelog","previous_headings":"","what":"Changes","title":"[2025-09-27] margot 1.0.245","text":"margot_assess_overlap() soft-deprecated; please use margot_grf_overlap() instead. margot_lmtp_overlap() plots now accept scale = \"log10\" (default) scale = \"linear\" longer take save_plots/output_dir (return ggplot objects save externally).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-244","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-26] margot 1.0.244","text":"margot_lmtp() batches outcome/shift fits nested future parallelism, prioritises fold workers, adds models_in_parallel/cv_workers controls plus clearer scheduling messages. (note, nested future parrallelism yet working; lmtp ‘listens’ sequential parrallel setting, slowing cross validation (continued…))","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-244","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-09-26] margot 1.0.244","text":"Stabilised nested future plans macOS provisioning dedicated multisession layers outer/inner work batches longer trigger UnexpectedFutureResultError.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-09-19-margot-10243","dir":"Changelog","previous_headings":"","what":"[2025-09-19] margot 1.0.243","title":"[2025-09-19] margot 1.0.243","text":"margot_lmtp_positivity() - reports positivity lmtp models","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-242","dir":"Changelog","previous_headings":"","what":"New:","title":"[2025-09-19] margot 1.0.242","text":"margot_policy_workflow(), shared explainer","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-242","dir":"Changelog","previous_headings":"","what":"Improvements:","title":"[2025-09-19] margot 1.0.242","text":"min_gain_for_depth_switch, audience + return_unit_masks, brief includes Depth, bugfix depth-1 summary table, interpretation reuse flags","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-240","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-19] margot 1.0.240 - 1.0.241","text":"margot_policy_tree_stability() adds compute_policy_values (policy_value_R, policy_value_seed, policy_value_baseline) pre-compute bootstrap policy gains now recognises legacy parrallel flag. margot_policy_tree_stability() allows tuning future.globals.maxSize via future_globals_max_size (20 GiB default) large stability jobs can run parallel without hitting future globals guard. Cached policy gains include baseline/contrast metadata downstream reporters; internal fallback .compute_policy_value_internal() keeps stand-alone scripts working. margot_policy_summary_report() adds “Practical Takeaways” block, per-model depth overrides (depths_by_model), depth-specific model lists/maps, recommended id/name outputs depth, compact-table controls (split_drop_zero, split_top_only) fixing missing-object error. margot_policy_summary_compare_depths() now exported documented alongside updated policy reporting workflow, returning mixed-depth report (best_summary) plus depth maps/lists downstream plotting. margot_interpret_policy_batch() accepts depths_by_model, surfaces per-model depths, returns depth map return_as_list = TRUE. margot_policy_summary_report() better support quarto markdown.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-239","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-19] margot 1.0.239","text":"margot_policy_summary_report() better support quarto markdown.wn.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-238","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-19] margot 1.0.238","text":"margot_policy_summary_report() better summary policy-tree results","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-237","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-19] margot 1.0.237","text":"margot_policy_summary_report() outputs model id’s wins/neutral/caution, make reporting policy trees easier margot_policy_summary_report() now returns narrative report field summarising wins, neutral, caution models manuscript-ready text margot_policy_summary_report() also includes compact interpretation paragraph lists wins, caution models, uncertain outcomes","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-236","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-09-18] margot 1.0.236","text":"Added margot_report_consensus_policy_value() report consensus policy value vs treat-control-95% CIs (bootstrap). Supports label_mapping optional treated-metrics. Added margot_table_consensus_policy_value() create rounded, manuscript-ready table reporter output (includes treated-metrics present). Added margot_table_treated_only() produce condensed, treated-summary table: average uplift among treated (CI available) coverage treated (%). Added margot_policy_summary_report() generate grouped summary text markdown table models chosen depth. Supports report_df avoid recomputation, grouping sign (Wins/Neutral/Caution), ordering, filtering, verbose progress, optional original-scale annotations via original_df. Added margot_policy_methods_statement() generate standard policy-learning methods paragraph (DR scores, policy trees, honest evaluation, policy value CIs, treated-uplift, optional stability).","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"interpreter-enhancements-1-0-236","dir":"Changelog","previous_headings":"","what":"Interpreter enhancements","title":"[2025-09-18] margot 1.0.236","text":"margot_interpret_policy_tree() margot_interpret_policy_batch() now accept report_policy_value = \"treated_only\" focus treated subgroups. narrative includes “Avg uplift among treated,” bootstrap CI. Batch interpreter (margot_interpret_policy_batch) can return brief treated-summary full report via return_as_list = TRUE (list elements: report_brief, report_full, by_model, policy_value_explanation). Optional one-line treated-summary per model (brief = TRUE). Rich leaf reporting preserved even conditional means missing falling back DR scores test set.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"stability--summary-1-0-236","dir":"Changelog","previous_headings":"","what":"Stability + summary","title":"[2025-09-18] margot 1.0.236","text":"summary.margot_stability_policy_tree() can control bootstrap settings consensus policy value via policy_value_R, policy_value_seed, show_policy_value.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-236","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-18] margot 1.0.236","text":"Reporter tables accept label_mapping display labels; reporter also includes outcome_label column. Baseline computation policy value corrected use explicit control/treatment means; removed inappropriate use ATE. Policy tree learning/evaluation consistently uses dr_scores (flipping reporting ). Small UI polish (better evaluation messages) rounding tables (3 d.p.). margot_policy_summary_report() returns grouped brief tables data frames (group_table) single combined data frame group column (group_table_df) facilitate downstream export. Renamed internal columns syntactic (e.g., coverage_treated_pct) avoid build errors.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"notes-1-0-236","dir":"Changelog","previous_headings":"","what":"Notes","title":"[2025-09-18] margot 1.0.236","text":"changes backward compatible. Defaults preserved; new features opt-.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-09-17-margot-10235","dir":"Changelog","previous_headings":"","what":"[2025-09-17] margot 1.0.235","title":"[2025-09-17] margot 1.0.235","text":"Improved margot_interpret_heterogeneity() now return ‘permitted_model_ds’ use policytree analysis.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-09-01-margot-10234","dir":"Changelog","previous_headings":"","what":"[2025-09-01] margot 1.0.234","title":"[2025-09-01] margot 1.0.234","text":"Returned read_multiple_images() utility quarto presentations/documents","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-08-11-margot-10233","dir":"Changelog","previous_headings":"","what":"[2025-08-11] margot 1.0.233","title":"[2025-08-11] margot 1.0.233","text":"Returned simulate_ate_data_with_weights() exports teaching.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-232","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-08-10] margot 1.0.232","text":"Flipping effect estimates - Changes sign E[Y(1)]-E[Y(0)] Swapping confidence intervals - Properly reverses swaps 2.5% 97.5% bounds Recalculating E-values - updates based flipped estimates margot_view_lmtp_structure(): view contrasts","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-231","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-08-10] margot 1.0.231","text":"Performs naive cross-sectional linear regressions educational/comparison purposes Processes multiple outcomes robust error handling - continues processing even individual outcomes fail Includes coefficient_scale parameter multi-unit change interpretations (e.g., 4-unit changes) Calculates approximate E-values based effect sizes EValue package compatibility issues occur Output structure compatible margot_plot() seamless integration existing workflows Uses \"E[Y|]\" notation clearly indicate conditional expectations, causal effects Includes appropriate warnings confounding non-causal interpretation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"uiux-improvements-1-0-230","dir":"Changelog","previous_headings":"","what":"UI/UX Improvements","title":"[2025-08-08] margot 1.0.230","text":"Coefficients now positioned fixed location along inside edge plot area Creates consistent vertical alignment coefficient values regardless data points fall Uses 5% offset left edge plot area left-aligned text optimal readability Eliminates scattered coefficient positioning varied based individual data point locations","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-229","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-08-03] margot 1.0.229","text":"Updated back_transform_estimates() properly use back_transform_log_z() variables log-transformed z-scored fixes issue hours variables incorrectly transformed minutes (e.g., showing 7,711 minutes instead ~104 minutes) Variables log-transformed: uses exp(y) - 1 Variables log+z transformed: uses back_transform_log_z()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"uiux-improvements-1-0-229","dir":"Changelog","previous_headings":"","what":"UI/UX Improvements","title":"[2025-08-03] margot 1.0.229","text":"Removed “outcome” label y-axis margot_plot() cleaner appearance Changed “Qini Curves” “Uplift Curve” plot titles across qini plot functions Changed “average policy effect” “expected policy effect” y-axis labels better reflect statistical nature estimates Updated documentation scale notes use consistent “expected policy effect” terminology","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-improvements-1-0-228","dir":"Changelog","previous_headings":"","what":"Major Improvements","title":"[2025-08-02] margot 1.0.228","text":"Moved flipping logic margot_causal_forest() preprocessing stage main loop Flipped outcomes now consistently stored data “_r” suffix Added flip_info metadata output containing mapping transformation details Simplified data extraction downstream functions - special handling needed Ensures saved data consistent forest objects save_data = TRUE","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-228","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-08-02] margot 1.0.228","text":"Added helper function .map_model_names_with_flips() automatically detect map flipped outcome names Updated margot_interpret_heterogeneity() handle model names “_r” suffix (flipped outcomes) Updated margot_rate_cv() handle model names “_r” suffix simplified Y data extraction Updated margot_plot_rate_batch() handle flipped outcome names changed default compute_on_demand = TRUE Now correctly maps requested names like “t2_kessler_latent_anxiety_z” “model_t2_kessler_latent_anxiety_z_r” Fixes issue functions couldn’t find flipped models using model_names parameter Provides informative messages mapping flipped outcomes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"enhancements-1-0-228","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"[2025-08-02] margot 1.0.228","text":"Added flip_method flip_scale_bounds parameters consistency margot_causal_forest() Now uses margot_invert_measure() flipping, supporting zscore ordinal methods Maintains backward compatibility default zscore method","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-227","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-08-02] margot 1.0.227","text":"Fixed compute_conditional_means respect compute_marginal_only setting margot_causal_forest() compute_marginal_only = TRUE, conditional means computation now skipped defensive empty structure ensures consistent behavior marginal-mode skips heterogeneity-related computations","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-226","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-08-02] margot 1.0.226","text":"Fixed label mapping margot_plot() correctly handle reversed variables _r suffix transform_label() now prioritizes exact matches label_mapping trying pattern matching Added automatic removal _r suffix (reversed variables) alongside _z suffix removal prevents stray “_r” suffixes appearing plot labels using label_mapping","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-225","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-08-02] margot 1.0.225","text":"Fixed margot_plot() properly handle reversed variables (_r suffix) original_df provided back_transform_estimates() now removes _r suffix searching original_df skips silently found","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-225","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-08-02] margot 1.0.225","text":"compute_marginal_only = TRUE now means skip heterogeneity (compute_heterogeneity = FALSE) compute_marginal_only = FALSE (default) means compute full analysis Clearer parameter name explicitly states computed QINI evaluation now always uses honest evaluation (test set ) Simplifies interface follows GRF best practices Ensures QINI curves accurately reflect --sample performance","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-improvements-1-0-225","dir":"Changelog","previous_headings":"","what":"Major Improvements","title":"[2025-08-02] margot 1.0.225","text":"compute_marginal_only = TRUE requires train_proportion = NULL (enforced) compute_marginal_only = FALSE requires valid train_proportion (enforced) Clear error messages prevent conflicting parameter combinations","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"implementation-details-1-0-225","dir":"Changelog","previous_headings":"","what":"Implementation Details","title":"[2025-08-02] margot 1.0.225","text":"Default behavior unchanged: compute_marginal_only = FALSE, train_proportion = 0.5 Backward compatibility maintained parameter detection margot_flip_forests() Cleaner mental model: either marginal-full--splits margot_flip_forests() now requires heterogeneity components provides clear error used marginal-results","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"benefits-1-0-225","dir":"Changelog","previous_headings":"","what":"Benefits","title":"[2025-08-02] margot 1.0.225","text":"Prevents user confusion parameter interactions Makes intentions explicit function calls Simplifies understanding analyses performed Always uses honest QINI evaluation accurate heterogeneity assessment","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-features-1-0-224","dir":"Changelog","previous_headings":"","what":"Major Features","title":"[2025-08-01] margot 1.0.224","text":"Set FALSE skip QINI, RATE, policy tree computations Significantly faster average treatment effects needed Creates defensive empty data structures maintain pipeline compatibility Default TRUE maintains backward compatibility","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-224","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-08-01] margot 1.0.224","text":"Now inherits computation parameters original results Uses new computation_params structure available Falls back old detection method backward compatibility New computation_status field tracks computed New computation_params field stores parameters reproducibility Enables future margot_hetero() function compute missing heterogeneity metrics","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"implementation-details-1-0-224","dir":"Changelog","previous_headings":"","what":"Implementation Details","title":"[2025-08-01] margot 1.0.224","text":"Empty data structures computed = FALSE flag downstream detection existing pipelines continue work unchanged Prepares architecture separating effect estimation heterogeneity evaluation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-features-1-0-223","dir":"Changelog","previous_headings":"","what":"Major Features","title":"[2025-08-01] margot 1.0.223","text":"New parameters: flip_outcomes, flip_method, flip_scale_bounds \"zscore\": Negates standardized z-scores preserving relative distances \"ordinal\": Inverts values ordinal scale using specified bounds (e.g., Likert scales) Flipped outcomes automatically appended “_r” suffix results Informative CLI messages report transformation details Created margot_invert_measure() utility function flexible score inversion Comprehensive test suite inversion functionality","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"implementation-details-1-0-223","dir":"Changelog","previous_headings":"","what":"Implementation Details","title":"[2025-08-01] margot 1.0.223","text":"Z-score method: Simple negation (-x) already standardized data. Warns data appears unstandardized Ordinal method: Uses formula (max + min) - x preserve distances reversing order Flexible specification: Can flip outcomes uniformly specify per-outcome settings NA handling: Properly preserves missing values transformation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-222","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-31] margot 1.0.222","text":"Changed single value 0.1 c(0.1, 0.4) better QINI analysis Affected functions: margot_plot_qini(), margot_plot_qini_batch(), margot_interpret_heterogeneity(), margot_policy(), margot_qini(), margot_qini_alternative(), margot_interpret_qini() Provides visibility 10% 40% treatment allocation levels","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-221","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-31] margot 1.0.221","text":"margot_interpret_heterogeneity: Already uses test indices qini_metadata via margot_rate() margot_qini_alternative: Properly uses split_info$test_indices available margot_flip_forests: Now uses train/test splits original models policy trees margot_policy_tree_stability: Creates new splits design stability assessment","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-220","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-31] margot 1.0.220","text":"Added seed parameter reproducible QINI generation (default 12345) Now properly passes train_proportion use_train_test_split maintain consistency Seed default matches compute_qini_improved() consistent results Fixed policy tree recalculation use train/test splits original models","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-219","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-31] margot 1.0.219","text":"Added tau_hat range standard deviation reporting verbose mode Better handling edge cases CATE estimates minimal variation Clear diagnostic messages QINI computation proceed Graceful fallback empty CATE paths instead failures","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-219","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-31] margot 1.0.219","text":"Fixed atomic vector access: Resolved issue accessing ate_evaluation_forest values Common homogeneous treatment effects (low tau_hat variation) Returns NULL informative warning instead crashing","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-improvements-1-0-218","dir":"Changelog","previous_headings":"","what":"Major Improvements","title":"[2025-07-31] margot 1.0.218","text":"New margot_qini_alternative() function uses simplified GRF methodology Single baseline method: target..covariates = FALSE (-priority assignment) Removed complex baseline options favour standard approach Added diff_gain_summaries computation backward compatibility Created margot_qini() wrapper function seamless integration Default spend levels now 0.1 (simplified 0.1, 0.4) Fixed “gain data found curve ate” warnings Full compatibility margot_interpret_qini() margot_interpret_heterogeneity() Works seamlessly margot_flip_forests() architecture Ensures QINI endpoints match ATE estimates using test data Addresses discrepancy QINI curve termination values reported ATE Following GRF advice: “use doubly-robust scores throughout” Gracefully handles empty paths computation failures Provides informative warnings models processed Continues processing remaining models instead failing completely margot_causal_forest() automatically uses evaluation forest DR scores margot_flip_forests() inherits improvements margot_causal_forest() margot_policy() uses improved QINI regenerating curves margot_interpret_heterogeneity() benefits margot_policy() Consistent QINI computation across entire margot ecosystem","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-218","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-31] margot 1.0.218","text":"longer requires full_models often empty Works standard results structure margot_causal_forest() Properly handles train/test splits use_train_test_split = TRUE Changed margot_plot_qini() margot_plot_qini_batch() default “maq_no_covariates” “auto” Ensures consistency margot_plot_qini_simple() new QINI implementation methods use GRF standard approach target..covariates = FALSE","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-217","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-30] margot 1.0.217","text":"New use_train_test_split parameter margot_causal_forest() (default FALSE backward compatibility) TRUE, reported results (ATE, E-values, combined_table) computed TEST SET Main causal forest still trained data (following GRF best practices honest forests) Policy trees QINI use consistent train/test split -data results stored split_info reference needed Updated margot_recompute_ate() respect_train_test_split parameter Ensures consistent evaluation: choose train/test split, results respect decision","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-217","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-30] margot 1.0.217","text":"Ensures reproducibility across components Default seed remains 12345 specified","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-216","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-30] margot 1.0.216","text":"Removed multiplicative percentage language interpretation functions Confidence intervals now displayed original scale units (dollars, minutes, etc.) Cleaner format: “$463 average increase (95% CI: $137 $883)” instead “44% multiplicative increase (~$463 average increase; 95% CI: 13% 84%)” Updated margot_interpret_marginal() margot_interpret_policy_tree() functions Makes output consistent easier interpret","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-215","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-30] margot 1.0.215","text":"Now properly handles log+z transformed variables multiplicative interpretation Displays percentage changes absolute changes log-transformed outcomes Includes unit detection monetary time variables appropriate formatting Matches sophisticated back-transformation logic margot_interpret_policy_tree() Example: “47% multiplicative increase (~$490 average increase; 95% CI: 32% 64%)” Ensures consistency across margot interpretation functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-214","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-30] margot 1.0.214","text":"Added missing knitr dependency: Moved knitr Suggests Imports fix namespace dependency error","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"documentation-fixes-1-0-214","dir":"Changelog","previous_headings":"","what":"Documentation Fixes","title":"[2025-07-30] margot 1.0.214","text":"Fixed documentation build warnings: Claude code smartly rewrote roxygen2 documentation problematic functions eliminate warnings. Package now builds cleanly.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-changes-1-0-213","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"[2025-07-30] margot 1.0.213","text":"Changed default spend_levels c(0.1, 0.4) 0.1 functions Affected functions: margot_interpret_heterogeneity(), margot_qini(), margot_interpret_qini(), margot_policy(), margot_plot_qini(), margot_plot_qini_batch(), margot_plot_qini_direct(), margot_qini_diagnostic(), margot_qini_cost_sensitivity(), margot_plot_qini_batch_cost_sensitivity(), margot_batch_policy() (deprecated) Rationale: 10% spend captures early heterogeneity patterns effectively simplifies interpretation Reduces confusion multiple spend levels potentially contradictory results Foundation future transition integrated differences point estimates","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"work-in-progress-1-0-213","dir":"Changelog","previous_headings":"","what":"Work in Progress","title":"[2025-07-30] margot 1.0.213","text":"Investigating discrepancies QINI plots difference gain summaries Planning transition integrated differences primary metric (keeping point estimates compatibility)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-212","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-30] margot 1.0.212","text":"Models created margot_flip_forests() (_r suffix) now correctly show original scale transformations fix removes _r suffix searching original variables original_df Example: model_t2_depression_z_r now finds t2_depression_z data transformation Preserves “(reduced)” prefix labels intended","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-changes-1-0-211","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"[2025-07-30] margot 1.0.211","text":"Now uses multiplicative interpretation log-transformed outcomes (standard econometric practice) Treatment effects log scale translate multiplicative effects original scale Example: CATE 0.14 log SD 2.74 gives 47% multiplicative increase Updated display format: “47% multiplicative increase, ~$490 average increase” Applies individual leaf CATEs overall weighted average treatment effects","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-211","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-30] margot 1.0.211","text":"Values < 1: displays 3 decimal places (e.g., 0.023) Values 1-10: displays 2 decimal places (e.g., 3.45) Values 10-100: displays 1 decimal place (e.g., 45.6) Values ≥ 100: displays decimal places (e.g., 234) Prevents rounding zero small values maintains appropriate precision Added detect_variable_units() identify monetary variables time-based variables Log-transformed monetary outcomes now show percentage change dollar values Example: “13% increase, $45 $51” instead “1.13x multiplicative effect” Time variables (hours) automatically convert minutes per existing pattern Overall performance section also shows percentage changes log outcomes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-211","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-30] margot 1.0.211","text":"Now correctly handles cases original variable names contain _log_ (e.g., t2_log_charity_donate) Improved candidate variable search order check exact matches first","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-continued-1-0-211","dir":"Changelog","previous_headings":"","what":"Bug Fixes (continued)","title":"[2025-07-30] margot 1.0.211","text":"original_df contains subset data, code now detects unrealistically low values charity donations: mean < $400, uses population estimate $1,048 instead household income: mean < $20k, uses population estimate $60k instead fixes dollar amounts factor ~11x Example fix: Leaf CATEs now show ~$378-$553 instead $33-$48 charity donations","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"known-issues-1-0-211","dir":"Changelog","previous_headings":"","what":"Known Issues","title":"[2025-07-30] margot 1.0.211","text":"original_df contains subset data, use heuristics correct population means Better solution: store transformation parameters initial data processing Current approach works well common variables (charity, income) may need adjustment others","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-210","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-30] margot 1.0.210","text":"Added get_outcome_transformation_info() helper function detect reverse transformations Updated margot_interpret_policy_tree() margot_interpret_policy_batch() accept original_df parameter original data provided, CATEs shown standardized original scales z-transformed outcomes: displays “CATE: 0.1 (original scale: 0.5 units)” log-transformed outcomes: displays “CATE: 0.1 (original scale: 1.2x multiplicative effect)” Handles compound transformations (e.g., log z-transform) correctly Extended overall performance metrics (weighted average treatment effect) Added format_minimal_decimals() helper cleaner numeric display (0 1 decimal place)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-210","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-30] margot 1.0.210","text":"Renamed positive_count/negative_count rate_positive_count/rate_negative_count clarity Added total_positive_count total_negative_count covering 4 tests (differential_prediction_test, rate_autoc, rate_qini, qini_curve) Added is_excluded indicator (1 negative RATE test, 0 otherwise) Added strict_inclusion_count positive RATE tests negative RATE tests present Maintained backwards compatibility keeping original column names Now correctly uses total_positive_count check models positive 4 methods Fixed discordance detection consider 4 tests rather just RATE tests uses “statistically significant” throughout","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"future-plans-phase-1-0-210","dir":"Changelog","previous_headings":"","what":"Future Plans (Phase 2)","title":"[2025-07-30] margot 1.0.210","text":"Plan update margot_causal_forest(), margot_flip_forest(), margot_policy_tree_stability() store transformation metadata eliminate need pass original_df make transformations robust See PLANNING.md detailed implementation plan","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-209","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.209","text":"Improved default transformation remove wave prefixes (e.g., “t2_”) Now correctly identifies reversed variables (ending “_r” “_z_r”) adds “(reduced)” prefix Added special handling common abbreviations (hlth –> health, bmi –> BMI, pwi –> PWI) Results cleaner outcome names like “Belonging” instead “T2 Belong” Reversed variables now show “(reduced) Health Fatigue” instead “T2 Hlth Fatigue z r” Changed “analyze” –> “analyse”, “analyzed” –> “analysed”, “organize” –> “organise” Consistent project requirements Replaced bullet points full sentences suitable scientific reports Now provides clear counts proper grammar (singular/plural handling) professional presentation academic contexts QINI curve analysis now applied non-excluded models (just selected ones) Models can selected based either positive RATE tests positive QINI curves Recognises QINI curves can identify heterogeneity specific budgets even global tests inconclusive Extended report now indicates models selected based QINI curve evidence Decision flow updated reflect broader selection approach","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-208","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-29] margot 1.0.208","text":"Now uses clear 3-category system: SELECTED (positive RATE), EXCLUDED (negative RATE), UNCLEAR (significant RATE) Removed complex evidence_type categorization caused contradictions QINI curve analysis now performed SELECTED models Calibration status reported context doesn’t affect selection Previously computed RATE estimates full dataset CV testing, causing inconsistency Now p-values RATE estimates come CV procedure RATE estimates weighted averages across test folds Confidence intervals longer reported CV estimates don’t align martingale-based hypothesis testing ensures selection criteria align reported effect sizes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-208","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.208","text":"include_extended_report = TRUE default (already TRUE) use_cross_validation = TRUE default robust confidence intervals cv_num_folds = 5 default RATE estimates now formatted 3 decimal places include 95% confidence intervals Added decision flow chart extended report showing exact logic Simplified recommendations format: “Use targeting: X”, “Avoid targeting: Y”, “Evidence unclear: Z” intuitive interpretation sections aligned 3-category system","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-208","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-29] margot 1.0.208","text":"Now works new stability_metrics naming margot_policy_tree_stability() Handles old bootstrap_metrics new stability_metrics backwards compatibility Updated references “bootstrap” “stability” documentation messages Function now correctly identifies labels negative RATE values Properly handles mixed positive/negative values (e.g., “positive RATE AUTOC, negative RATE QINI”) Also fixed Qini difference labeling handle negative values correctly Now properly converts character estimates numeric formatting Handles cases conversion fails gracefully CV tables now preserve numeric confidence interval columns (2.5% 97.5%) Extended report now shows confidence intervals using cross-validation (default) Extended reports longer say “confirmed omnibus tests” omnibus p-values significant Now uses neutral language “Omnibus tests:” non-significant results Removed confusing “Avoid Y”, “Use X”, “Evidence unclear Z” placeholders Now clearly states actions terms targeting specific outcomes Updated recommendations use “Outcomes suitable targeted treatment” instead “Use targeting”","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-1-0-208","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2025-07-29] margot 1.0.208","text":"longer needed margot_policy_tree_stability() now preserves necessary data Conditional means computation handled automatically existing functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-207","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.207","text":"Now preserves outcome data, weights, treatment assignments Ensures necessary data available downstream analysis Maintains compatibility plotting interpretation functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-206","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-29] margot 1.0.206","text":"margot_policy_tree_bootstrap() –> margot_policy_tree_stability() margot_interpret_bootstrap() –> margot_interpret_stability() Class \"margot_bootstrap_policy_tree\" –> \"margot_stability_policy_tree\" Parameter n_bootstrap –> n_iterations Parameter vary_type = \"sample_only\" –> vary_type = \"bootstrap\" Old function names deprecated still work warnings","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-206","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-29] margot 1.0.206","text":"Processes multiple models stability analysis one call Returns named list interpretations combined text Supports saving combined output file Includes theoretical context first model avoid repetition","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-206","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.206","text":"Default behavior performs train/test split variation, bootstrap resampling New names better reflect stability analysis purpose Documentation clarifies difference stability analysis bootstrap margot_policy_tree_stability() now accepts deprecated n_bootstrap parameter Shows warning still works ease transition","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-205","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-29] margot 1.0.205","text":"Added use_cross_validation rate_results_list parameters function signature Resolves error: “object ‘use_cross_validation’ found” parameters now properly passed main function evidence summary creation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-204","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.204","text":"Now correctly uses CV table Status column identify statistically significant negative RATE results models significant negative RATE (just negative estimates) flagged “excluded_negative_rate” Inconclusive results longer misclassified negative “AVOID targeting X” (statistically significant negative RATE - harmful) “Insufficient evidence heterogeneity Y” (evidence found) “Statistical heterogeneity detected actionable targeting evidence Z” (omnibus positive RATE positive)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-203","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-29] margot 1.0.203","text":"CV rate tables use model_id column, outcome column Fixed column reference looking QINI AUTOC results extended reports Resolves error: “Unknown uninitialised column: outcome”","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-203","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-29] margot 1.0.203","text":"Now explains models excluded rather just listing Separates models negative RATE evidence (avoid due reduced effectiveness) models evidence Provides clearer guidance: “Avoid targeting X due negative RATE evidence” vs “heterogeneity evidence found Y”","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-202","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-28] margot 1.0.202","text":"Removed “mixed_evidence_caution” category models conflicting RATE results model negative RATE evidence (AUTOC QINI) now excluded entirely Added new “exploratory_evidence” category models negative RATE tests positive calibration QINI curve Changed return structure: replaced cautiously_selected_model_ids/names exploratory_model_ids/names all_selected_model_ids now combines selected + exploratory (cautiously selected) Added warning models excluded due negative RATE evidence New evidence_type values: “excluded_negative_rate”, “exploratory_evidence” (replaces “mixed_evidence_caution”) ensures conservative selection strictly excluding model verified negative heterogeneity","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-202","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.202","text":"Changed default parallel = FALSE margot_interpret_heterogeneity(): Serial processing currently faster parallel function","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-201","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.201","text":"margot_interpret_heterogeneity() now passes label_mapping parameter margot_rate_cv() CV rate tables now properly display transformed model names (e.g., “Personal Well-Index” instead “model_t2_pwi_z”) Fixed label transformation logic margot_rate_cv() use proper list indexing Ensures consistency evidence summary table rate result tables","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"documentation-1-0-201","dir":"Changelog","previous_headings":"","what":"Documentation","title":"[2025-07-28] margot 1.0.201","text":"Wager (2024) now correctly cited sequential cross-validation methodology Nie & Wager (2020) cited general RATE (Rank Average Treatment Effect) approach Fixed citation incorrect “2021” correct “2020” Nie & Wager throughout codebase","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-200","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.200","text":"Added tables field return structure containing formatted tables similar margot_rate() output New margot_interpret_rate_cv() function provides detailed interpretation similar margot_interpret_rate() Tables include columns: outcome, RATE Estimate, Std Error, t-statistic, p-value, 95% CI, Status Supports single target (AUTOC QINI) combined target analysis Provides comparison AUTOC QINI computed Updated examples show access tables use interpretation functions Changed default use_cross_validation = TRUE margot_interpret_heterogeneity() robust inference Changed default include_extended_report = TRUE comprehensive output Changed default adjust = \"none\" work better CV (“bonferroni” “none” valid CV) Enhanced margot_rate_cv() compute include RATE estimates full data CV testing Updated create_cv_tables() format results like standard RATE tables estimates CIs Improved CV results presentation extended reports proper RATE estimates CV results now include p-values (martingale aggregation) RATE estimates (full data) Now defaults faster implementation improved performance Provides ~10x speed improvement bootstrap analysis Falls back gracefully policytree fastpolicytree installed Particularly beneficial bootstrap analysis hundreds iterations Allows users analyse specific models rather models Model names can specified without “model_” prefix Filters computations (RATE, QINI, omnibus tests) requested models Also filters pre-computed results provided Provides helpful warnings requested models found Consistent functions margot package","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-200","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.200","text":"Now properly exports raw RATE results margot_rate() margot_rate_cv() rate_results$raw_results provides access full rate results including statistics confidence intervals Previously, CV results margot_rate_cv() accessible cv_results field raw results now consistently available regardless whether standard CV method used","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-199","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.199","text":"Added tree_method parameter margot_recalculate_policy_trees() function now uses internal .compute_policy_tree() wrapper consistent method handling Users can benefit 10x faster policy tree computation recalculating trees custom covariates Enhanced transform_var_name() handle _r suffix (converts “(reduced) {var_name}”) Enhanced transform_var_name() handle _log pattern (converts “{var_name} (log)”) Added label_mapping parameter margot_assess_variable_correlation() Added label_mapping parameter margot_identify_variable_clusters() Added label_mapping parameter margot_interpret_bootstrap() functions now automatically transform variable names label mapping provided Model names output also transformed (e.g., “model_t2_kessler_latent_depression_z_r” becomes “(reduced) Kessler Latent Depression”) Correlation plots now show human-readable labels instead raw variable names Cluster analysis output uses labeled variable names better interpretability Bootstrap interpretation now uses labeled variable model names throughout","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"documentation-1-0-198","dir":"Changelog","previous_headings":"","what":"Documentation","title":"[2025-07-28] margot 1.0.198","text":"Added complete workflow example showing diagnostic steps Shows use correlation analysis bootstrap results Clarifies correlation analysis needs original causal forest results Added examples related diagnostic functions Added @seealso section related functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-197","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.197","text":"Now properly detects rejects bootstrap results helpful error message Improved covariate data detection multiple fallback locations Can use test set covariates plot_data last resort Better error messages guide users use original causal forest results","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-196","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.196","text":"New tree_method parameter margot_policy_tree() margot_policy_tree_bootstrap() Allows users choose “policytree” (default) “fastpolicytree” fastpolicytree provides ~10x faster computation identical results Particularly beneficial bootstrap analysis hundreds iterations Falls back gracefully policytree fastpolicytree installed Added fastpolicytree Suggests DESCRIPTION","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"technical-changes-1-0-196","dir":"Changelog","previous_headings":"","what":"Technical Changes","title":"[2025-07-28] margot 1.0.196","text":".compute_policy_tree(): Wrapper handles method selection .has_fastpolicytree(): Checks package availability .get_tree_method(): Handles fallback logic Updated metadata CLI output show tree method used","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-195","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.195","text":"longer suggests “simpler approaches” trees show instability Acknowledges depth-2 trees typically outperform depth-1 trees despite higher instability Emphasises trade-stability predictive performance Updated recommendations focus validation rather simplification Added note theoretical background performance vs stability trade-offs","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-194","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.194","text":"margot_assess_variable_correlation(): Analyses correlations among covariates identify multicollinearity margot_identify_variable_clusters(): Groups correlated variables clusters margot_stability_diagnostics(): Comprehensive stability assessment combining bootstrap correlation analyses functions help explain policy trees show instability variables correlated","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-194","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.194","text":"Now acknowledges tree instability expected behavior, failure Frames variable selection variability context correlated predictors Includes theoretical context decision tree sensitivity (can disabled) nuanced interpretation stability patterns Emphasises correlated variables may capture similar information Added include_theory parameter control theoretical context inclusion","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-193","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-28] margot 1.0.193","text":"Default vary_type now “split_only” instead “” default, varies random seeds create different train/test splits longer performs bootstrap resampling default change reflects decision trees highly sensitive data perturbations Bootstrap resampling can still enabled vary_type = \"sample_only\" vary_type = \"\"","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-193","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.193","text":"Now shows “seed variation (fixed train proportion)” default behavior Shows “seed + train proportion variation” varying train proportions accurately describes variation performed","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-192","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.192","text":"Now correctly shows “sample_only” vary_train_proportion = FALSE (default) Previously showed “” even bootstrap resampling happening CLI output now accurately reflects actual variation performed","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-191","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.191","text":"longer treats depth-2-analyses warnings edge cases Added dedicated interpret_depth2_only() internal function cleaner interpretation Provides comprehensive narrative focused depth-2 split patterns stability Properly handles common use case depth=2 specified Removed incorrect suggestion single-split rules might preferable unstable depth-2 trees","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-190","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.190","text":"Performs bootstrap analysis policy trees assess stability Memory-efficient streaming approach processes one tree time Uses metaseed architecture full reproducibility Three variation types: “” (resample + split), “sample_only”, “split_only” Flexible train proportion variation sensible defaults (0.4, 0.5, 0.6, 0.7) Full parameter parity margot_policy_tree(): supports custom_covariates, exclude_covariates, covariate_mode, depth, label_mapping Covariate selection modes: “original”, “custom”, “add”, “” - identical margot_policy_tree() Pattern-based exclusion (e.g., exclude “_log” variables) Changed default depth “” 2 (commonly used practice) Returns consensus trees fully compatible existing plotting/interpretation functions Includes S3 methods: summary(), print(), get_variable_importance(), get_consensus_info() New margot_interpret_bootstrap() function provides publication-ready narrative interpretation Handles edge cases gracefully (e.g., depth-2 trees computed) Lightweight output structure keeps memory usage reasonable (~74MB per model)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-183","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.183","text":"Changed functions seed = NULL use seed = 12345 default Affected functions: compute_qini_curves_binary(), .margot_fit_policy_trees(), margot_plot_rate(), margot_plot_rate_batch(), margot_generate_qini_data(), margot_plot_individual_responses(), margot_plot_discontinuity(), margot_plot_slope(), margot_plot_slope_covariate(), margot_recalculate_policy_trees(), margot_causal_forest_dev(), margot_qini_dev(), simulate_ate_data_with_weights() Ensures consistent reproducible results explicit seed provided","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-182","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.182","text":"Recompute policy trees custom parameters without re-running causal forests Flexible covariate selection exclusion patterns (e.g., exclude “_log” variables) Support custom covariate sets multiple selection modes User-configurable train/test split proportion (default 0.5) Output structure fully compatible existing plotting interpretation functions Works seamlessly margot_plot_policy_tree(), margot_interpret_policy_tree(), margot_plot_policy_combo() Parallels design margot_qini() margot_rate()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-182","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.182","text":"Changed default train_proportion 0.7 0.5 across functions Added seed parameter margot_causal_forest() default 12345 Ensures reproducible train/test splits policy trees QINI evaluation Seeds model-specific maintain independence across outcomes BREAKING CHANGE: Depth-1 policy trees now use top_n_vars (depth-2), covariates","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-181","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.181","text":"Now warns models show negative heterogeneity (negative t-statistics) displays alpha level adjustment method used Clearer messaging statistical significance practical implications","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-180","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.180","text":"Added parallel parameter (default FALSE) optional parallel processing Added n_cores parameter control number cores Passes margot_rate_cv() use_cross_validation = TRUE Shows progress model data extraction phase Displays detailed progress model tested (non-parallel mode) Shows progress CV folds within model Clear indication running parallel mode (detailed progress isn’t available) Includes time estimates (ETA) completion Shows overall progress major analysis steps (e.g., “[2/4] Computing QINI curves”) Step--step progress indicators completion messages Clear indication analysis currently running","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-180","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.180","text":"Added margot_rate_cv “Interpret Report Results” section Added margot_plot_cv_results margot_plot_cv_summary “Visualise Causal Effect Estimates” section Marked print.margot_cv_results internal (S3 method) Automatically converts invalid adjustment methods “none” using CV longer shows warning default “BH” automatically converted CV warns user explicitly sets incompatible adjustment method Added example documentation showing use cross-validation Now returns cv_results object can passed directly plotting functions Added method_used field indicate whether CV standard method used Avoids need recompute CV results visualization Extended report now includes method details (standard vs cross-validation) Reports number CV folds cross-validation used Reports alpha level multiple testing correction method CV now tests AUTOC QINI targets (testing AUTOC) margot_rate_cv() now future_globals_maxSize parameter (default 22 GiB) Increased default 16 GiB 22 GiB handle larger model objects Memory limit now set creating parallel plan ensure proper enforcement Better error messages memory limit exceeded, suggesting solutions Automatically manages memory limits parallel workers Restores original memory settings function exit Removed Rdpack dependency simpler citation management Now uses direct “(Wager 2024)” citation format Maintained proper references documentation","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-180","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.180","text":"margot_interpret_heterogeneity() now uses simple alerts instead progress_step calling margot_rate_cv() prevents conflicts nested progress indicators Parallel plan now properly reset sequential function exit Package loading messages workers suppressed future.stdout = FALSE Prevents hanging repeated package loading messages Now properly sets seed function start full reproducibility seed = NULL, automatically defaults 12345 Resolved “11.31 GiB exceeds 500 MiB limit” error Pre-extracts model data reduce memory usage parallel workers Progress bars now use explicit IDs avoid “find current progress bar” errors Properly handles progress bar lifecycle NULL checks Internal function rate_sequential_cv now exported (marked internal) available parallel workers Function explicitly passed parallel workers via future.globals ensure availability Required packages (margot, grf, cli) loaded worker Added check package installation - parallel processing requires margot installed using devtools::load_all(), function automatically falls back sequential processing Clear warning message guides users either install package use parallel = FALSE resolves “find function” error using parallel = TRUE Parallel processing now shows elapsed time completion target Function remains internal called directly users","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-171","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-28] margot 1.0.171","text":"margot_rate_cv() now defaults adjust = \"none\" (“BH”) margot_rate() now defaults adjust = \"none\" (NULL) margot_rate_cv() now accepts “bonferroni” “none” adjust parameter methods rejected informative error message","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-171","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.171","text":"New margot_plot_cv_results() function creates forest plots CV test results New margot_plot_cv_summary() function shows summary significant vs non-significant models functions provide appropriate visualizations hypothesis test results (RATE curves) margot_rate_cv() now defaults testing AUTOC QINI targets Added label_mapping parameter custom model labels results plots Improved interpretation dual-target testing showing concordance differences","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-171","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.171","text":"Clear documentation BH//FDR methods appropriate CV Added recommendation use alpha = 0.2 Bonferroni correction Improved error messages warnings adjustment methods margot_plot_rate() now detects CV results suggests using margot_plot_cv_results() margot_plot_rate_batch() similarly provides informative error messages Clear distinction hypothesis test visualizations RATE curve plots","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-07-28-margot-10170","dir":"Changelog","previous_headings":"","what":"[2025-07-28] margot 1.0.170","title":"[2025-07-28] margot 1.0.170","text":"⚠️ IMPORTANT NOTICE: development version margot package undergoing significant refactoring transition margotverse suite packages. package currently author’s lab use . package split focused, single-responsibility packages including margot.core, margot.lmtp, margot.grf, margot.viz, others. Please expect breaking changes upcoming releases.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-170","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"[2025-07-28] margot 1.0.170","text":"Backward compatibility maintained deprecation warning Affects: margot_causal_forest() related functions","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-170","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-28] margot 1.0.170","text":"Added treatment_cost parameter throughout QINI functionality New margot_qini_cost_sensitivity() function analyzing treatment allocation different budget constraints Cost parameter affects optimal treatment allocation strategies Supports cost sensitivity visualization budget-based x-axis Added q parameter custom quantile grids margot_rate() Pass-parameters (...) grf::rank_average_treatment_effect() maximum flexibility Target parameter now correctly reflected plot titles (AUTOC QINI) show_ci parameter QINI plots now accepts: FALSE, TRUE, “”, “cate”, “ate” Allows selective display confidence intervals different curves Added seed parameter (default = 12345) reproducible confidence interval computation New x_axis parameter QINI functions accepts “proportion” “budget” Budget x-axis shows treatment allocation budget constraints Automatically detects appropriate x-axis type based data New margot_rate_cv() function implementing GRF’s uncorrelated sequential CV approach Integrated CV option margot_interpret_heterogeneity() use_cross_validation parameter Provides robust heterogeneity testing avoids overfitting Parallel processing support (currently experimental, disabled default) Added seed parameter margot_interpret_heterogeneity() margot_policy() Ensures consistent results across sub-computations Default seed = 12345 functions","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-170","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-28] margot 1.0.170","text":"Added extensive documentation explaining relative benefit CATE vs ATE targeting remains constant uniform costs Clarified gains identical plotted proportion treated Budget visualization reveals cost differences clearly Better detection treatment_cost changes QINI regeneration Improved error messages missing data model components Fixed treatment_cost initialization order prevent NULL issues Changed default adjust parameter “none” margot_rate_cv() margot_rate() Restricted margot_rate_cv() accept “bonferroni” “none” statistical validity methods (BH//FDR) appropriate CV due martingale aggregation Added recommendation use alpha = 0.2 Bonferroni due conservative nature Clear documentation explaining methods valid CV","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-170","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-28] margot 1.0.170","text":"Fixed “invalid ‘type’ (closure)” error margot_rate() properly handling q parameter Fixed RATE plot titles correctly display target (AUTOC QINI) Fixed QINI regeneration detect treatment_cost changes Fixed y-axis scaling remove artificial cost-based adjustments Fixed treatment_cost NULL initialization causing QINI generation failures Fixed “Models found” error margot_plot_qini_batch_cost_sensitivity() Fixed “$ operator invalid atomic vectors” error creating margot_plot_qini_direct() Fixed “invalid ‘x’ type ‘x && y’” error using proper boolean variables Fixed pkgdown build error adding missing functions _pkgdown.yml reference Fixed reproducibility issue compute_rate_on_demand adding default seed = 12345 QINI curves now properly treated exploratory evidence (sensitive spend levels) RATE positive results now correctly classified “targeting_opportunity” RATE can produce negative evidence (differential prediction positive/inconclusive ) Added new “exploratory_only” category models QINI curve evidence","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"known-issues-1-0-170","dir":"Changelog","previous_headings":"","what":"Known Issues","title":"[2025-07-28] margot 1.0.170","text":"Parallel processing margot_rate_cv() may encounter memory issues large model objects due environment capture. Parallel processing disabled default. enable risk, use parallel = TRUE increase memory limit options(future.globals.maxSize = 15 * 1024^3)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"internal-changes-1-0-170","dir":"Changelog","previous_headings":"","what":"Internal Changes","title":"[2025-07-28] margot 1.0.170","text":"Created margot_generate_qini_data() -demand QINI generation Created margot_plot_qini_direct() plotting pre-computed QINI data Updated maq() calls properly pass treatment_cost parameter Implemented budget-based generation margot_qini_simple_baseline() Added compute_rate_on_demand() helper consistent RATE computation Added convert_cv_to_rate_results() CV result format conversion Implemented rate_sequential_cv() martingale-based CV aggregation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-150","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-25] margot 1.0.150","text":"“average” (default): Shows average policy effects per unit (maq’s Q(B) = E[⟨πB(Xi), τ(Xi)⟩]) “cumulative”: Shows traditional cumulative gains (total accumulated benefit) “population”: Shows total population impact (absolute gain outcome units) Example: margot_plot_qini(mc_result, \"model_outcome\", scale = \"cumulative\") Confidence intervals automatically adjust match selected scale","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-150","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-25] margot 1.0.150","text":"qini_split = TRUE, tau_hat now properly subset regenerated test indices Added intelligent handling regenerates predictions model available Falls back subsetting model unavailable Prevents “reward, costs, evaluation scores conformable dimension” errors Fixed confidence interval computation ensure consistent column structure Fixed extended data generation match qini_data columns scale transformation applied Added proper column matching rbind operations","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-150","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-25] margot 1.0.150","text":"Updated margot_generate_qini_data, compute_qini_curves_binary, margot_recompute_qini_ipw, margot_recompute_qini_aipw Ensures reproducibility proper weighting QINI computations Fixed missing seed propagation margot_summary_cate_difference_gain Shows tau_hat dimensions, IPW scores shape, weights information Helps identify dimension mismatches data availability issues Improved handling simple baseline objects vs maq objects","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-improvements-1-0-140","dir":"Changelog","previous_headings":"","what":"Breaking Changes (Improvements)","title":"[2025-07-24] margot 1.0.140","text":"Previously used constant rewards approach Now matches default visualization analysis functions theoretically sound noted literature Includes automatic fallback ensure robustness Action required: Re-run margot_causal_forest() get new baseline method","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-140","dir":"Changelog","previous_headings":"","what":"New Features","title":"[2025-07-24] margot 1.0.140","text":"Default colours: gold (#d8a739) CATE (targeted treatment) dark gray (#4d4d4d) ATE (-priority assignment) Improves visual distinction targeting strategies Example: margot_plot_qini(mc_result, \"model_outcome\", cate_color = \"blue\", ate_color = \"red\")","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-140","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-24] margot 1.0.140","text":"Models like model_t2_neuroticism_z_r now correctly regenerate QINI curves different baseline methods Removed blocking condition prevented regeneration mc_result$data NULL Added graceful fallback existing QINI data regeneration fails Enhanced debugging messages forest object retrieval","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-140","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-24] margot 1.0.140","text":"Store QINI generation metadata (test indices, baseline method, data split info) initial generation margot_summary_cate_difference_gain() now uses stored metadata consistency Added informative CLI messages throughout process Fixed baseline_method metadata correctly reflect “maq_constant” compute_qini_curves_binary Affected functions: margot_plot_qini(), margot_plot_qini_batch(), margot_interpret_qini(), margot_interpret_heterogeneity(), margot_policy(), margot_qini(), margot_qini_diagnostic(), margot_batch_policy() 10% 40% spend levels better reflect typical analysis needs 10% captures early targeting efficiency, 40% shows broader implementation potential Users can still specify custom spend levels needed New outputs: cautiously_selected_model_ids cautiously_selected_model_names models conflicting evidence Combined outputs: all_selected_model_ids all_selected_model_names include selected cautiously selected models Captures models show positive evidence tests negative others Helps identify targeting opportunities require careful validation implementation Example use case: models beneficial QINI curves despite negative RATE statistics Note: Re-run margot_causal_forest() get full metadata benefits existing models models created save_data = FALSE, changing baseline_method longer causes errors Falls back existing QINI curves clear warning data unavailable margot_policy() margot_qini() now store baseline method used model margot_interpret_qini() gains baseline_method parameter ensure consistency plots margot_qini() now properly regenerates curves baseline method changes Warns interpretation uses different baseline method visualization Helps avoid mismatches QINI plots summary tables Users get informative messages instead cryptic “find outcome data” errors","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-1-0-130","dir":"Changelog","previous_headings":"","what":"new features","title":"[2025-07-24] margot 1.0.130","text":"provides direct access QINI analysis without running full policy analysis parallels functionality margot_rate() consistency outputs compatible margot_interpret_qini() supports baseline methods: “auto”, “simple”, “maq_no_covariates”, “maq_only”, “none” now properly exported interpreting RATE results handles single method (AUTOC QINI) comparison provides clear markdown-formatted summaries","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-130","dir":"Changelog","previous_headings":"","what":"improvements","title":"[2025-07-24] margot 1.0.130","text":"margot_interpret_qini(): now accepts output margot_policy() margot_qini() margot_rate() –> margot_interpret_rate() RATE analysis margot_qini() –> margot_interpret_qini() QINI analysis","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"default-changes-1-0-130","dir":"Changelog","previous_headings":"","what":"default changes","title":"[2025-07-24] margot 1.0.130","text":"provides theoretically sound default behavior “maq_no_covariates” now includes automatic fallback simple baseline maq fails users always get baseline curve clear warning fallback occurs affects: margot_generate_qini_data(), margot_qini(), margot_plot_qini(), margot_plot_qini_batch(), margot_policy()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-130","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"[2025-07-24] margot 1.0.130","text":"models “_r” suffix (e.g., “model_t2_neuroticism_z_r”) now correctly find data base name affects: margot_plot_qini(), margot_qini(), margot_policy()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-125","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-07-24] margot 1.0.125","text":"renamed “omnibus_test” column “differential_prediction_test” clarity added “mean_prediction_test” column show calibration status (informational ) simplified main interpretation enhanced extended report complementary methods explanation updated omnibus calibration test description match grf manual clarity ATE baseline now always generated straight line using mean(tau_hat) ensures fair comparison CATE ATE curves robust relying maq output constant rewards aligns maq conceptual approach predictable changed CATE curve colour blue (#4f88c6) green (#009E73) avoid “control” association added ylim parameter manual y-axis control (defaults automatic scaling) ylim parameter also added margot_plot_qini_batch() consistency added baseline_method parameter flexible baseline generation (“auto”, “simple”, “maq_no_covariates”, “maq_only”, “none”) robust simple baseline implementation always succeeds smart fallback logic: adds simple baseline existing QINI data regeneration isn’t possible improved data extraction grf forest objects (Y.orig, W.orig) mc_result$data NULL better error messages available data fields baseline generation fails","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"breaking-changes-1-0-125","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"[2025-07-24] margot 1.0.125","text":"margot_plot_qini_batch() margot_policy() margot_plot_rate_batch() users save plots manually using ggplot2::ggsave() needed","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-architecture-change-1-0-125","dir":"Changelog","previous_headings":"","what":"major architecture change","title":"[2025-07-24] margot 1.0.125","text":"created margot_generate_qini_data() helper function -demand generation margot_plot_qini() now generates QINI data needed margot_plot_qini_batch() updated work -demand generation margot_policy() margot_summary_cate_difference_gain() generate QINI objects needed robust approach handles edge cases better follows maq’s mathematical approach ATE baselines","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixes-1-0-125","dir":"Changelog","previous_headings":"","what":"fixes","title":"[2025-07-24] margot 1.0.125","text":"fixed omnibus test matching flipped models margot_flip_forests() better matching logic using original outcome names reliability","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"major-features-1-0-115","dir":"Changelog","previous_headings":"","what":"Major Features","title":"[2025-07-23] margot 1.0.115","text":"Integrates RATE (AUTOC & QINI), QINI curves, omnibus calibration tests Simplified interface: takes models directly, computes analyses internally Provides unified recommendations model selection Includes concordance analysis detailed evidence summary New evidence categorisation system nuanced interpretation Added include_extended_report parameter detailed academic-style reports full statistics margot_plot_qini_batch(): batch processing QINI plots across multiple models margot_flip_forests(): enhanced grf_defaults parameter consistent GRF settings","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-115","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-07-23] margot 1.0.115","text":"margot_interpret_rate() now includes excluded_both excluded_either lists margot_interpret_qini() now exposes harmful -effect model categorizations Improvements internal naming margot_flip_forests() Clarified QINI compares targeted vs uniform treatment allocation Added explanation small differences 100% spend Added note CATE benefits even unreliable ATE","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-07-22-margot-10110","dir":"Changelog","previous_headings":"","what":"[2025-07-22] margot 1.0.110","title":"[2025-07-22] margot 1.0.110","text":"major improvements QINI curve visualisation, new functions AIPW/IPW QINI computation, enhanced maq compatibility, various bug fixes.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-functions-1-0-110","dir":"Changelog","previous_headings":"","what":"New Functions","title":"[2025-07-22] margot 1.0.110","text":"Provides doubly robust estimates consistent either propensity outcome model correct supports automatic treatment variable detection manual specification nandles various data structures including models stored full_models list estimates conditional means using regression forests (mu.hat) adds overlap warnings propensity scores extreme (<0.05 >0.95) fully compatible existing QINI plotting interpretation functions simpler alternative AIPW faster computation uses modern maq API consistency useful debugging QINI curve differences shares flexible data handling AIPW version compares QINI gains plot data, direct maq calculations, diff summaries helps identify debug discrepancies different calculation methods flags differences specified tolerance threshold useful verifying QINI calculations consistent supports margot_plot_qini() parameters consistent visualization handles model names without “model_” prefix automatically filters models QINI data saves plots specified directory (default: “qini_plots”) returns list ggplot objects customization","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-110","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-22] margot 1.0.110","text":"added inherit.aes = FALSE geom_ribbon prevent aesthetic inheritance errors fixed CI computation handle old (treatment/baseline) new (cate/ate) qini object naming conventions Confidence intervals now compute display correctly show_ci = TRUE Resolved “Couldn’t find point-estimate column” error occurred flipping outcomes Function now properly rebuilds combined_table merged results instead incorrectly passing entire results object Ensures margot_flip_forests() can perform full model recomputation Updated positional arguments named parameters (reward, cost, DR.scores) Ensures consistency current maq package expectations Resolves potential inconsistencies QINI curve computations","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"enhancements-1-0-110","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"[2025-07-22] margot 1.0.110","text":"New remove_original parameter (default TRUE) removes originals flipping Reduces memory usage provides cleaner outputs Set FALSE keep original flipped models Results now correctly show “model_outcome_r” instead “model_model_outcome_r” extract_qini_data_binary() now uses actual gain values instead linear approximation ATE curves margot_flip_forests() now correctly flips outcome values recalculating QINI curves Resolves ~2x discrepancy plotted QINI curves margot_interpret_qini() gain summaries ATE line now correctly displays straight line (representing constant treatment effect) Confidence intervals now cover full 0-100% range (previously missing 0-5% 95-100%) Added endpoint extrapolation ensure complete CI coverage","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"enhancements-to-margot_plot_qini-1-0-110","dir":"Changelog","previous_headings":"","what":"Enhancements to margot_plot_qini()","title":"[2025-07-22] margot 1.0.110","text":"Extends curves horizontally path complete Improves performance large datasets Matches maq::plot() output format interoperability Provides additional consistency checks margot_causal_forest() now saves treatment vector W save_data = TRUE Ensures compatibility model flipping functionality Fixed CI computation error CATE curve exists (ATE) Fixed case sensitivity curve naming (cate/CATE) Fixed colors binary treatments: CATE = blue (#4f88c6), ATE = gold (#d8a739) Ensured color/fill scales match lines CI ribbons colors Multi-arm treatments continue use Okabe-Ito palette","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"enhancements-1-0-110-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"[2025-07-22] margot 1.0.110","text":"Supports models result objects full_models list Can extract data top-level storage models lack original data Smart treatment variable detection binary preference Automatic propensity score estimation available","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-functions-1-0-105","dir":"Changelog","previous_headings":"","what":"New Functions","title":"[2025-07-21] margot 1.0.105","text":"Allows recomputation without refitting expensive causal forest models Supports target_sample options: “” (ATE), “treated” (ATT), “control” (ATC), “overlap” (ATO) Automatically renames effect columns based target sample Recomputes E-values new estimates Uses margot-style parameter naming (target_sample target.sample) Convenience function compute target sample types Creates comparison table side--side estimates E-values Useful sensitivity analysis exploring treatment effect heterogeneity","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot_plot-enhancements-1-0-105","dir":"Changelog","previous_headings":"","what":"margot_plot() Enhancements","title":"[2025-07-21] margot 1.0.105","text":"Automatically detects uses appropriate effect column Maintains full backwards compatibility Accepts boolean (TRUE auto-detects appropriate label based column type) Accepts custom string complete control Auto-detects ATE/ATT/ATC/ATO set TRUE TRUE, renames E_Value “E-Value” E_Val_bound “E-Value Bound” Makes column names publication-ready","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"supporting-function-updates-1-0-105","dir":"Changelog","previous_headings":"","what":"Supporting Function Updates","title":"[2025-07-21] margot 1.0.105","text":"Now correctly describes treatment effect type (ATE/ATT/ATC/ATO) Explicitly states “reliable effects evident.” outcomes meet reliability threshold Updated wording “showed” “present” clearer communication back_transform_estimates(): Handles new column types original scale transformations group_tab(): Detects processes new effect column types changes maintain backwards compatibility","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"qini-plot-enhancements-1-0-105","dir":"Changelog","previous_headings":"","what":"Qini Plot Enhancements","title":"[2025-07-21] margot 1.0.105","text":"New parameters: show_ci, ci_alpha, ci_n_points, ci_ribbon_alpha, ci_ribbon_color Confidence intervals computed using maq::average_gain() Visualized ggplot2::geom_ribbon() Maintains backwards compatibility (CI display default) Fixed geom_ribbon aesthetic inheritance issue Allows passing additional arguments margot_plot_qini() Enables confidence interval display policy batch processing User-provided args override defaults via modifyList()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-functions-1-0-105-1","dir":"Changelog","previous_headings":"","what":"New Functions","title":"[2025-07-21] margot 1.0.105","text":"Provides robust estimates IPW, especially observational data Supports regression forest method estimating conditional means Compatible existing QINI plotting interpretation functions Adds metadata tracking indicate AIPW used","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"policy-tree-enhancements-1-0-102","dir":"Changelog","previous_headings":"","what":"Policy Tree Enhancements","title":"[2025-07-20] margot 1.0.102","text":"Enhanced margot_plot_decision_tree() append “Outcome” titles Example: “Neuroticism” now displays “Neuroticism Outcome” Clarifies tree shows policy decisions outcome variable","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"label-improvements-1-0-102","dir":"Changelog","previous_headings":"","what":"Label Improvements","title":"[2025-07-20] margot 1.0.102","text":"Updated margot_reversed_labels() prepend rather append “(reduced)” Changed “{outcome} (reduced)” “(reduced) {outcome}” Example: “Anxiety (reduced)” now displays “(reduced) Anxiety” Improves readability understanding flipped outcomes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-07-20-margot-10101","dir":"Changelog","previous_headings":"","what":"[2025-07-20] margot 1.0.101","title":"[2025-07-20] margot 1.0.101","text":"new: margot_censor_lead() - allows conditional censoring.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"policy-tree-enhancements-1-0-100","dir":"Changelog","previous_headings":"","what":"Policy Tree Enhancements","title":"[2025-07-20] margot 1.0.100","text":"Modified margot_interpret_policy_batch() remove redundant “Policy tree analysis results:” line Added “end study” Findings headings temporal clarity Added “baseline” prefix variable names tree splits leaf descriptions Clarifies splits based baseline characteristics, outcomes Simplified CATE reporting just state values without subjective interpretation appropriate standardized outcomes negative values common Enhanced margot_plot_policy_tree() add “(baseline)” axis labels Added “(baseline)” plot titles subtitles clarity Updated depth-1 depth-2 plots consistency Ensures users understand splits made baseline measures Enhanced margot_plot_decision_tree() append “Outcome” outcome titles Example: “Neuroticism” now displays “Neuroticism Outcome”","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"label-transformation-improvements-1-0-100","dir":"Changelog","previous_headings":"","what":"Label Transformation Improvements","title":"[2025-07-20] margot 1.0.100","text":"Now removes “_l” suffix variable names Properly capitalizes NZSEI NZDEP acronyms Example: “t0_nzsei_13_l” now displays “NZSEI 13 (baseline)” Changed “{outcome} (reduced)” “(reduced) {outcome}” Example: “Anxiety (reduced)” now displays “(reduced) Anxiety”","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-functions-1-0-90","dir":"Changelog","previous_headings":"","what":"new functions","title":"[2025-07-19] margot 1.0.90","text":"shows common support regions treatment validity generates propensity score distribution plots treatment group uses transform_label helper automatic label formatting includes text_summary output suitable dropping documents added theme parameter ggplot2 theme customization updated colors package standards: treatment (#d8a739), control (#4f88c6) enhanced text summary interpretation overlap meaning","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"enhanced-qini-analysis-1-0-90","dir":"Changelog","previous_headings":"","what":"enhanced Qini analysis","title":"[2025-07-19] margot 1.0.90","text":"new spend_levels parameter custom spend level analysis new concise_summary output groups outcomes benefit/harm/effect added explanatory text CATE Qini curves (include_intro parameter) auto detection available spend levels fallback handling warnings requested spend levels don’t exist data new vertical dashed lines spend levels text annotations replace multiple label parameters single label_mapping added theme parameter matching margot_assess_overlap spend level lines now labeled (e.g., “20% spend”, “50% spend”) smart label positioning","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"api-consistency-1-0-90","dir":"Changelog","previous_headings":"","what":"API Consistency","title":"[2025-07-19] margot 1.0.90","text":"Ccnsistent margot_interpret_qini() parameter naming breaking change: Update code using spend parameter","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"bug-fixes-1-0-90","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"[2025-07-19] margot 1.0.90","text":"Qini plot vertical lines now match spend levels used calculations previously always showed 20% 50% regardless parameter","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-07-19-margot-1080","dir":"Changelog","previous_headings":"","what":"[2025-07-19] margot 1.0.80","title":"[2025-07-19] margot 1.0.80","text":"Added experimental support conditional means computation via policytree::conditional_means() New compute_conditional_means parameter margot_causal_forest() (default TRUE) Conditional means stored model results computed Shows expected outcomes treatment within policy tree leaves Computes average treatment effects within leaf New include_conditional_means parameter (default TRUE) Changed default output clear, simple language (new use_math_notation parameter, default FALSE) Added output_format parameter: “bullet” (default) “prose” flowing narrative text Enhanced leaf output sample sizes, percentages, effect interpretations Removed uncertainty quantification disclaimer Properly recomputes statistics (ATE, RATE, E-values, policy trees, QINI) Flips conditional means columns binary treatment Removes original models rebuilds combined_table Multiple covariate modes: “original”, “custom”, “add”, “” Regex-based covariate exclusion support Automatic covariate expansion depth-2 trees Parallel processing capability Creates new label entries “_r” suffix default Maintains backward compatibility use_r_suffix = FALSE Option remove original entries remove_original = TRUE Removed margot_flip_forests_dev() functionality now available margot_recalculate_policy_trees()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-07-17-margot-1070","dir":"Changelog","previous_headings":"","what":"[2025-07-17] margot 1.0.70","title":"[2025-07-17] margot 1.0.70","text":"margot_flip_forests_dev() allows custom policy trees","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-18-margot-1065","dir":"Changelog","previous_headings":"","what":"[2025-06-18] margot 1.0.65","title":"[2025-06-18] margot 1.0.65","text":"Shape + Color coding - Points use different shapes colors better distinction Clean masking - Shaded regions properly filter points (overlapping mess) Visible annotations - Split values appear readable horizontal text near dashed lines Proper positioning - Annotations stay within plot boundaries","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-18-margot-1064","dir":"Changelog","previous_headings":"","what":"[2025-06-18] margot 1.0.64","title":"[2025-06-18] margot 1.0.64","text":"margot_plot_categorical() handles binary data","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-09-margot-1063","dir":"Changelog","previous_headings":"","what":"[2025-06-09] margot 1.0.63","title":"[2025-06-09] margot 1.0.63","text":"developing simulation within margot","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-62","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-06-09] margot 1.0.62","text":"Complete refactor margot_simulate() clearer data generation process Added support heterogeneous treatment effects simulations Enhanced vignette comprehensive examples power analysis templates","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-62","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-06-09] margot 1.0.62","text":"Fixed syntax errors vignettes (removed numeric underscores) Improved test structure cleaner helper functions Better documentation simulation parameters options","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-1-0-62","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2025-06-09] margot 1.0.62","text":"Removed crayon package dependency (51 dependencies) Removed gt gtsummary package dependencies Updated margot_summary_panel() output markdown tables default","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-04-margot-1061","dir":"Changelog","previous_headings":"","what":"[2025-06-04] margot 1.0.61","title":"[2025-06-04] margot 1.0.61","text":"added simulation function magot_simulate() + units tests plus vignette","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-04-margot-1060","dir":"Changelog","previous_headings":"","what":"[2025-06-04] margot 1.0.60","title":"[2025-06-04] margot 1.0.60","text":"fixed namespace issue/ margot_model_evalue now exported.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-04-margot-1059","dir":"Changelog","previous_headings":"","what":"[2025-06-04] margot 1.0.59","title":"[2025-06-04] margot 1.0.59","text":"removing ‘export’ purely internal functions/ tidying","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-06-03-margot-1058","dir":"Changelog","previous_headings":"","what":"[2025-06-03] margot 1.0.58","title":"[2025-06-03] margot 1.0.58","text":"margot_plot() data corrected using e.g. bonferroni table also corrected – interpretation text interpretation table match.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-30-margot-1057","dir":"Changelog","previous_headings":"","what":"[2025-05-30] margot 1.0.57","title":"[2025-05-30] margot 1.0.57","text":"margot_make_tables() better handling MS Word flextable integration","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-29-margot-1056","dir":"Changelog","previous_headings":"","what":"[2025-05-29] margot 1.0.56","title":"[2025-05-29] margot 1.0.56","text":"margot_make_tables() now renders variables hyphens correctly.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-55","dir":"Changelog","previous_headings":"","what":"new","title":"[2025-05-28] margot 1.0.55","text":"margot_plot_tau() - totally ehanced () zero always shown (b) colour matches sign","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-54","dir":"Changelog","previous_headings":"","what":"new","title":"[2025-05-26] margot 1.0.54","text":"margot_plot_tau() creates faceted grid histograms showing distribution tau hat (individual treatment effects) multiple models. range standardised across facets facilitate comparison. Useful qualitatively displaying heterogenity causal effects. ## improved margot_plot() three paragraph skips list","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-53","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-25] margot 1.0.53","text":"margot_plot_policy_tree_depth2(), margot_plot_policy_combo() - plotting enhancements 1L 2L trees (note Rstudio sometime make panels gray – just quirk – issue final graph project.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-52","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-19] margot 1.0.52","text":"margot_interpret_rate() user may specify flipped outcome labels","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-51","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-18] margot 1.0.51","text":"margot_interpret_qini() improved select reliable Qini models","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-18-margot-1050","dir":"Changelog","previous_headings":"","what":"[2025-05-18] margot 1.0.50","title":"[2025-05-18] margot 1.0.50","text":"margot_interpret_rate_comparison() exported.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-49","dir":"Changelog","previous_headings":"","what":"fixed","title":"[2025-05-18] margot 1.0.49","text":"margot_interpret_rate() - exported","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-48","dir":"Changelog","previous_headings":"","what":"new","title":"[2025-05-18] margot 1.0.48","text":"margot_reversed_labels() – helper gets display labels marks reversed outcomes (policy trees) margot_interpret_rate() (margot_interpret_rate_comparison())- now lists models ruled qini autoc rate analysis.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-47","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-17] margot 1.0.47","text":"margot_plot_create_options() defaults correcting multiple comparisons, adjust = \"bonferroni\", alpha = 0.05, #<- new margot_planned_subgroup_batch() margot_subset_batch() – numerous enhancements clear reporting margot_compare_groups() enhanced reporting","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-46","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-16] margot 1.0.46","text":"margot_process_longitudinal_data_wider() correctly creates “NA” value censoring indicator unit lost follow . (development, defaults older version, works fine)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-15-margot-1044","dir":"Changelog","previous_headings":"","what":"[2025-05-15] margot 1.0.44","title":"[2025-05-15] margot 1.0.44","text":"margot_plot() uses correction method one outcome. margot_interpret_marginal() also updated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-15-margot-1043","dir":"Changelog","previous_headings":"","what":"[2025-05-15] margot 1.0.43","title":"[2025-05-15] margot 1.0.43","text":"margot_compare_groups() computation relative risk fixed. margot_plot() passes margot_correct_combined_tables() automatically (need separate call)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"changed-1-0-42","dir":"Changelog","previous_headings":"","what":"changed","title":"[2025-05-15] margot 1.0.42","text":"margot_process_longitudinal_data_wider fixed error warnings causing function fail ordinal data passed.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-41","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-14] margot 1.0.41","text":"margot_correct_combined_table() family–wise-error correction multiple outcomes (ATE) margot_add_policy_values() - attach policy values forest models (utility) margot_collect_policy_values() – gather policy values forest models margot_screen_models() select models policy-tree analysis margot_summarise_all() summarise (family-wise) corrected analysis policy trees `margot_adjust_policy_p() ## changed margot_rate(), margot_rate_batch deterministic seeds reproducible results margot_plot two parmaters adjust alpha describe whether family-wise adjustment made. margot_bind_table now default e_val_bound_threshold = 1.1 (previously 1, arguably liberal). margot_adjust_policy_p() - family wise corrections margot_add_policy_values_batch() - batch add policy values models margot_report_policy() - succinct reporting corrected policy values.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-13-margot-1040","dir":"Changelog","previous_headings":"","what":"[2025-05-13] margot 1.0.40","title":"[2025-05-13] margot 1.0.40","text":"exported margot_causal_forest_parallel()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-39","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-13] margot 1.0.39","text":"margot_causal_forest_paralle() parallel implementation margot_causal_forest. margot_flip_forests_parallel() parallel implementatino margot_flip_forests()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-39","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-13] margot 1.0.39","text":"margot_process_longitudinal_data_wider() - removes otios warnings fastDummies. margot_bind_tables() - now accepts dataframe work single outputs.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-38","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-12] margot 1.0.38","text":"eligibility now requires observed value current following wave, rather future wave. baseline wave (t0_) always checked reported –even later waves exist—preventing silent skips. Internal check now uses align behaviour documentation. margot_wide_impute_machine() print flags now set true margot_wide_impute_baseline() soft deprecated margot_wide() soft deprecated","code":"cols_check <- c(col, future_cols) ok         <- rowSums(!is.na(out[, cols_check, drop = FALSE])) > 0"},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-07-margot-1037","dir":"Changelog","previous_headings":"","what":"[2025-05-07] margot 1.0.37","title":"[2025-05-07] margot 1.0.37","text":"margot_policy_tree_combo() now exported","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-07-margot-1036","dir":"Changelog","previous_headings":"","what":"[2025-05-07] margot 1.0.36","title":"[2025-05-07] margot 1.0.36","text":"margot_policy_tree() level 2 fixed","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-35","dir":"Changelog","previous_headings":"","what":"improved","title":"[2025-05-06] margot 1.0.35","text":"here_save() here_save_qs() now correctly reports size saved file. tidying roxygen2 code (‘mc_test’ removed replaced ‘result_object’) margot_plot_policy_tree() nicer label placement.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-34","dir":"Changelog","previous_headings":"","what":"fixed","title":"[2025-05-04] margot 1.0.34","text":"restored margot_interpret_qini()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-33","dir":"Changelog","previous_headings":"","what":"fixed","title":"[2025-05-04] margot 1.0.33","text":"namespace issues margot_plot_policy() margot_rescue_qini()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-32","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-04] margot 1.0.32","text":"margot_planned_subgroup_batch() overhauled work margot_plot() updates. restored decision tree plot results labelling restored margot_interpret_marginal cutpoint results datascale","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-31","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-04] margot 1.0.31","text":"margot_get_labels() utility function fetching labels.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2025-05-03-margot-1030","dir":"Changelog","previous_headings":"","what":"[2025-05-03] margot 1.0.30","title":"[2025-05-03] margot 1.0.30","text":"margot_plot_decision_tree()- colours robustly match decisions ‘control’, ‘treat’ internal helpers transform_label(), transform_var_name() labelling handles SDO RWA correctly, also get_original_value_plot() get_original_var_info()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-29","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-03] margot 1.0.29","text":"margot_rate_batch() - Two allocation rules available: “treat_best” (default) ─ administer treatment largest predicted benefits; “withhold_best” ─ remove treatment subgroup, useful intervention harmful. CATE vector flipped (multiplied −1) model fitting calling grf::rank_average_treatment_effect(). Outcome direction flips performed earlier margot_flip_forests() thus kept conceptually separate policy flip implemented . removed add_resistance","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"refactored-to-acceptl-depth-policy-trees-thumbsup-1-0-29","dir":"Changelog","previous_headings":"","what":"Refactored to accept 1L depth policy trees 👍","title":"[2025-05-03] margot 1.0.29","text":"margot_plot_policy_tree() plot tree depth = 1L. margot_recalculate_policy_trees() margot_flip_forests() margot_interpret_policy_batch() margot_interpret_policy_tree() margot_interpret_rate() margot_plot_decision_tree() margot_plot_policy_combo() margot_policy()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-28","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-02] margot 1.0.28","text":"margot_rate() now computes resistance exposure (requested) using add_resistance","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-27","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-05-02] margot 1.0.27","text":"margot_flip_forests() automatic recomputing policy trees default. margot_inspect_qini() helper evaluate extreme propensity scores grf models. margot_rescue_qini() (developing) - recompute qini data grf models qini_objects null / empty.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improve-1-0-27","dir":"Changelog","previous_headings":"","what":"Improve","title":"[2025-05-02] margot 1.0.27","text":"margot_bind_models() – accommodates changes","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-26","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-05-02] margot 1.0.26","text":"margot_wide_machine() now handles allows imputation_method = “none”. new parameters extend_baseline effectively pivots date long wide, allows time indexing columns - userful grf models.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-25","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-05-02] margot 1.0.25","text":"margot_plot_shift() margot_plot_categorical tightly integrated. now plot mean/median flexibly plot sds. (now margot_plot_categorical.R script).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-24","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-05-01] margot 1.0.24","text":"margot_bind_models() works lmtp batched outputs two conditions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-23","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-30] margot 1.0.23","text":"margot_plot() interpretation tracks user specified E-value","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-22","dir":"Changelog","previous_headings":"","what":"NEW","title":"[2025-04-30] margot 1.0.22","text":"margot_trim_sample_weights(): standardises (possibly trimmed) weights mean 1. Missing values preserved.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-21","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-29] margot 1.0.21","text":"margot_plot_rate_batch() user can pass specific model names margot_rate_comparision() outputs correct model names (never statistically significant negative results.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-20","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-28] margot 1.0.20","text":"margot_rate(), margot_rate_interpret() now output model names reliable result estimates.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-19","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.19","text":"margot_bind_table() flexibly modify column names margot_plot() - added options transform colname estimand “ATE”, also E_value colnames. margot_interpret_marginal() group_tab() now return order consistent plot margot_interpret_rate() better language, margot_interpret_rate_comparison() now helper (exported). margot_plot_policy_tree() margot_policy now defaults shading regions interest.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-18","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.18","text":"margot_log_transform_vars() handles edge cases better (1) requiring numeric input (2) requiring NAs.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-18-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.18","text":"margot_plot_categorical() robust wider range data values","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-17","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-20] margot 1.0.17","text":"margot_lmtp_tab() – fixes breaking change introduced lmtp v1.50","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-16","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-20] margot 1.0.16","text":"margot_transition_table() – allows filtering observation/censoring variable, can useful data entirely missing certain waves. margot_bind_tables() – correct output retaining outcome names margot_impute_carry_forward() – better error handling/ observation seen year, may impute forward.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-19] margot 1.0.15","text":"margot_interpret_marginal() - clearer wording, outcomes listed rather dull sentences.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-19] margot 1.0.14","text":"margot_bind_tables() additional parameter, sort_E_val_bound = c(\"none\", \"asc\", \"desc\"), allows users order multiple tables E_value thresholds. fixed multiple functions get assending order margot_plot(), margot_plot(), group_tab(), margot_interpret_marginal() transform_label(), transform_table_rownames() – removing stray transform_label() label functions various functions. transform_table_rownames() now internal.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-10] margot 1.0.13","text":"margot_bind_tables() streamlined function focusing markdown LaTeX outputs. reduced dependencies eliminating reliance dplyr, stringr, cli packages. enhanced markdown output bold variable names better readability, improved LaTeX output better multi-page support alternating row colors, maintained core functionality. margot_omnibus_hetero_test() - considerably improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-10] margot 1.0.12","text":"margot_bind_models() now bolds reliable results markdown margot_interpret_rate() margot_interpret_rate_comparison() accurate reporting deal edge cases (RATE reliable) better.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-11","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-04-09] margot 1.0.11","text":"margot_bind_models() - bind model outputs (currently implemented batch caual forest models) margot_interprete_rate_comparison() compare qini auto RATE estimates, also called margot_interpret_rate() margot_bind_tables() - better markdown","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-09] margot 1.0.11","text":"margot_interpret_rate() combines qini rate estimates. margot_rate() output better worded, still reate “rate_result” backward compatibility; table highlight “significant” RATE positive. margot_interpret_qini() - better outputs","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.10","text":"margot_causal_forest() consistent use training proportion rather mixing training/test.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.9","text":"margot_causal_forest() reverted –enhancements failing","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.8","text":"margot_causal_forest() added checks","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.7","text":"margot_plot_decision_tree(), margot_plot_policy_tree() – enhancements","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-7-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.7","text":"margot_interpret_qini() language improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.6","text":"margot_interpret_policy_tree() language improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.5","text":"margot_interpret_qini() margot_interpret_rate() margot_interpret_qini() aggressive error handlings","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.4","text":"margot_interpret_qini() margot_interpret_rate() even better LaTeX.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.3","text":"margot_interpret_qini() margot_interpret_rate() play better LaTeX. Use “statistically reliable” place statistically significant.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.2","text":"margot_interpret_qini() margot_interpret_rate() improved warnings negative estimates","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2025-04-06] margot 1.0.1","text":"restored accidentally deleted helpers margot_omnibus_hetero_test() now works ","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-05] margot 1.0.0","text":"now using semantic versioning. margot_omnibus_hetero_test now label mapping","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-26] margot 0.3.3.3","text":"margot_censor() - explicit call ‘cli’ avoid conflict crayon create_ordered_variable() - removed crayon margot_summary_tables_cat() - deleted experimental table margot_log_transform_vars() removed crayon, made function calls explicit, removed require packages. margot_summary_tables() - remove require explicit function calls now. causal_contrast_engine() - refactored - removes require margot_wide_machine() - removes require margot_wide() - removes require","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-26] margot 0.3.3.2","text":"margot_causal_forest(): now default honest splitting computing qini curves. margot_plot_categorical(): fixed error handling binary variables. margot_bind_tables() - nicer printout, user can change column names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-22] margot 0.3.3.1","text":"margot_causal_forest()- correct calculation qini ate (reverted older function)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.3.0","text":"margot_causal_forest()- refactored save qini_data qini_objects model. (working ). margot_multi_arm_causal_forest() - refactored.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.9","text":"margot_causal_forest() now passes doubly robust scores policy decision trees. now compute policy trees using doubly robust (DR) scores  rather previous IPW-based approach. DR scores combine outcome propensity estimates, yielding improved statistical power efficient estimation treatment effects. change backward compatible – modifications user code required – note printed execution indicating DR scores used.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.8","text":"margot_interpret_qini() prints economical explanation, giving explanations reliable results.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-21] margot 0.3.2.7","text":"margot_bind_tables(): binds results multiple -comewide studies one table","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-21] margot 0.3.2.6","text":"margot_planned_subgroups_batch() – batch batched analysis planned subgroups analysis causal forests (time-saver). backtransform_log_z() utility function backtranform scores logged values original data values.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.6","text":"margot_subset_batch() now working complex conditions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.5","text":"margot_process_binary(): variable already ends “_binary” processed binary. Also removed dependency color package. coloured_histogram_shift()… deprecated functions longer exported maintained. margot_plot_shift() - improved print mean value also show +/- sd distribution margot_causal_forest() - default parameter 0.5 training.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.4","text":"margot_subset_batch() - now correctly passes parameters required margot_plot(). margot_plot() - default now: interpret_all_E_gt1 = TRUE (results non-null Evalues reported).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.3","text":"margot_subset_batch() - now exports plots explanations submodels models (causal forests).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-19] margot 0.3.2.2","text":"margot_subset_batch() batch process subsetted models (causal forests) margot_plot_rate_batch() replaces margot_plot_batch_rate(), deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.2","text":"margot_subset_model() - streamlined","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.1","text":"group_tab() now helper functions margot_plot() reverted remove errors. margot_compare_groups(), margot_interpret_qini() removed redundant function.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-19] margot 0.3.2.0","text":"added .strict_exposure_outcome_censoring() helper function strict dyadic censoring – now encompassed margot_process_longitudinal_data_wider() added backward compatibility.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.0","text":"coloured_histogram(), margot_impute_carry_forward(), margot_process_longitudinal_data_wider(), margot_lmtp_evalue(),margot_plot_batch_rate(), margot_plot_boxplot(), margot_plot_boxplot_covariate(), margot_plot_discontinuity(), margot_plot_histogram(), margot_plot_slope_covariate_batch(), margot_plot_slope_covariate_combo(), margot_plot_slope_covariate(), margot_plot_slope(), margot_plot_individual_responses(), margot_wide_machine(), margot_process_longitudinal_data(), margot_count_dyads(), margot_count_ids() correct package calls, explicit namespace calls. group_tab() function re-factored margot_interpret_marginal() corrected order & small improvements margot_plot() function refactored clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-18] margot 0.3.1.9","text":"here_save() removed call base R here_read() removed call base R margot_combine_results() - made helper function margot_summary_panel() - specified functions required margot_censor() - specified functions required data.table (#’ @importFrom data.table .data.table copy set get uniqueN) read_multiple_images() - made internal margot_wide_machine() - stated explicit functions dependencies (removed zoo) margot_interpret_qini() - improved reporting margot_policy() - now allows subsetting specific models margot_interpret_policy_batch() - now allows subsetting specific models margot_causal_forest() - added roxygen code (forgotten last update).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-1-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-17] margot 0.3.1.8","text":"margot_rate() produce table RATE estimates batched processed causal forests. margot_flip_forests() interpreting effect benefitial may need invert outcomes. function already processed models. margot_interpret_rate() provides automated reporting rate outputs, allowing users specify whether AUTOC QINI targeted.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-17] margot 0.3.1.8","text":"margot_causal_forest() - now also computes RATE targeting QINI selected.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-15] margot 0.3.1.7","text":"create_ordered_variable() appends “_binary” binary variables made margot_transition_table() user may specify table name. margot_process_longitudinal_wider() new parameters continuous vars scaled","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-14] margot 0.3.1.6","text":"margot_interpret_marginal() made robust units given input model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-13] margot 0.3.1.5","text":"margot_compute_gender_weights_by_wave() actually added (omitted accident 0.3.1.4).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-12] margot 0.3.1.4","text":"margot_compute_gender_weights_by_wave() correctly assigns weights target population, specified target_wave parameters.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-12] margot 0.3.1.3","text":"margot_censor(): censoring conditional condition wave: 𝚌𝚎𝚗𝚜𝚘𝚛_𝚏𝚒𝚗𝚊𝚕_𝚠𝚊𝚟𝚎 = 𝙵𝙰𝙻𝚂𝙴\\texttt{censor_final_wave = FALSE} rows final wave (determined 𝚖𝚊𝚡(𝚍𝚝[[𝚠𝚊𝚟𝚎_𝚟𝚊𝚛]])\\texttt{max(dt[[wave_var]])}) preserved (default behaviour). allows estimating per-protocal effect changing censoring condition part causal effect intervention population baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-1-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-05] margot 0.3.1.2","text":"margot_transition_table() replaces transition_table() create_transition_matrix() print state change multiple waves. Useful longitudinal modified treatment policies. (Old functions soft deprecated helper functions.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-02-06] margot 0.3.1.1","text":"margot_plot margot_interpret_marginal now reporting coefficients E-value 1 (instead 1.1, default threshold). margot_censor now deletes values variable censoring indicator set 1 (year_measured == 0), instead merely changing indicator. can helpful downstream function handling dyadic data.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-02-05] margot 0.3.1.0","text":"margot_process_longitudinal_data_wider can now handle dyadic data, agent’s partner censored, agent also censored.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-9","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-01-18] margot 0.3.0.9","text":"margot_combine_results Takes multiple results tables margot_plot objects combines single formatted table using kableExtra, optional group headers section.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-01-18] margot 0.3.0.9","text":"-margot_plot option standardize_label display Standardised, Standardized, remove altogether (“none”). - Risk Ratios (type = “RR”), code always omits word shows label “Effect (Risk Ratio Scale)”. - Risk Differences (type = “RD”), standardize_label = “NZ” get “Standardised Effect (Difference Scale)”; standardize_label = “US” get “Standardized Effect (Difference Scale)”; standardize_label = “none”, get “Effect (Difference Scale)”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-01-17] margot 0.3.0.8","text":"margot_plot new parameter include_coefficients set TRUE remove coefficients graph. makes easier view results. minor fix margot_save_png defaults output folder set push_mods","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-12-29] margot 0.3.0.7","text":"margot_impute_carry_forward() - prevents imputing variables end study included time-varying variables.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-12-29] margot 0.3.0.6","text":"margot_impute_carry_forward() efficient. Can carry forward one-wave future observation made ‘require_one_observed’ set “TRUE”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-5","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-12-08] margot 0.3.0.5","text":"re-factored margot_make_tables() work table1 package, extending flexibility tables (esp latex.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-12-07] margot 0.3.0.4","text":"margot_prop_missing() - utility function get propoportion missing data baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-3","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-26] margot 0.3.0.3","text":"margot_amelia_to_mice() - fixed unconstrained previous workflow.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-2","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-11] margot 0.3.0.2","text":"margot_plot() label now reads “causal difference” rather “causal risk difference”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-1","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-11-09] margot 0.3.0.1","text":"-margot_impute_carry_forward - carry forward last observed value (handling ‘prodigal’ id’s lost found).","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-09] margot 0.3.0.1","text":"margot_wide_machine - removed functionality now handled margot_impute_carry_forward","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-11-06] margot 0.3.0.0","text":"margot_make_table() - flexible longitudinal tables margot_amelia_to_mice() - converts Amelia output mice output.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-80","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-10-30] margot 0.2.3.80","text":"margot_count_ids() - track cumulative counts participants, returning participants,","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-80","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.80","text":"margot_count_dyads() - informative information.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-70","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.70","text":"margot_interpret_marginal clean appearance","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-70-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.70","text":"margot_plot margot_interpret_marginal functions overhauled focus compact reporting.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-60","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.60","text":"margot_plot margot_interpret_marginal functions overhauled focus compact reporting.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-10-29-margot-02350","dir":"Changelog","previous_headings":"","what":"[2024-10-29] margot 0.2.3.50","title":"[2024-10-29] margot 0.2.3.50","text":"margot_plot margot_interpret_marginal functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-40","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.40","text":"margot_plot work new margot_interpret_marginal function","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-16","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.16","text":"margot_interpret_marginal removed cli formatting compatibility quarto documents","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-28] margot 0.2.3.15","text":"margot_wide_impute - small bug fix, na indicators automatically created (functionality lost previous iteration)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-27] margot 0.2.3.14","text":"margot_process_longitudinal_data_wider - robust. margot_wide_impute - small bug fix.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-13","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-10-26] margot 0.2.3.13","text":"margot_censor create censoring indictors correct handling lost--follow-conditions met, includes clustering variable (useful romantic dyads)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-26] margot 0.2.3.13","text":"margot_wide_machine now correctly handling multiple time points.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-26] margot 0.2.3.12","text":"margot_wide_machine() correctly handles NA values baseline, prints message","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-23] margot 0.2.3.11","text":"margot_save_png() better defaults margot_plot() enhancements, improved documentation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-23] margot 0.2.3.10","text":"margot_save_png() flexibly handles plot object, merely ggplot2 objects.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-22] margot 0.2.3.9","text":"margot_interpret_marginal() gives correct interpretation ‘strong’ evidence using Evalues.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-10-02-margot-0238","dir":"Changelog","previous_headings":"","what":"[2024-10-02] margot 0.2.3.8","title":"[2024-10-02] margot 0.2.3.8","text":"margot_process_longitudinal_data_wider() performance enhancement. Users can save outcome variable even previous exposures missing. Useful lmtp survival models","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-27] margot 0.2.3.7 :)!","text":"margot_process_longitudinal_data_wider() performance enhancement margot_wide_machine() simplified. now time-varying treatment workflow place!","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-27] margot 0.2.3.6","text":"margot_wide_machine() converts wide data long data using indicators missing observations, allows non-parametric stacked learning lmtp without multiple-imputation assumptions. Also handles three time-points. Optional imputation_method = 'mice allows users impute, also creating NA dummy variables non-parametric learning. margot_process_longitudinal_data_wider() extends flexibility margot_process_longitudinal_data() three waves, allows users specify variable names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-5","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-26] margot 0.2.3.5","text":"helper function back_transform_estimates() unique marginal plots marginal interpretation, avoid confusions back-transforming helpers split-points policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-26] margot 0.2.3.5","text":"margot_plot(), margot_interpret_marginal() produce interpretable results. Fixed issue margot_plot() risk ratios selected, colours plotted.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-25] margot 0.2.3.4","text":"margot_plot_slope_covariate_combo() - batch multiple margot_plot_slope_covariate() plots onto one graph using patchwork.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.4","text":"margot_plot_slope_covariate() improved flexibility","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.3","text":"margot_plot_histogram() now take optional vertical_facets parameter, allowing interpretable time-series graphs. placed internal function helpers.R R directory, avoid clutter.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.2","text":"margot_plot() margot_interpret_marginal() now back transform values data scale.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-24] margot 0.2.3.1","text":"margot_plot_policy_tree(), margot_plot_decision_tree(), margot_interpret_policy_tree(), margot_plot_qini_tree() use global function names. New helper functions back-transform logged values (well z-transformed values) get interpretations data scale variables log-transformed. aids interpretation.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-20] margot 0.2.3.0","text":"Refactored causal tree graphs interpretations flexible labelling providing standardised results (relevant), results data scale. Makes interpretation policies easier understand. margot_count_dyads() counts dyads longitudinal dataset. margot_summary_panel() summaries participants panel wave; counts unique participants wave, … margot_interpret_policy_batch() interprets policytree results.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-20] margot 0.2.3.0","text":"margot_summary_tables() - now pass multiple tables, better exposure plots. margot_interpret_policy_tree() - refactored: now returns results data scale, better labels. margot_plot_policy_tree() - refactored: now returns results data scale, better labels.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-3-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-09-20] margot 0.2.3.0","text":"margot_batch_policy()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-64","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-19] margot 0.2.1.64","text":"margot_plot(),margot_interpret_marginal(), group_tab() overhauled now get reporting back-tranformed standardised effects effects data scale – greatly benefiting interpretations. transform_to_original_scale() new helper introduced back-transform estimates.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-18-margot-02163","dir":"Changelog","previous_headings":"","what":"[2024-09-18] margot 0.2.1.63","title":"[2024-09-18] margot 0.2.1.63","text":"margot_save_png() replaces margot_plot_save_png() consistent function labelling, spare burden remembering function names.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-17-margot-02162","dir":"Changelog","previous_headings":"","what":"[2024-09-17] margot 0.2.1.62","title":"[2024-09-17] margot 0.2.1.62","text":"margot_compare_groups() added bold formatting alert readers reliable group differences","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-62","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.62","text":"margot_interpret_qini() - now formats tables alert readers prioritising results reliably worse better none.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.60","text":"margot_plot_create_options() updated work improve plotting workflow","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-09-17] margot 0.2.1.60","text":"compute_difference() now use general margot_compare_groups() workflow.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2024-09-17] margot 0.2.1.60","text":"boilerplate_measures boilerplate_methods_additional_sections boilerplate_methods boilerplate_methods_causal_interventions boilerplate_methods_confounding_control boilerplate_methods_eligibility_criteria boilerplate_methods_identification_assumptions boilerplate_methods_missing_data boilerplate_methods_sample boilerplate_methods_statistical_estimator boilerplate_methods_target_population boilerplate_methods_variables create_ordered_variable_custom margot_compute_gender_weights margot_create_bibliography margot_create_database margot_grf_subset_table margot_merge_databases manager_boilerplate_measures compute_difference()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-59","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-17] margot 0.2.1.59","text":"margot_plot_save_png() saves margot_plot output graph png, user can change width, heigh, dpi, specify path…","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-59","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.59","text":"margot_plot() automatic saving output optional timestamps margot_plot_multi_arm() modified work new improved margot_plot()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-58","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-16] margot 0.2.1.58","text":"margot_compare_groups() compare treatment effects groups evaluate evidence differences","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-57","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-16] margot 0.2.1.57","text":"margot_plot_multi_arm() wrapper margot_plot enables plots/tables multi arm treatment models","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-57","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-16] margot 0.2.1.57","text":"reporting multi arm treatment models margot_plot_qini() easier follow. margot_lmtp() now automatic saving models optional prefix label optional time-stamping. Also actually saves table computing contrasts null model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-56","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-16] margot 0.2.1.56","text":"margot_interpet_qini() robust binary multi-arm treatments. margot_plot_qini() correct label binarhy treatments margot_batch_policy_tree() correctly modified function added: commputes multiple ‘spends’","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-55","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-15] margot 0.2.1.55","text":"margot_interpet_qini() interprets results qini curves pre-specified levels.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-55","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-15] margot 0.2.1.55","text":"extract_qini_data() improved handling margot_multi_arm_causal_forest() numerous plot functions enhanced produce “NZ” instead “Nz”","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-54","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.54","text":"margot_summary_cate_difference_gain() computes difference average gains integrated difference reference curve (maq object) comparison curve specified spend level – see support CATEs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-54","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.54","text":"compute_qini_curves_multi_arm() - modified can now get quantitative estimates support CATEs margot_multi_arm_causal_forest() - enhanced several ways, example support margot_summary_cate_differences() margot_causal_forest() - likewise enhanced. margot_batch_policy() now outputs `margot_summary_cate_difference_gain() models default","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-53","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.53","text":"margot_summary_tables() plots take upper case letters, remove ’_’ margot_adjust_weights() censored individuals assigned zero weights, uncensored individuals contribute final analysis.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-52","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.52","text":"Fixed margot_plot_response_timeline() print dates, optionally save ’png` image.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-51","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.51","text":"margot_plot_discontinuity() margot_plot_slope() correct end years (+1 final wave, waves overlap years)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-50","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.50","text":"margot_plot_boxplot_covariate() descriptive trends groups","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-50","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.50","text":"margot_plot_slope_covariate() automatic title, save png, optional time stamp margot_plot_individual_responses() fixed missingness","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-49","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.49","text":"reverted compute_qini_curves (works binary vars) margot_causal_forest() now working ","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-48","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.48","text":"margot_multi_arm_causal_forest() extract_qini_data() improved work margot_multi_arm_causal_forest()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-48","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.48","text":"compute_qini_curves_multi_arm() internal function support margot_multi_arm_causal_forest()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-47","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.47","text":"Coordinated following functions play well margot_multi_arm_causal_forest() margot_plot_qini() `extract_qini_data()`` compute_qini_curves()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-46","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.46","text":"hear_read require .rds file passed. extract_qini_data made robust","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-45","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-11] margot 0.2.1.45","text":"build_formula_str - helper function now documented. Used causal_contrast_engine causal_contraset_marginal","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-45","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.45","text":"causal_contrast_marginal causal_contrast_marginal modified accommated breaking change WeigthIt package. double_robust_marginal checks object winmids object.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-44","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.44","text":"margot_plot_individual_responses() now plotting cases default. Default random_draws 100.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-43","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.43","text":"margot_plot_histogram(), optional coloured mean/sd lines.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-42","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.42","text":"margot_plot_individual_responses(). Now handles factors, robust missing waves. margot_plot_boxplot() different colours boxplots single variable passed multiple waves.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-0-2-1-41","dir":"Changelog","previous_headings":"","what":"New features","title":"[2024-09-02] margot 0.2.1.41","text":"margot_plot_individual_responses(). New function allow random plotting responses subset sample, useful investigating individual trajectories change. margot_plot_boxplot() Now user supplies wave values, allowing flexible precise plotting intervals. optional prefixes. coordinates graph may optionally flipped.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-0-2-1-40","dir":"Changelog","previous_headings":"","what":"New features","title":"[2024-09-02] margot 0.2.1.40","text":"margot_plot_categorical() visualising categorical data distributions. margot_plot_shift() visualising shifts data distributions highlighted ranges.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-40","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-09-02] margot 0.2.1.40","text":"following functions deprecated favor new functions: margot_plot_hist() deprecated. Use margot_plot_histogram() instead. coloured_histogram() deprecated. Use margot_plot_histogram() instead. coloured_histogram_shift() deprecated. Use margot_plot_shift() instead. coloured_histogram_quantiles() deprecated. Use margot_plot_categorical() instead. deprecated functions continue work issue warnings. removed future version package.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-39","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.39","text":"margot_plot_slope() allows faceting","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-38","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-02] margot 0.2.1.38","text":"margot_plot_histogram() new histogram ’s informative robust previous attempts. Can used multiple variables multiple waves.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-38","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.38","text":"margot_plot_boxplot() made robust single outcome single wave.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-02-margot-02137","dir":"Changelog","previous_headings":"","what":"[2024-09-02] margot 0.2.1.37","title":"[2024-09-02] margot 0.2.1.37","text":"margot_plot_discontinuity(), margot_plot_slope(), margot_plot_slope_covariate() automatically print number unique participants unique number observations title, title passed.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-36","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.36","text":"margot_plot_discontinuity() now read namespace.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-35","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-01] margot 0.2.1.35","text":"margot_plot_slope() descriptive trends continuous variables time; user may pass historical events denoted dashed vertical lines plot. margot_plot_slope_covariate() descriptive trends covariates time. margot_plot_bloxplot() descriptive trends using boxplots + facets. prepare_panel_data()helper function get panel data shape plotting response timelines repeated measures studies. margot_response_timeline() plot histogram response timelines repeated measures studies.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-35","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-01] margot 0.2.1.35","text":"here_save_qs() here_read_qs() report object saved large . here_save()here_read(), ditto, also ask users specify directory path, defaulting push_mods none supplied","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-34","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-01] margot 0.2.1.34","text":"margot_plot_discontinuity() create longitudinal graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-34","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-01] margot 0.2.1.34","text":"margot_size() cli alerts","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-33","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-30] margot 0.2.1.33","text":"read_multiple_images() utility function read batchs images, presentations, articles etc.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-32","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-30] margot 0.2.1.32","text":"margot_plot_batch_rate, creates save rate plots multiple causal forests outputs..","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-31","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-29] margot 0.2.1.31","text":"margot_batch_policy() allows user save plots automatically, different sizes resolutions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-30","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-29] margot 0.2.1.30","text":"margot_subset_model() returns subset results user requests.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-29","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-29] margot 0.2.1.29","text":"margot_subset_model() subsets causal forests categorial binary exposures.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-1-29","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-08-29] margot 0.2.1.29","text":"margot_grf_subset_table(), functions replaced margot_subset_model(), use new function instead.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-28","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-28] margot 0.2.1.28","text":"margot_qini_plot() better labels binary models.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-28","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-28] margot 0.2.1.28","text":"margot_plot_exposure() - utility plot change exposure variable baseline. margot_size() - utility check size object","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-28-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-28] margot 0.2.1.28","text":"margot_summary_table() - now provides optional graphs show densities/distributions exposure outcomes baseline, exposure waves, end study.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-26","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-27] margot 0.2.1.26","text":"margot_plot() - consistent names results table modified using new label_mapping option. here_save_qs() here_read_qs() minor tweaks.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-08-27-margot-02125","dir":"Changelog","previous_headings":"","what":"[2024-08-27] margot 0.2.1.25","title":"[2024-08-27] margot 0.2.1.25","text":"margot_plot() margot_plot_create_options() now allow custom labels, flexibly combine defaults.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-24","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-27] margot 0.2.1.24","text":"robust reporting/error handling margot_causal_forest(), helper funciton compute_qini_curves()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-23","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-26] margot 0.2.1.23","text":"boilerplate_measures() deprecated. Use boilerplate::boilerplate_report_variables() instead. boilerplate_methods_causal_interventions() deprecated. Use boilerplate::boilerplate_report_causal_interventions() instead. boilerplate_methods_confounding_control() deprecated. Use boilerplate::boilerplate_report_confounding_control() instead. boilerplate_methods() deprecated. Use boilerplate::boilerplate_report_methods() instead. boilerplate_methods_eligibility_criteria() deprecated. Use boilerplate::boilerplate_report_eligibility_criteria() instead. boilerplate_methods_identification_assumptions() deprecated. Use boilerplate::boilerplate_report_identification_assumptions() instead. boilerplate_methods_missing_data() deprecated. Use boilerplate::boilerplate_report_missing_data() instead. boilerplate_methods_sample() deprecated. Use boilerplate::boilerplate_report_sample() instead. boilerplate_methods_statistical_estimator() deprecated. Use boilerplate::boilerplate_report_statistical_estimator() instead. boilerplate_methods_target_population() deprecated. Use boilerplate::boilerplate_report_target_population() instead. boilerplate_methods_variables() deprecated. Use boilerplate::boilerplate_report_variables() instead. margot_create_database() deprecated. Use boilerplate::boilerplate_manage_measures() instead. manager_boilerplate_measures() deprecated. Use boilerplate::boilerplate_manage_measures() instead. margot_create_bibliography() deprecated. Use boilerplate::boilerplate_report_measures() instead. margot_merge_databases() deprecated. Use boilerplate::boilerplate_merge_databases() instead. (Note plural ‘databases’ new function name.) obtain new functions, use devtools::install_github(\"go-bayes/boilerplate\")","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-22","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-22] margot 0.2.1.22","text":"margot_create_bibliography now prints binary tags correctly. Improved presentation items, measures first. boilerplate_methods_variables now accepts margot_create_bibliography.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-21","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-22] margot 0.2.1.21","text":"margot_create_database improved: deleted unnecessary prompts, back_up function place.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-20","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.20","text":"boilerplate_measures margot_create_bibliography better printout. However, , must develop package specifically boilerplates.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-19","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.19","text":"margot_create_database made robust, menus work better, can copy information citations. (’s clear need separate package,… expect move track)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-18","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.18","text":"margot_lmtp informative reporting progress bars using cli","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-17","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.17","text":"margot_plot_decision_tree - user may remove ’Action” labels cleaner graph, desired (default remove .)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-16","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-21] margot 0.2.1.16","text":"margot_plot_create_options helper function automate graph production.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.15","text":"margot_plot_policy_tree(), margot_plot_qini, margot_plot_decision_tree defaults nice labels, informative messages.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-14","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-21] margot 0.2.1.14","text":"margot_interpret_marginal consistent syntax margot_plot. transform_table_rownames allow nicer tables clear labels. overhauled margot_plot function produces nice labels, also generates interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.14","text":"margot_create_bibliography markdown output improved cli considerably decluttered output boilerplate_methods","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-14","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-21] margot 0.2.1.14","text":"margot_interpret_table replaced margot_interpret_marginal","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-20] margot 0.2.1.13","text":"informative cli messages create_ordered_variable, margot_process_binary_vars, margot_summary_tables, margot_log_transform_vars, margot_propensity_model_and_plots, margot_process_longitudinal_data, margot_causal_forest, margot_multiarm_causal_forest, margot_batch_policy","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.12","text":"integrated cli messages user experience, margot_create_database, margot_merge_databases, boilerplate_methods (follow.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-11","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-19] margot 0.2.1.11","text":"margot_create_database: allows creation bibliography databases. margot_merge_databases: allows merging bibliography databases. margot_create_bibliography: purpose-build appendices measures reported.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.11","text":"restored coloured_histogram package (still useful)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-11","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-19] margot 0.2.1.11","text":"manager_biolerplate_measures surpassed margot_create_database","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.10","text":"boilerplate_measures overhauled allow bibliography sections (outcomewide studies) considerably improved reporting boilerplate_methods, including: selective sections report. overhauled boilerplate_methods simple clear reporting simplified biolerplate_methods_variables act mostly wrapper boilerplate_measures","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-9","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-19] margot 0.2.1.9","text":"boilerplate_methods_additional_sections","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.9","text":"baseline_missing_data_proportion passed boilerplate_methods_missing_data. boilerplate functions now accessible package (just internal), allowing better selective use. allow selective printing boilerplate_methods","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-18] margot 0.2.1.8","text":"boilerplate_methods function allows first pass automated reporting. helper functions include: boilerplate_methods_sample, boilerplate_methods_eligibility_criteria, boilerplate_methods_identification_assumptions, boilerplate_methods_statistical_estimator, boilerplate_methods_confounding_control, boilerplate_methods_missing_data, boilerplate_methods_causal_interventions implemented","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-18] margot 0.2.1.8","text":"manager_boilerplate_measures now flexibly handles strings references ‘string_is …’ used reference category manager_boilerplate_measures creates. manager_boilerplate_measures streamlined.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-17] margot 0.2.1.7","text":"added batch_edit_measures within manager_boilerplate_measures allow batch editing measures database.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-17] margot 0.2.1.7","text":"manager_boilerplate_measures improved allowing user-friendly navigation forward backward, sensible defaults. requires rlang.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-16] margot 0.2.1.6","text":"boilerplate_measures produces appendix measures items uses variable inputs (Quarto manuscripts). manager_boilerplate_measures allows add / modify existing database.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-16] margot 0.2.1.6","text":"margot_plot consistent syntax: user specifies save_plot TRUE FALSE (default = TRUE).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-15] margot 0.2.1.5","text":"margot_plot auto-save numerous small improvements.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-14] margot 0.2.1.4","text":"margot_adjust_weights streamline creating inverse probability censoring weights longitudinally, allowing sample_weights baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-3","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-14] margot 0.2.1.3","text":"margot_propensity_model_and_plots one stop shop evaluating balance treatment: plots & diagnostics generated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"restored-0-2-1-3","dir":"Changelog","previous_headings":"","what":"Restored","title":"[2024-08-14] margot 0.2.1.3","text":"coloured_histogram() back popular demand.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-14] margot 0.2.1.3","text":"tweaks defaults plots make legible small computer screens.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-13] margot 0.2.1.2","text":"margot_plot_policy_combo, margot_policy_tree, margot_batch_policy now accepts arguments margot_plot_decision_tree margot_plot_policy_tree, leading customisable policy visualisations. Bigger defaults x y axis text margot_plot_policy_tree legibility.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-1","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-12] margot 0.2.1.1","text":"margot_batch_policy runs margot_policy_tree outcomes model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-11] margot 0.2.1.0","text":"margot_plot_policy_combo: creates combination plot margot_plot_decision_tree margot_plot_policy_tree(), easing burden interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-11] margot 0.2.1.0","text":"margot_plot_decision_tree: policy action leafs different colours (user may specify palette). Defaults ggokabeito::scale_fill_okabe_ito() match margot_plot_policy_tree() margot_policy_tree outputs margot_plot_policy_combo addition otuputs.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-1-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-11] margot 0.2.1.0","text":"removed split_vars margot_causal_forest margot_mulit_arm_causal_forest margot_plot_decision_tree correct tree arrangement","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-9","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-11] margot 0.2.0.9","text":"margot_plot_policy_tree correctly renders decision tree, allows individual plots decision leafs, collects guides. error rendering margot_plot_decision_tree, fixed: function now includes internal tests. removed split_vars margot_causal_forest margot_mulit_arm_causal_forest","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-0-2-0-9","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2024-08-11] margot 0.2.0.9","text":"debug_node_data_with_positions, internal function - utility now included margot_plot_decision_tree","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-10] margot 0.2.0.8","text":"margot_plot_decision_tree creates policy tree decision rule graphs ggplot2 format, graph may combined margot_plot_policy effectively communicate decision rules policy makers. debug_node_data_with_positions internal margot_plot_decision_tree works properly","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-8","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-10] margot 0.2.0.8","text":"margot_plot_decision_tree requires debug_node_data_with_positions","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-10] margot 0.2.0.8","text":"Enhanced margot_plot_policy produces margot_plot_decision_tree graph, well previous outputs.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-9] margot 0.2.0.7","text":"margot_interpret_policy_tree interprets policy_tree outputs outputs either markdown formats. margot_policy_tree wraps margot_interpret_policy_tree, margot_plot_policy_tree, margot_qini_plot decision tree visualisation within one function.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-9] margot 0.2.0.7","text":"margot_plot now work even title subtitle passed. margot_plot_policy_tree: focus simply plotting, rather plotting interpreting. margot_interpret_table: longer requires specification estimate. General explanation printed separately (used ).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-8] margot 0.2.0.6","text":"Greatly enhanced functionality margot_plot_policy_tree explains result.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-6","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-8] margot 0.2.0.6","text":"broken indexing changed margot_causal_forest margot_multi_arm_causal_forest use outcome names, rather model names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-8] margot 0.2.0.5","text":"margot_causal_forest margot_multi_arm_causal_forest now use outcome names, rather model names, name outcomes","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.4","text":"margot_process_longitudinal_data orders correctly lmtp models updating censoring column not_lost handles missing responses well attrition. function additionally automatically dummy codes ordinal variables standardises continuous variables. Presently implemented three waves, future expanded handle arbitrarily many.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-4","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-7] margot 0.2.0.4","text":"Functions compute_qini_curves extract_qini_data work binary interventions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-3","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.3","text":"margot_summary_tables creates summary tables baseline variables, exposure(s), outcome(s) using gtsummary package.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-0-3","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-7] margot 0.2.0.3","text":"margot_compute_gender_weights deprecated. Now use margot_compute_gender_weights_by_wave.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-0-2","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-7] margot 0.2.0.2","text":"coloured_histogram() coloured_histogram_quantile() deprecated. Now use new margot_plot_hist() instead. create_ordered_variable_custom deprecated. Now use created_ordered_variablefunction custom_breaks = c(..) obtain custom breaks.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.2","text":"margot_plot_hist() plotting distributions exposure variable","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0201","dir":"Changelog","previous_headings":"","what":"margot 0.2.0.1","title":"margot 0.2.0.1","text":"new table plot functions grf outputs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-020","dir":"Changelog","previous_headings":"","what":"margot 0.2.0","title":"margot 0.2.0","text":"improved subgroup comparison function deprecated compare_group_means function, compare_groupallowing contrasts causal difference relative risk scales. new wrapper functions functions grf plus visualising results.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0121","dir":"Changelog","previous_headings":"","what":"margot 0.1.2.1","title":"margot 0.1.2.1","text":"group_tab now works hood margot_plot, need specify explicitly group_tab now allows custom order plot, just decreasing effect size numerous small enhancements older parametric model options new logo","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-012","dir":"Changelog","previous_headings":"","what":"margot 0.1.2","title":"margot 0.1.2","text":"minor fixes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-011","dir":"Changelog","previous_headings":"","what":"margot 0.1.1","title":"margot 0.1.1","text":"functions interpret outputs lmtp models functions create tables functions create graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0101","dir":"Changelog","previous_headings":"","what":"margot 0.1.0.1","title":"margot 0.1.0.1","text":"Minor bug fixes performance improvements.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-010","dir":"Changelog","previous_headings":"","what":"margot 0.1.0","title":"margot 0.1.0","text":"Initial release: includes data exploration, model preparation, utility functions. # [2025-09-18] margot 1.0.236","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-1-0","dir":"Changelog","previous_headings":"","what":"New","title":"margot 0.1.0","text":"Added margot_report_consensus_policy_value() report much better consensus policy performs () treat-(ATE baseline) (b) treat-none (universal control), 95% CIs bootstrap SEs. Added margot_table_consensus_policy_value() produce compact, manuscript-ready table consensus policy values per outcome depth, contrasts.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"margot 0.1.0","text":"margot_policy_tree_stability() now persists consensus splits stability metrics support threshold-aware interpretation reporting. Depth-2 consensus now includes threshold_sd first-level nodes. margot_interpret_stability() margot_interpret_stability_batch() can optionally include simple CIs selection frequencies thresholds technical output (include_ci = TRUE). summary.margot_stability_policy_tree() displays quick consensus policy value summary vs treat-control-(light bootstrap, R=199).","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"notes-0-1-0","dir":"Changelog","previous_headings":"","what":"Notes","title":"margot 0.1.0","text":"changes backward compatible. New parameters default previous behavior. # [2025-09-19] margot 1.0.240 - 1.0.241","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-242-1","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-09-25] margot 1.0.242","text":"margot_policy_workflow(): one-call policy workflow orchestrates depth selection (margot_policy_summary_compare_depths()), mixed-depth summary reporting (margot_policy_summary_report()), optional interpretations (margot_interpret_policy_batch()). Adds brief_include_group control whether policy brief includes Group column. Shared text helper margot_policy_value_explainer() consistent definitions policy value vs control-/treat-, coverage, uplift, identity PV(control-) = Coverage × Uplift_Treated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improvements-1-0-242-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"[2025-09-25] margot 1.0.242","text":"margot_policy_summary_compare_depths() adds min_gain_for_depth_switch (default 0.005) prefer depth-1 unless depth-2 yields material --sample gain. margot_policy_summary_report() now supports audience = c(\"policy\",\"research\") drive policy-facing wording includes return_unit_masks return per-model evaluation masks (including not_excluded_ids) downstream plotting drill-downs. compact policy brief now includes Depth, issue dropping depth-1 rows summary table precomputed reports supplied fixed. margot_interpret_policy_batch() gains policy_value_source = c(\"compute\",\"use_coherent\") coherent_values interpretations can reuse PV rows summary report instead recomputing CIs.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"documentation-1-0-242","dir":"Changelog","previous_headings":"","what":"Documentation","title":"[2025-09-25] margot 1.0.242","text":"Added README.qmd quick-start usage new policy workflow summary 1.0.242 changes.","code":""}]
