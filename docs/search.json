[{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":null,"dir":"","previous_headings":"","what":"Data License","title":"Data License","text":"© 2024, Curators Margot Package simulated dataset, df_nz, copyrighted curators Margot Package. rights reserved. free : - Share — copy redistribute material medium format following terms: - Attribution — must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. - NonCommercial — may use material commercial purposes. - NoDerivatives — remix, transform, build upon material, may distribute modified material. information, see https://creativecommons.org/licenses/-nc-nd/4.0/ =======================================================================","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":"creative-commons-attribution-noncommercial-noderivatives-40-international-public-license","dir":"","previous_headings":"","what":"Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","title":"Data License","text":"exercising Licensed Rights (defined ), accept agree bound terms conditions Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License (“Public License”). extent Public License may interpreted contract, granted Licensed Rights consideration acceptance terms conditions, Licensor grants rights consideration benefits Licensor receives making Licensed Material available terms conditions. Click full text Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Licensing Information","title":"Licensing Information","text":"YEAR: 2024 COPYRIGHT HOLDER: Joseph . Bulbulia","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"data-license","dir":"","previous_headings":"","what":"Data License","title":"Licensing Information","text":"simulated dataset “df_nz” contained package licensed following terms:","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"custom-data-license","dir":"","previous_headings":"Data License","what":"Custom Data License","title":"Licensing Information","text":"Non-Commercial Use: may use data non-commercial purposes . Commercial use strictly prohibited. Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Redistribution: Redistribution data form, including modified versions, permitted. includes, limited , sharing data public repositories, distributing packaged software, providing third parties. Derivatives: may distribute modified versions data. details, contact authors package.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"code-license","dir":"","previous_headings":"","what":"Code License","title":"Licensing Information","text":"code package licensed Creative Commons Attribution 4.0 International (CC 4.0) license.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"key-terms","dir":"","previous_headings":"Code License","what":"Key Terms:","title":"Licensing Information","text":"Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Sharing Adaptation: free share adapt code, even commercial purposes, provided attribute original author(s) appropriately. Additional Restrictions: may apply legal terms technological measures legally restrict others anything license permits.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"tutorials-license","dir":"","previous_headings":"","what":"Tutorials License","title":"Licensing Information","text":"tutorials provided within package licensed Creative Commons Attribution 4.0 International (CC 4.0) license.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"key-terms-1","dir":"","previous_headings":"Tutorials License","what":"Key Terms:","title":"Licensing Information","text":"Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Sharing Adaptation: free share adapt tutorials, even commercial purposes, provided attribute original author(s) appropriately. Additional Restrictions: may apply legal terms technological measures legally restrict others anything license permits.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"disclaimer-of-warranties-and-limitation-of-liability","dir":"","previous_headings":"","what":"Disclaimer of Warranties and Limitation of Liability","title":"Licensing Information","text":"UNLESS OTHERWISE SEPARATELY UNDERTAKEN LICENSOR, EXTENT POSSIBLE, LICENSOR OFFERS LICENSED MATERIAL --AVAILABLE, MAKES REPRESENTATIONS WARRANTIES KIND CONCERNING LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, . INCLUDES, WITHOUT LIMITATION, WARRANTIES TITLE, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE LATENT DEFECTS, ACCURACY, PRESENCE ABSENCE ERRORS, WHETHER KNOWN DISCOVERABLE. DISCLAIMERS WARRANTIES ALLOWED FULL PART, DISCLAIMER MAY APPLY . EXTENT POSSIBLE, EVENT LICENSOR LIABLE LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OTHERWISE DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, LOSSES, COSTS, EXPENSES, DAMAGES ARISING PUBLIC LICENSE USE LICENSED MATERIAL, EVEN LICENSOR ADVISED POSSIBILITY LOSSES, COSTS, EXPENSES, DAMAGES. LIMITATION LIABILITY ALLOWED FULL PART, LIMITATION MAY APPLY . disclaimer warranties limitation liability provided shall interpreted manner , extent possible, closely approximates absolute disclaimer waiver liability.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). margot: MARGinal Observational Treatment-effects. doi:10.5281/zenodo.10907724, R package version 1.0.21 Functions obtain MARGinal Observational Treatment-effects observational data., https://go-bayes.github.io/margot/.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 1.0.21 Functions to obtain MARGinal Observational Treatment-effects from observational data.},   url = {https://go-bayes.github.io/margot/},   doi = {10.5281/zenodo.10907724}, }"},{"path":"https://go-bayes.github.io/margot/index.html","id":"margot","dir":"","previous_headings":"","what":"MARGinal Observational Treatment-effects","title":"MARGinal Observational Treatment-effects","text":"MARGinal Observational Treatment-effects.1 Causal inference requires balance across treatments compared. observational studies, balance guaranteed; quantifying causality therefore requires careful, multi-step workflows. goal margot enhance accessibility workflows causal inference. primary audience includes psychological scientists, although may benefit social scientists. package offers functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses streamlining estimation (Marginal) Average Treatment Effects, also supports workflows Conditional Average Treatment Effects exploring Heterogeneous Treatment Effects, well Modified Treatment Policies.","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MARGinal Observational Treatment-effects","text":"can install development version margot like :","code":"if (!require(devtools, quietly = TRUE)) {   install.packages(\"devtools\")   library(devtools) }  devtools::install_github(\"go-bayes/margot\")"},{"path":"https://go-bayes.github.io/margot/index.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"MARGinal Observational Treatment-effects","text":"Go :https://github.com/go-bayes/margot","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"license","dir":"","previous_headings":"Code","what":"License","title":"MARGinal Observational Treatment-effects","text":"code package licensed Creative Commons Attribution 4.0 International (CC 4.0) license. free share adapt code, even commercial purposes, provided attribute original author(s) appropriately. information, see CC 4.0. margot package distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See Disclaimer Warranties Limitation Liability section licensing information details.","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"citing-margot","dir":"","previous_headings":"Code","what":"Citing margot","title":"MARGinal Observational Treatment-effects","text":"use margot package research, may cite follows:","code":"bibentry(   bibtype = \"Manual\",   title = \"margot: MARGinal Observational Treatment-effects\",   author = person(\"Joseph A\", \"Bulbulia\"),   year = \"2024\",   note = \"R package version 1.0.21, Functions to obtain MARGinal Observational Treatment-effects from observational data.\",   url = \"https://go-bayes.github.io/margot/\",   doi = \"10.5281/zenodo.10907724\" )"},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"function takes z-scores transforms back original values data originally log-transformed. performs two-step transformation: first converting z-scores back log values using log-scale mean standard deviation, exponentiating return original scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"","code":"back_transform_log_z(z_scores, log_mean, log_sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"z_scores numeric value vector z-scores transformed back original scale. log_mean mean log-transformed dataset z-scores calculated. log_sd standard deviation log-transformed dataset z-scores calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_log_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Log-Transformed Scale — back_transform_log_z","text":"","code":"# Given log-transformed data with log_mean = 1.5 and log_sd = 0.5 original_value <- back_transform_log_z(z_scores = 1.2, log_mean = 1.5, log_sd = 0.5) print(original_value) #> [1] 8.16617  # Multiple z-scores can be transformed at once z_scores <- c(-1, 0, 1, 2) original_values <- back_transform_log_z(z_scores = z_scores, log_mean = 1.5, log_sd = 0.5) print(original_values) #> [1]  2.718282  4.481689  7.389056 12.182494  # Real-world example: back-transforming household income z-scores # Get mean and sd from original log-transformed data log_mean_inc <- mean(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found log_sd_inc <- sd(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found  # Back-transform all z-scores in the dataset original_data_scale <- back_transform_log_z(   df_grf$t0_log_household_inc_z,   log_mean = log_mean_inc,   log_sd = log_sd_inc ) #> Error: object 'df_grf' not found head(original_data_scale) #> Error: object 'original_data_scale' not found  # Interpret key points on the distribution (-1 SD, mean, +1 SD) z_scores <- c(-1, 0, 1) scale_values <- back_transform_log_z(   z_scores,   log_mean = log_mean_inc,   log_sd = log_sd_inc ) #> Error: object 'log_mean_inc' not found  # Create a data frame to display the relationship between z-scores and original values results_df <- data.frame(   z_score = z_scores,   data_scale = scale_values ) #> Error: object 'scale_values' not found print(results_df) # Shows what values on the original scale correspond to each z-score #> Error: object 'results_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Back-transform Log-transformed Mean — back_transform_logmean","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"Back-transforms log-transformed mean (using log(x + 1) transformation) original scale. utility function useful interpreting results original data transformed using log(x + 1) handle zero values normalize distribution data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"back_transform_logmean(log_mean)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"log_mean mean log scale, original data transformed using log(x + 1).","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"list containing mean original scale (`mean_original`). standard deviation back-transformed function due complexity introduced log(x + 1) transformation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"log_mean <- 1.098612 # true mean is 2. We add + 1 to the log to handle zero: log(2+1) = log(3) back_transformed_result <- back_transform_logmean(log_mean) print(back_transformed_result) #> $mean_original #> [1] 1.999999 #>"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Scale — back_transform_zscore","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"function takes z-score transforms back original scale using specified mean standard deviation original data. Often, standardization applied original scale values needed interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"back_transform_zscore(z, mean, sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"z numeric value vector z-scores transformed back original scale. mean mean original dataset z-score calculated. sd standard deviation original dataset z-score calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"# Given a dataset with mean = 100 and sd = 15 original_value <- back_transform_zscore(z = 1.5, mean = 100, sd = 15) print(original_value) #> [1] 122.5  # Multiple z-scores can be transformed at once z_scores <- c(-1, 0, 1, 2) original_values <- back_transform_zscore(z = z_scores, mean = 50, sd = 10) print(original_values) #> [1] 40 50 60 70"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_variables()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"","code":"boilerplate_measures(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Appendix of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_measures","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_variables(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_methods()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"","code":"boilerplate_methods(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Methods Section for a Causal Inference Study (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_methods(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"`r lifecycle::badge(\"deprecated\")` Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_additional_sections` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"","code":"boilerplate_methods_additional_sections(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_additional_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Additional Sections for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_additional_sections","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_causal_interventions()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"","code":"boilerplate_methods_causal_interventions(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_causal_interventions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Causal Interventions and Contrasts Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>)) — boilerplate_methods_causal_interventions","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_causal_interventions(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_confounding_control()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"","code":"boilerplate_methods_confounding_control(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_confounding_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Confounding Control Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_confounding_control","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_confounding_control(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_eligibility_criteria()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"","code":"boilerplate_methods_eligibility_criteria(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_eligibility_criteria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Eligibility Criteria Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_eligibility_criteria","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_eligibility_criteria(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"`r lifecycle::badge(\"deprecated\")`  Use `boilerplate` package: <https://go-bayes.github.io/boilerplate/> function deprecated. Please use `boilerplate::boilerplate_report_identification_assumptions()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"","code":"boilerplate_methods_identification_assumptions(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_identification_assumptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Identification Assumptions Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_identification_assumptions","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_identification_assumptions(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_missing_data()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"","code":"boilerplate_methods_missing_data(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Missing Data Handling Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_missing_data","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_missing_data(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_sample()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"","code":"boilerplate_methods_sample(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sample Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_sample","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_sample(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_statistical_estimator()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"","code":"boilerplate_methods_statistical_estimator(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_statistical_estimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Statistical Estimator Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_statistical_estimator","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_statistical_estimator(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_target_population()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"","code":"boilerplate_methods_target_population(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_target_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Target Population Description (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_target_population","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_target_population(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_report_variables()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"","code":"boilerplate_methods_variables(...)"},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/boilerplate_methods_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Variables Section for Methods (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — boilerplate_methods_variables","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_report_variables(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Margot plot — build_margot_plot","title":"Build Margot plot — build_margot_plot","text":"Build Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Margot plot — build_margot_plot","text":"","code":"build_margot_plot(   .data,   type,   options,   include_coefficients,   standardize_label )"},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Margot plot — build_margot_plot","text":".data Prepared data frame type Type effect (RD RR) options Options list include_coefficients Whether include coefficient text standardize_label Type standardization label (NZ, US, none)","code":""},{"path":"https://go-bayes.github.io/margot/reference/build_margot_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Margot plot — build_margot_plot","text":"ggplot object","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Causal Contrasts — causal_contrast_engine","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Estimates causal contrasts using generalized linear models different types treatment effects (ATE, ATT) outcomes (RR, RD). Supports handling multiply imputed datasets allows flexibility model specification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Causal Contrasts — causal_contrast_engine","text":"","code":"causal_contrast_engine(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Causal Contrasts — causal_contrast_engine","text":"df Data frame `mids` object containing data. Y Response variable name string. X Treatment exposure variable name string. baseline_vars Vector baseline covariate names. treat_0 Reference level treatment variable. treat_1 Treatment level interest comparison. estimand Type causal estimand (\"ATE\", \"ATT\"); defaults . type Type effect size (\"RR\" Risk Ratio, \"RD\" Risk Difference); defaults . nsims Number simulations bootstrap; defaults 200. cores Number cores parallel processing; uses available cores default. family Model family string family object; defaults \"gaussian\". weights name weights variable data frame, NULL weights used. continuous_X Whether X continuous variable; defaults FALSE. splines Whether apply spline transformation X; defaults FALSE. vcov Type variance-covariance matrix standard error estimation; defaults \"HC2\". verbose Whether print detailed output; defaults FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Depending configuration, returns summary object containing estimated causal contrasts, confidence intervals, potentially diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"function estimates average treatment effect (ATE) average treatment effect treated (ATT) using generalized linear models (GLMs). supports handling continuous categorical treatments, optional use spline transformations, adjustments multiple imputation datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"causal_contrast_marginal(   df,   Y,   X,   baseline_vars = \"1\",   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = NULL,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"df Data frame containing data. Y response variable data frame. X treatment exposure variable data frame. baseline_vars vector names baseline covariates adjust model. treat_0 reference level treatment variable, corresponding treatment control condition. treat_1 active level treatment variable, corresponding receiving treatment. estimand character vector specifying estimand; \"ATE\" Average Treatment Effect \"ATT\" Average Treatment Effect Treated. type character vector specifying type effect size; \"RD\" Risk Difference \"RR\" Risk Ratio. nsims Number simulations perform, relevant handling multiple imputation datasets. cores Number cores use parallel processing. family family GLM used (e.g., \"gaussian\" linear models). weights name weights variable data frame, NULL weights used. continuous_X Logical indicating whether treatment variable X continuous. splines Logical indicating whether use spline transformations treatment variable X. vcov method use variance-covariance matrix estimation. verbose Logical indicating whether display detailed output model fitting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"Depending 'type' specified, returns summary object containing either risk differences risk ratios along additional statistics like confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"# Assume that df is your dataset with variables 'outcome', 'treatment', 'age', and 'gender' result <- causal_contrast_marginal(df = df, Y = \"outcome\", X = \"treatment\",                                    baseline_vars = c(\"age\", \"gender\"),                                    treat_0 = \"control\", treat_1 = \"exposed\",                                    estimand = \"ATE\", type = \"RD\", nsims = 100,                                    cores = 2, family = \"gaussian\", weights = \"weight_var\",                                    continuous_X = FALSE, splines = FALSE,                                    vcov = \"HC3\", verbose = TRUE) #> Error in model.frame.default(formula = as.formula(formula_str), data = imputed_data,     weights = weights, drop.unused.levels = TRUE): 'data' must be a data.frame, environment, or list"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_shift()` instead. function generates histogram specific ranges highlighted indicate highest /lowest values within unit specified limits. allows customization bin width, unit change highlighting, range highlighted. useful settings modified treatment policies clarifying part distribution shifted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"","code":"coloured_histogram(   df,   col_name,   binwidth = 1,   unit_of_change = 1,   scale_min = NULL,   scale_max = NULL,   highlight_range = \"highest\" )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"df dataframe containing data plotted. col_name name column histogram generated. binwidth width bins histogram; defaults 1. unit_of_change unit change used define highlight range. subtitle mention unit. also adjusts calculation highlight thresholds slightly less unit go range data. Defaults 1. scale_min minimum value used scaling histogram. `NULL`, minimum value `col_name` used. scale_max maximum value used scaling histogram. `NULL`, maximum value `col_name` used. highlight_range Specifies range highlight: \"lowest\", \"highest\", \"\". Defaults \"highest\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"ggplot object histogram highlighted ranges specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram Highlighting Specific Ranges (DEPRECATED) — coloured_histogram","text":"","code":"if (FALSE) { # \\dontrun{ # assuming df_19 is your dataframe and contains the column 'forgiveness' graph <- coloured_histogram(   df = df_19,   col_name = \"forgiveness\",   scale_min = 1,   scale_max = 7,   highlight_range = \"highest\",   binwidth = .1, # adjust binwidth as needed   unit_of_change = 1 # specify the unit of change ) print(graph) } # }"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_categorical()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"","code":"coloured_histogram_quantiles(   df,   col_name,   n_divisions = NULL,   breaks = NULL,   binwidth = NULL,   n_bins = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colours = NULL,   hist_fill = \"lightgray\",   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"df dataframe containing data visualised col_name name column create histogram n_divisions number divisions create. null, user must provide breaks breaks optional. numeric vector specifying custom breakpoints binwidth width bins histogram n_bins optional. number bins histogram. overrides binwidth specified cutpoint_inclusive character string specifying whether cutpoints included lower upper category. must either \"lower\" \"upper\". default \"upper\" ties.method character string specifying ties handled colours optional. vector colours quantile lines hist_fill colour histogram fill. default \"lightgray\" hist_colour colour histogram outline. default \"black\" line_type line type quantile lines. default \"solid\" line_width line width quantile lines. default 0.75 title custom title plot. null, default title used subtitle custom subtitle plot. null, default subtitle used x_lab custom x-axis label. null, column name used y_lab custom y-axis label. default \"count\" theme_choice ggplot2 theme use. default theme_classic() text_size base text size plot. default 12 axis_text_angle angle x-axis text. default 45 add_density logical. true, adds density curve plot add_rug logical. true, adds rug plot x-axis facet_var optional. name variable use faceting x_scale_transform optional. transformation x-axis (e.g., \"log10\") y_scale_transform optional. transformation y-axis (e.g., \"log10\") additional_layers optional list additional ggplot2 layers add plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Distribution with Automatically Calculated Quantile Highlights (DEPRECATED) — coloured_histogram_quantiles","text":"ggplot object representing histogram highlighted quantiles","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"function creates histogram specified column dataframe, highlighting mean one standard deviation mean. draws vertical lines mean (black) plus/minus one standard deviation (blue gold, respectively), arrows mean standard deviation marker. title plot includes capitalized column name, achieved using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"coloured_histogram_sd(df, col_name, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"ggplot object representing histogram highlights mean   standard deviations. plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `df_nz` is a dataframe with a numeric column 'forgiveness' # and a factor or integer column 'wave' for subsetting: df_19 <- dplyr::filter(df_nz, wave == 2019)  graph_density_of_exposure <- coloured_histogram_sd(   df = df_19,   col_name = \"forgiveness\",   binwidth = 0.5 # Adjust binwidth as needed ) } # } print(graph_density_of_exposure) #> Error: object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_shift()` instead. function creates histogram highlights specified range values visualize shifts data distributions. highlighted range can indicate areas interest, shifts distribution. visualization useful understanding implications causal contrasts, modified treatment policies. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"","code":"coloured_histogram_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"df dataframe containing variable interest. col_name name column `df` visualized histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data create meaningful visualization. range_highlight numeric vector length 2 specifying start end range highlight. `NULL`, range highlighted. shift character string indicating direction shift, \"\" highlighting gold \"\" highlighting dodger blue. default \"\". show_avg_line logical value indicating whether display vertical line representing average value specified column using red dashed line. Default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"`ggplot` object representing histogram specified highlights. object can printed modified using `ggplot2` functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise Shifts in Data Distributions with Highlighted Ranges (DEPRECATED) — coloured_histogram_shift","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_nz is your dataframe and it includes a numeric variable 'forgiveness' # Filter to a specific subset, for example, wave 2019 df_19 <- dplyr::filter(df_nz, wave == 2019)  # Create and print the histogram graph_density_of_exposure <- coloured_histogram_shift(   df = df_19,   shift = \"down\",   col_name = \"forgiveness\",   binwidth = .5, # Adjust binwidth for your data   range_highlight = c(3.9, 10) ) print(graph_density_of_exposure) } # }"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"`r lifecycle::badge(\"deprecated\")` function deprecated removed future release. Please use new `margot_compare_groups()` function associated workflow instead. function calculates either difference average treatment effects (ATE) relative risk ratio (RRR) two independent subgroups. subgroup represented list includes estimated effect (theta) standard error (std.error) effect. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc. subgroups expected outputs `lmtp::lmtp_contrast()` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"","code":"compute_difference(group1, group2, type = \"RD\")"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"group1 list containing estimated effect standard error subgroup 1. Expected structure: list(vals = data.frame(theta = x, std.error = y)). group2 list containing estimated effect standard error subgroup 2. Expected structure: list(vals = data.frame(theta = x, std.error = y)). type character string specifying type calculation. \"RD\" risk difference (default), \"RR\" relative risk ratio.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high` type \"RD\",           `rrr`, `std_error_log`, `conf_low`, `conf_high` type \"RR\", rounded 4 decimal places.           Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"function calculates difference means, standard error difference, 95 list includes mean (theta) standard error (std.error) group. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"compute_difference_means(group1, group2)"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"group1 list containing mean standard error group 1. Expected structure: list(vals = list(theta = x, std.error = y)). group2 list containing mean standard error group 2. Expected structure: list(vals = list(theta = x, std.error = y)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high`,           rounded 4 decimal places. Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"group1 <- list(vals = list(theta = 100, std.error = 10)) group2 <- list(vals = list(theta = 90, std.error = 5)) output <- compute_difference_means(group1, group2) cat(output$interpretation)  # Print the interpretation #> The difference in means is 10 with a standard error of 11.1803 and a 95% CI of [-11.9135, 31.9135]."},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"DEPRECATED: function longer functional removed future version. Please use `compute_qini_curves_binary()` binary treatments `compute_qini_curves_multi_arm()` multi-arm treatments instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"","code":"compute_qini_curves(tau_hat, Y, W = NULL, W_multi = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"tau_hat Matrix vector estimated treatment effects. Y Vector observed outcomes. W Vector treatment assignments binary treatment. W_multi Factor treatment assignments multi-arm treatment.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Multi-Arm and Binary Treatments (Deprecated) — compute_qini_curves","text":"data frame containing Qini curve data plotting.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"Computes Qini curves binary treatments using maq package. function calculates Conditional Average Treatment Effect (CATE) Average Treatment Effect (ATE) Qini curves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"","code":"compute_qini_curves_binary(tau_hat, Y, W, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"tau_hat Numeric vector estimated treatment effects. Y Vector matrix observed outcomes. W Vector treatment assignments (binary). verbose Logical; TRUE, print diagnostic information execution.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Binary Treatments — compute_qini_curves_binary","text":"list containing two elements: qini_data data frame containing Qini curve data plotting. qini_objects list maq objects CATE ATE Qini curves. Returns NULL error occurs resulting Qini data empty.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"function computes Qini curves multi-arm treatment effects using maq package. handles various edge cases provides detailed information computation process. function computes Qini curves multi-arm causal forests using doubly robust scores. handles various edge cases provides fallback mechanisms ensure valid outputs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"","code":"compute_qini_curves_multi_arm(   model,   tau_hat,   Y,   W_multi,   W.hat = NULL,   cost = NULL,   verbose = TRUE )  compute_qini_curves_multi_arm(   model,   tau_hat,   Y,   W_multi,   W.hat = NULL,   cost = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"model fitted GRF multi-arm causal forest model. tau_hat Matrix estimated treatment effects (one column per treatment arm comparison). Y Vector matrix observed outcomes. W_multi Factor vector multi-arm treatment assignments. W.hat Optional vector treatment probabilities (one arm). cost Optional vector costs (one arm). verbose Logical; TRUE, print diagnostic information execution.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"list containing: qini_data data frame containing Qini curve data plotting. qini_objects list maq objects curve, can used compute average gain. qini_data attribute \"imputed\" TRUE curves imputed zeros. list containing: qini_data data frame containing Qini curve data plotting. qini_objects list maq objects treatment comparison. Returns NULL error occurs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves_multi_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Qini Curves for Multi-Arm Treatments — compute_qini_curves_multi_arm","text":"function computes Qini curves arms combined, baseline (covariates), individual treatment arm. handles cases Qini objects zero length NULL, extending curves zeros necessary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Formula for Regression Models — construct_formula","title":"Construct a Formula for Regression Models — construct_formula","text":"function dynamically constructs regression formula based provided parameters. supports incorporating splines continuous variables can handle interaction terms, including subclass variable. function ensures subclass variable redundantly included baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"construct_formula(   Y,   X = 1,   baseline_vars,   continuous_X = FALSE,   splines = FALSE,   subclass = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Formula for Regression Models — construct_formula","text":"Y string specifying dependent variable model. X string specifying independent treatment exposure variable; defaults 1 (intercept model). baseline_vars character vector baseline covariate names include model. continuous_X logical indicating whether `X` continuous variable; TRUE `splines` TRUE, applies spline transformation `X`. splines logical indicating whether apply spline transformations treatment variable `X`. subclass optional string specifying subclass variable interaction `X` baseline covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Formula for Regression Models — construct_formula","text":"string representing constructed formula use regression modeling functions like `glm`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"# Example with basic interaction terms without subclass: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), FALSE, FALSE) #> [1] \"health_outcome ~ treatment * ( age+sex )\"  # Example with spline transformation for a continuous treatment: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), TRUE, TRUE) #> [1] \"health_outcome ~ bs( treatment ) * ( age+sex )\"  # Example including a subclass variable: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), FALSE, FALSE, \"region\") #> [1] \"health_outcome ~ region * ( treatment * ( age+sex+income ) )\"  # Example with continuous treatment, splines, and subclass interaction: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), TRUE, TRUE, \"region\") #> [1] \"health_outcome ~ region * ( bs( treatment ) * ( age+sex+income ) )\""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"Creates basic data frame use Qini calculations fail.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"","code":"create_fallback_qini_data(tau_hat, W_multi)"},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"tau_hat Matrix treatment effect estimates. W_multi Factor vector treatment assignments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Fallback Qini Data for Multi-Arm Treatments — create_fallback_qini_data","text":"data frame proportion, gain, curve columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"Creates basic Qini objects use calculations fail.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"","code":"create_fallback_qini_objects(tau_hat, W_multi)"},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"tau_hat Matrix treatment effect estimates. W_multi Factor vector treatment assignments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_fallback_qini_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Fallback Qini Objects for Multi-Arm Treatments — create_fallback_qini_objects","text":"list Qini objects minimal structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"function processes wide format dataframe filter create list dataframes based levels specified factor exposure variable. separates dataframes based level factor variable, one present. continuous variables specified, returns dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"create_filtered_wide_dataframes(dat_wide, exposure_vars)"},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"dat_wide wide format dataframe contains exposure variables. exposure_vars character vector listing names exposure variables. vector must include least one valid variable name dataframe.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"list dataframes, corresponding level factor exposure variable         factor present; otherwise, single dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"# Assuming wide_data is a dataframe and \"exposure_var\" includes factor or continuous variables: list_filtered_df <- create_filtered_wide_dataframes(wide_data, c(\"exposure_var1\", \"exposure_var2\")) #> Error in eval(expr, envir, enclos): object 'wide_data' not found # Access individual filtered dataframe if factor variables present: q1_df <- list_filtered_df[[\"tile_1\"]]  # For factor level \"tile_1\" #> Error in eval(expr, envir, enclos): object 'list_filtered_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"function divides numeric variable categories based either quantile breaks custom-specified breaks, creates ordered factor variable informative labels. now includes rich CLI reporting better user feedback.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"","code":"create_ordered_variable(   df,   var_name,   n_divisions = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   custom_breaks = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"df data frame containing variable divided categories. var_name name variable within data frame divide categories. n_divisions number quantile divisions create. Required custom_breaks provided. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". ties.method character string specifying ties handled calculating quantiles. Must one \"first\", \"last\", \"random\", \"ordered\", \"average\". NULL (default), set \"last\" cutpoint_inclusive \"upper\", \"first\" cutpoint_inclusive \"lower\". custom_breaks numeric vector break points use categorisation. provided, overrides quantile-based division specified n_divisions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"input data frame additional column representing ordered factor variable.         new column name original variable name \"_binary\" appended         2 divisions, \"_cat\" otherwise.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"function deprecated. Please use `create_ordered_variable()` instead. Create Ordered Variable Custom Breaks Auto-generated Labels function creates ordered categorical variable dataframe based user-specified breaks. automatically generates labels reflecting break points handles various edge cases.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"create_ordered_variable_custom(   df,   var_name,   breaks,   include_lowest = TRUE,   right = TRUE,   cutpoint_inclusive = \"upper\",   inf_label = \"Inf\",   neg_inf_label = \"-Inf\" )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"df data frame containing variable transformed. var_name name numeric variable within data frame converted ordered factor. variable ideally continuous. breaks numeric vector specifying breakpoints intervals. breakpoints cover entire range variable. include_lowest Logical, lowest value included first interval? Default TRUE. right Logical, intervals closed right (open left)? Default TRUE. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". inf_label string use infinity labels. Default \"Inf\". neg_inf_label string use negative infinity labels. Default \"-Inf\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"Returns data frame additional column representing ordered factor variable.         new column named combining original variable name suffix \"_cat\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"df <- data.frame(x = runif(100, 0, 10)) df_updated <- create_ordered_variable_custom(df, \"x\", c(0, 2, 5, 10)) #> Error in create_ordered_variable_custom(df, \"x\", c(0, 2, 5, 10)): could not find function \"create_ordered_variable_custom\""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Tau Hat Plot — create_tau_hat_plot","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"Creates histogram plot tau hat values treatment comparison.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"","code":"create_tau_hat_plot(tau_hat, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"tau_hat matrix estimated treatment effects. outcome character string specifying name outcome variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"ggplot object representing distribution tau hat values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transition matrix for state transitions — create_transition_matrix","title":"Create transition matrix for state transitions — create_transition_matrix","text":"satisify positivity assumption causal inference, must ensure exposure occurs data. function computes transition matrix given state variable across subjects, tracking changes consecutive observations. function handles numeric factor state variables, excluding NA values transition count.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"create_transition_matrix(data, state_var, id_var)"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transition matrix for state transitions — create_transition_matrix","text":"data data frame containing observations. state_var name state variable column `data` string. variable tracks state changes analyzed. id_var name identifier variable column `data` string. variable distinguishes different subjects entities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transition matrix for state transitions — create_transition_matrix","text":"matrix indicating number transitions states. rows represent initial state (''), columns represent subsequent state (''). Diagonal entries indicate number times state change, -diagonal entries indicate transitions one state another.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create transition matrix for state transitions — create_transition_matrix","text":"function explicitly excludes NA values transition matrix calculation. treats numeric state variables converting factors, ensuring consistent analysis approach numeric factor types.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") #> Error in create_transition_matrix(df, \"religion_believe_god\", \"id\"): could not find function \"create_transition_matrix\" print(transition_matrix) #> Error: object 'transition_matrix' not found"},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"internal function processes policy tree object calculates positions nodes visualisation purposes. extracts relevant information policy tree computes x y coordinates node.","code":""},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"","code":"debug_node_data_with_positions(policy_tree, node_distance_adjustment = -1.5)"},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"policy_tree policy tree object, typically obtained causal forest model. node_distance_adjustment adjustment spacing nodes. Default -1.5.","code":""},{"path":"https://go-bayes.github.io/margot/reference/debug_node_data_with_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Node Data and Positions for Policy Tree Visualisation — debug_node_data_with_positions","text":"data frame containing information node policy tree,   including ID, whether leaf node, split variable, split value, action,   left right child node IDs, x y coordinates visualization.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":null,"dir":"Reference","previous_headings":"","what":"df_nz: Example Data Frame — df_nz","title":"df_nz: Example Data Frame — df_nz","text":"dataset contains simulated data New Zealand Attitudes Values Study.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df_nz: Example Data Frame — df_nz","text":"","code":"data(df_nz)"},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df_nz: Example Data Frame — df_nz","text":"data frame X rows Y variables: age participant age years agreeableness Score agreeableness scale. Includes items : . sympathize others' feelings. ii. interested people's problems. (reversed) iii. feel others' emotions. iv. really interested others. (reversed)  ... variables","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df_nz: Example Data Frame — df_nz","text":"Simulated data. Copyright (c) 2024 margot package contributors.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"df_nz: Example Data Frame — df_nz","text":"dataset licensed custom license. may use data non-commercial purposes appropriate credit, redistribution data form, including modified versions, permitted protect privacy. code margot package licensed GNU General Public License (GPL) v3.0. can redistribute /modify terms GPL published Free Software Foundation. See <http://www.gnu.org/licenses/>.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"df_nz: Example Data Frame — df_nz","text":"","code":"data(df_nz) head(df_nz) #>   id wave      age agreeableness alcohol_frequency alcohol_intensity #> 1  1 2018 40.31341      6.235760          4.031045         6.0138428 #> 2  1 2019 41.33449      6.216993          3.964873        10.0320085 #> 3  1 2020 42.24450      6.539885          3.950068         9.9997619 #> 4  2 2018 43.85094      6.790531          4.024855         1.0030336 #> 5  2 2019       NA            NA                NA                NA #> 6  2 2020 45.80632      5.484677          3.985040         0.9976499 #>   alert_level_combined_lead   belong belong_accept belong_beliefs #> 1                  no_alert 4.958810      7.000000       4.964069 #> 2                  no_alert 6.039168      6.954222       5.985981 #> 3                  no_alert 5.382137      6.017268       2.950767 #> 4                      <NA> 6.311607      5.976047       6.018113 #> 5                  no_alert       NA            NA             NA #> 6                      <NA> 5.991122      6.015296       5.985946 #>   belong_routside_reversed  bodysat born_nz charity_donate conscientiousness #> 1                 2.978316 1.969601       1     0.00000000          5.781907 #> 2                 5.046594 3.039433       1     0.01373293          6.004211 #> 3                 7.000000 6.042476       1   399.96241829          4.719577 #> 4                 6.980109 5.958325       1   199.96546646          5.238591 #> 5                       NA       NA       1             NA                NA #> 6                 5.972425 6.030989       1   200.03938746          6.467995 #>   edu emotion_regulation_change_thinking_to_calm #> 1   8                                   6.999934 #> 2   8                                   6.979494 #> 3   8                                   6.981677 #> 4   7                                   4.963946 #> 5   7                                         NA #> 6   7                                   2.003005 #>   emotion_regulation_hide_neg_emotions emotion_regulation_out_control #> 1                             6.044651                       2.028738 #> 2                             6.984203                       1.984919 #> 3                             6.043920                       2.018791 #> 4                             5.024856                       1.000000 #> 5                                   NA                             NA #> 6                             4.995746                       1.000000 #>   emp_job_sat emp_job_secure emp_job_valued employed eth_cat extraversion #> 1    5.971694       7.000000       6.023997        1    euro     4.740896 #> 2    6.019789       6.967036       6.022545        1    euro     4.737648 #> 3    7.000000       6.974346       6.006828        1    euro     4.724690 #> 4    5.987723       6.976047       7.000000        1    euro     3.960051 #> 5          NA             NA             NA       NA    euro           NA #> 6    6.032520       6.961107       5.986527        1    euro     2.764532 #>   forgiveness gen_cohort gratitude hlth_bmi hlth_fatigue hlth_height #> 1    4.020353      gen_X  6.986113 34.61469    0.9535594    1.856696 #> 2    4.969327      gen_X  7.000000 34.05344    2.0103681    1.826995 #> 3    5.366853      gen_X  6.999204 35.19452    2.9981118    1.786924 #> 4    5.618090      gen_X  6.367532 19.84119    0.9943821    1.620493 #> 5          NA      gen_X        NA       NA           NA          NA #> 6    5.315945      gen_X  6.683664 19.87911    0.9742263    1.614109 #>   hlth_sleep_hours hlth_weight home_owner honesty_humility hours_charity #> 1         8.546112   115.99149          1         5.954770   0.008159268 #> 2         8.019429   113.99033         NA         3.970874   0.000000000 #> 3         7.995631   117.95184          1         4.988354   0.028743272 #> 4         7.004173    54.01207          1         6.969159   6.011909720 #> 5               NA          NA         NA               NA            NA #> 6         8.018394    53.95457          1         7.000000   0.000000000 #>   hours_exercise household_inc impermeability_group kessler_depressed #> 1     0.51959112        200000             2.012835        0.00000000 #> 2     0.01974342        200000             4.964448        0.00000000 #> 3     0.00000000        140000             2.030814        0.00000000 #> 4     1.98318873        200000             4.994408        0.00000000 #> 5             NA            NA                   NA                NA #> 6     7.02405270        160000             2.008591        0.02017855 #>   kessler_effort kessler_hopeless kessler_latent_anxiety #> 1      0.9546004       0.00000000              0.9685371 #> 2      0.9633998       0.02006575              0.9830208 #> 3      1.9808154       0.04983561              1.7149373 #> 4      1.0289347       1.04402955              0.9997136 #> 5             NA               NA                    NaN #> 6      0.9598355       0.00000000              0.6297783 #>   kessler_latent_depression kessler_nervous kessler_restless kessler_worthless #> 1               0.037011885      0.98849863        0.9815225       0.046843363 #> 2               0.000000000      0.95881162        0.9716739       0.021033094 #> 3               0.006337577      3.03015091        0.0000000       0.009060714 #> 4               0.377568407      0.99305306        0.9758989       0.026907402 #> 5                       NaN              NA               NA                NA #> 6               0.003030027      0.02515866        1.0125775       0.000000000 #>   kessler6_sum lifemeaning  lifesat lifesat_ideal lifesat_satlife male #> 1     3.044502    6.468932 6.004578      5.970138        6.018526    1 #> 2     2.960963    5.978561 5.996101      6.018253        5.978932    1 #> 3     5.005375    5.549235 5.969862      5.961114        6.015522    1 #> 4     4.008829    5.971437 6.472409      6.000709        7.000000    0 #> 5           NA          NA       NA            NA              NA    0 #> 6     2.007682    5.954844 6.045588      5.016755        7.000000    0 #>   meaning_purpose meaning_sense  modesty neighbourhood_community neuroticism #> 1        6.012352      7.000000 6.786189                6.951882    2.543777 #> 2        5.975751      6.044783 6.002267                6.005449    3.049655 #> 3        4.956256      5.997665 5.702049                5.986452    2.960180 #> 4        6.024632      6.043560 6.955113                3.012109    4.224377 #> 5              NA            NA       NA                      NA          NA #> 6        5.979999      5.952246 6.977462                2.010986    4.456901 #>        nwi nz_dep2018 nzsei_13_l openness parent partner perfectionism #> 1 8.020139   5.953996         48 6.502722      1       1      4.303349 #> 2 6.668893   6.023145         65 6.469405      1       1      3.670650 #> 3 4.618780   6.024971         65 6.237941      1       1      3.337095 #> 4 7.627521   3.048911         69 2.031197      1       1      2.363609 #> 5       NA   2.967774         69       NA     NA      NA            NA #> 6 5.640812   3.036816         72 3.473353      1       1      2.953873 #>   permeability_individual pers_agreeable_feel_others_emotions #> 1                7.000000                            6.038855 #> 2                7.000000                            6.005890 #> 3                6.964188                            6.010749 #> 4                5.027991                            7.000000 #> 5                      NA                                  NA #> 6                5.021921                            7.000000 #>   pers_agreeable_no_interest_others pers_agreeable_no_interest_others_probs #> 1                          6.028096                                6.017042 #> 2                          5.956827                                6.025382 #> 3                          7.000000                                7.000000 #> 4                          6.983117                                6.037968 #> 5                                NA                                      NA #> 6                          6.037822                                2.013026 #>   pers_agreeable_sympathise_others pers_conscientious_chores_done #> 1                         7.000000                       5.003450 #> 2                         7.000000                       5.978509 #> 3                         5.951258                       2.976528 #> 4                         7.000000                       7.000000 #> 5                               NA                             NA #> 6                         6.960945                       5.998471 #>   pers_conscientious_forget_putback pers_conscientious_like_order #> 1                          6.035918                      5.972150 #> 2                          6.048918                      5.988758 #> 3                          2.951705                      5.991320 #> 4                          1.003034                      6.969415 #> 5                                NA                            NA #> 6                          7.000000                      6.977218 #>   pers_conscientious_make_mess pers_extraversion_dont_talkalot #> 1                     5.955233                        6.040438 #> 2                     6.045258                        3.985668 #> 3                     6.990426                        4.970881 #> 4                     5.961425                        6.012815 #> 5                           NA                              NA #> 6                     6.045320                        3.036480 #>   pers_extraversion_keepbackground pers_extraversion_life_party #> 1                         3.998360                     6.039570 #> 2                         5.020996                     4.998691 #> 3                         4.991396                     6.031292 #> 4                         4.995249                     2.963147 #> 5                               NA                           NA #> 6                         2.957594                     3.014112 #>   pers_extraversion_talk_peopleparties pers_honestyhumility_deserve_more #> 1                             3.006411                          5.986706 #> 2                             5.025187                          3.976311 #> 3                             2.966148                          5.973563 #> 4                             1.976786                          7.000000 #> 5                                   NA                                NA #> 6                             2.009894                          7.000000 #>   pers_honestyhumility_feel_entitled #> 1                           7.000000 #> 2                           6.950590 #> 3                           6.038719 #> 4                           7.000000 #> 5                                 NA #> 6                           7.000000 #>   pers_honestyhumility_pleasure_expensivegoods #> 1                                     5.022716 #> 2                                     1.984692 #> 3                                     2.023260 #> 4                                     6.993182 #> 5                                           NA #> 6                                     6.952615 #>   pers_honestyhumility_seen_expensivecar pers_neuroticism_mood_swings #> 1                               5.955832                     1.994415 #> 2                               3.020957                     6.033852 #> 3                               6.048881                     2.045891 #> 4                               7.000000                     5.032754 #> 5                                     NA                           NA #> 6                               7.000000                     6.043157 #>   pers_neuroticism_mostly_relaxed pers_neuroticism_seldom_blue #> 1                        2.027604                     4.953003 #> 2                        1.977769                     2.038987 #> 3                        2.993304                     4.964138 #> 4                        4.966090                     1.964646 #> 5                              NA                           NA #> 6                        1.997013                     5.952084 #>   pers_neuroticism_upset_easily pers_openness_difficult_abstraction #> 1                      1.000000                            6.022979 #> 2                      2.021009                            4.962520 #> 3                      2.031607                            4.954873 #> 4                      5.002216                            2.012435 #> 5                            NA                                  NA #> 6                      3.993217                            4.987355 #>   pers_openness_good_imagination pers_openness_interested_abstraction #> 1                       7.000000                             6.014076 #> 2                       6.978520                             7.000000 #> 3                       6.995509                             6.048047 #> 4                       2.955771                             1.000000 #> 5                             NA                                   NA #> 6                       4.989866                             1.000000 #>   pers_openness_vivid_imagination pol_wing political_conservative #> 1                        7.000000 1.020237               1.000000 #> 2                        6.989238 1.000000               1.022343 #> 3                        6.960658 1.000000               1.042282 #> 4                        2.033375 4.014205               4.960227 #> 5                              NA       NA                     NA #> 6                        2.960342 3.969545               4.954690 #>   power_no_control_composite power_no_control_composite_reversed #> 1                   1.519361                            6.537026 #> 2                   3.457300                            4.531562 #> 3                   1.501127                            6.545508 #> 4                   1.011948                            7.000000 #> 5                        NaN                                 NaN #> 6                   1.000000                            7.000000 #>   power_others_control power_self_nocontrol pwb_standard_living #> 1             1.000000             2.025217            7.042358 #> 2             4.954861             1.999267            8.981462 #> 3             1.976260             1.035171            6.960540 #> 4             1.002600             1.000000            9.993654 #> 5                   NA                   NA                  NA #> 6             1.000000             1.037436            9.969491 #>   pwb_your_future_security pwb_your_health pwb_your_relationships regc_2022_l #> 1                 8.973228        7.023662               9.961455           2 #> 2                 7.963623        1.970227               9.038338           2 #> 3                 8.993340        7.984213               9.964077           2 #> 4                10.000000        9.954387              10.000000          13 #> 5                       NA              NA                     NA          13 #> 6                10.000000        9.986748               9.032489          13 #>   religion_believe_god religion_believe_spirit religion_bigger_denominations #> 1                    0                       1                       not_rel #> 2                    0                       0                       not_rel #> 3                    0                       1                       not_rel #> 4                    0                       0                       not_rel #> 5                   NA                      NA                          <NA> #> 6                    0                       1                       not_rel #>   religion_identification_level religion_perceive_religious_discrim #> 1                             1                            1.000000 #> 2                             1                            1.035010 #> 3                             1                            1.000000 #> 4                             1                            1.020197 #> 5                            NA                                  NA #> 6                             1                            1.000000 #>   religion_religious rumination rural_gch_2018_l sample_frame #> 1                  0 0.03677838                1          1.1 #> 2                  0 0.01604958                1          1.1 #> 3                  0 0.00000000                1          1.1 #> 4                  0 0.04074371                1          1.1 #> 5                 NA         NA                1          1.1 #> 6                  0 0.00000000                1          1.1 #>   sample_frame_opt_in sample_weights self_control_have_lots #> 1                   0      0.6495057               4.987928 #> 2                   0      0.7789180               3.001922 #> 3                   0      0.8119713               5.026771 #> 4                   0      0.4022481               5.033600 #> 5                   0             NA                     NA #> 6                   0      0.4794723               7.000000 #>   self_control_wish_more_reversed self_esteem selfesteem_failure_reversed #> 1                        2.024191    5.983263                    5.049517 #> 2                        2.035422    6.024637                    6.010825 #> 3                        2.027122    6.016682                    5.038861 #> 4                        2.962663    6.697360                    7.000000 #> 5                              NA          NA                          NA #> 6                        2.983433    6.285690                    7.000000 #>   selfesteem_postiveself selfesteem_satself sexual_satisfaction sfhealth #> 1               5.959428           6.976774            5.963785 2.370515 #> 2               5.995463           6.045321            5.031907 3.692035 #> 3               5.979329           6.956274            6.030893 5.708331 #> 4               5.959445           7.000000            6.047659 7.000000 #> 5                     NA                 NA                  NA       NA #> 6               6.020617           5.990747            3.965026 6.035785 #>   sfhealth_expect_worse_health_reversed sfhealth_get_sick_easier_reversed #> 1                              1.000000                          3.048580 #> 2                              1.000000                          7.000000 #> 3                              6.005024                          6.006699 #> 4                              7.000000                          6.961256 #> 5                                    NA                                NA #> 6                              3.991105                          7.000000 #>   sfhealth_your_health smoker  support support_help support_noguidance_reversed #> 1             3.047783      0 7.000000     6.972380                    6.999528 #> 2             3.014775      0 6.959343     7.000000                    6.997369 #> 3             5.022465      0 6.967418     7.000000                    7.000000 #> 4             6.977021      0 7.000000     7.000000                    7.000000 #> 5                   NA     NA       NA           NA                          NA #> 6             7.000000      0 7.000000     6.984364                    6.975150 #>   support_turnto vengeful_rumin year_measured #> 1       6.959850       3.975229             1 #> 2       7.000000       3.014252             1 #> 3       7.000000       2.626865             1 #> 4       6.994214       2.363377             1 #> 5             NA             NA             0 #> 6       7.000000       2.678659             1"},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"function processes wide-format longitudinal data multiple time points: - wave t < final wave:   - wave t+1 **exposure columns**, participant remains \"lost\" wave t     ** exposures wave t+1 present (missing). Otherwise, censored wave t.   - wave t+1 **exposures** (.e., final wave purely outcomes),     require ** final-wave outcomes present. ** final-wave outcome missing,     participant censored wave t onward. Censoring sets future waves `NA`, censored, participants remain censored.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"","code":".strict_exposure_outcome_censoring(   df_wide,   exposure_vars,   ordinal_columns = NULL,   continuous_columns_keep = NULL,   scale_exposure = FALSE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = \"lost_following_wave\",   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"df_wide wide-format dataframe columns like t0_X, t1_X, t2_X, etc. exposure_vars Character vector exposure names (e.g. c(\"aaron_antagonism\", \"aaron_disinhibition\", ...)). ordinal_columns Character vector ordinal (factor) variables dummy-coded. continuous_columns_keep Numeric columns want scale (e.g. must remain original units). scale_exposure FALSE, scale exposures; TRUE, exposures also scaled. not_lost_in_following_wave Name \"lost\" indicator (default \"not_lost_following_wave\"). lost_in_following_wave Name \"lost\" indicator (default \"lost_following_wave\"). remove_selected_columns TRUE, remove original columns dummy-coding ordinal columns. time_point_prefixes Optional vector wave prefixes (like c(\"t0\",\"t1\",\"t2\")); NULL, auto-detect via regex. time_point_regex Regex used detect wave prefixes `time_point_prefixes` NULL. save_observed_y FALSE, set missing final-wave outcomes NA. TRUE, keep partial final-wave outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"processed dataframe, strict --nothing censoring exposures earlier waves,         outcome-based censoring final wave lacks exposures.","code":""},{"path":"https://go-bayes.github.io/margot/reference/dot-strict_exposure_outcome_censoring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strict All-or-Nothing Censoring for Longitudinal Data — .strict_exposure_outcome_censoring","text":"**Core Logic** wave t 0 T-2 (.e., penultimate wave): wave t+1 final wave exposures, fallback final wave's outcome columns. \"not_lost[t] = 1 ** final-wave outcomes present, else 0\". \"strict\" approach: ** exposure missing wave t+1, censor wave t onward.","code":"needed_exposures <- paste0(t+1, \"_\", exposure_vars)   not_lost[t] = 1 if rowSums(!is.na(needed_exposures)) == length(needed_exposures)                else 0    if not_lost[t] = 0, set waves t+1..T to NA"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"function provides double robust approach estimating causal effects. first computes marginal effects using `causal_contrast_marginal` function, processes tabulates results using `tab_engine_marginal`. function handles continuous categorical variables, allows specification type effect measure causal estimation tabulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"double_robust_marginal(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   nsims,   cores,   family,   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE,   delta = 1,   sd = 1,   new_name,   estimand = c(\"ATE\", \"ATT\"),   type_causal = c(\"RR\", \"RD\"),   type_tab = c(\"RR\", \"RD\") )"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"df data frame containing dataset analysis. Y name outcome variable string. X name treatment exposure variable string. baseline_vars vector covariate names included model. treat_0 reference level treatment variable. treat_1 treatment level treatment variable. nsims number simulations run, used bootstrap Monte Carlo methods. cores number processor cores use parallel computation. family description error distribution link function used model. weights name weights variable data frame, NULL weights used. continuous_X Logical, indicating whether treatment variable X continuous. splines Logical, indicating whether use spline functions continuous variables. vcov method use variance-covariance estimation. verbose Logical, indicating whether print detailed output computation. delta assumed smallest worthwhile effect, used E-value calculations tabulation. sd standard deviation effect estimate, used E-value calculations. new_name new name assign tabulated output, typically describing variable model. estimand Specifies target causal inference, \"ATE\" (Average Treatment Effect) \"ATT\" (Average Treatment Treated). type_causal type effect size (e.g., \"RR\" Risk Ratio \"RD\" Risk Difference) computed causal analysis. type_tab type effect size used tabulation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"list containing two elements: `causal_results` results causal analysis,         `tab_results` tabulated results including E-values statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"# Assuming you have a dataset `df_ate` and necessary variables defined results <- double_robust_marginal(   df = df_ate,   Y = \"t2_kessler_latent_anxiety_z\",   X = \"treatment_var\",   baseline_vars = c(\"age\", \"gender\"),   treat_1 = \"intervention\",   treat_0 = \"control\",   nsims = 200,   cores = 4,   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   estimand = \"ATE\",   type_causal = \"RD\",   type_tab = \"RD\",   vcov = \"HC2\",   new_name = \"Test Model Effect\",   delta = 1,   sd = 1 ) #> Error: object 'df_ate' not found"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Plotting — extract_qini_data","title":"Extract Qini Data for Plotting — extract_qini_data","text":"Extracts Qini curve data Qini object prepares plotting. function handles cases Qini objects may NULL missing required components, extending data needed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Plotting — extract_qini_data","text":"","code":"extract_qini_data(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Plotting — extract_qini_data","text":"qini_obj Qini object. name Name treatment arm. max_index Maximum index extend curve . verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Plotting — extract_qini_data","text":"data frame extracted Qini data containing: proportion Proportion population ranked predicted treatment effect gain Gain proportion curve Name curve (e.g., \"cate\" \"ate\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"Extracts Qini curve data Qini object binary treatments prepares plotting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"","code":"extract_qini_data_binary(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"qini_obj Qini object. name Name curve type (either \"ate\" \"cate\"). max_index Maximum index extend curve . verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Binary Treatment Plotting — extract_qini_data_binary","text":"data frame extracted Qini data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"Extracts formats Qini curve data maq object multi-arm treatments.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"","code":"extract_qini_data_multi(qini_obj, name, max_index, verbose = TRUE)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"qini_obj Qini object maq. name Name treatment comparison. max_index Maximum index extend curve . verbose Logical indicating whether display detailed messages.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Multi-Arm Treatments — extract_qini_data_multi","text":"data frame proportion, gain, curve columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Results by Comparison — group_results_by_comparison","title":"Group Results by Comparison — group_results_by_comparison","text":"Groups results multi-arm causal forest analysis comparison levels. Groups custom evaluation tables treatment comparison level.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Results by Comparison — group_results_by_comparison","text":"","code":"group_results_by_comparison(results)  group_results_by_comparison(results)"},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Results by Comparison — group_results_by_comparison","text":"results list model results. results_list list results margot_multi_arm_causal_forest.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Results by Comparison — group_results_by_comparison","text":"list grouped results comparison levels. list data frames, one treatment comparison.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Annotate Treatment Effect Estimates — group_tab","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports variety sorting options including alphabetical, magnitude (ascending descending), E-value bound (ascending descending), custom order, default alias backward compatibility. also handles original scale estimates available. function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports variety sorting options including alphabetical, magnitude (ascending descending), E-value bound (ascending descending), custom order, default alias backward compatibility. also handles original scale estimates available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"group_tab(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL )  group_tab(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"df Data frame containing variables interest, list containing results data frame label mapping transform_to_original_scale(). type Type treatment effect analyze. One 'RR' (Risk Ratio) 'RD' (Risk Difference). Defaults 'RD'. order Sorting option outcomes. Options : 'alphabetical': sort outcome name (–Z) 'magnitude_desc': sort absolute effect size, descending (default 'magnitude') 'magnitude_asc': sort absolute effect size, ascending 'evaluebound_desc': sort E-value bound, descending 'evaluebound_asc': sort E-value bound, ascending 'custom': user-defined order (requires custom_order) 'default': alias 'magnitude_desc' (deprecated) Default 'default'. custom_order Character vector specifying custom outcome ordering, used order = 'custom'. Must contain outcomes exactly .","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"data frame arranged according `order`, annotated : Estimate category (positive, negative, reliable) Formatted label effect confidence interval Optional original-scale label _original columns present data frame arranged according `order`, annotated : Estimate category (positive, negative, reliable) Formatted label effect confidence interval Optional original-scale label _original columns present","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function detects whether `df` list output transform_to_original_scale() extracts `results_df` `label_mapping` accordingly. ensures `outcome` column, applies label mapping, sorts based chosen `order`. New options 'magnitude_desc' 'magnitude_asc' sort absolute effect size; 'evaluebound_desc' 'evaluebound_asc' sort E-Value bound; 'alphabetical' sorts outcome name; 'custom' respects user-provided vector; 'default' alias 'magnitude_desc'. function detects whether `df` list output transform_to_original_scale() extracts `results_df` `label_mapping` accordingly. ensures `outcome` column, applies label mapping, sorts based chosen `order`. New options 'magnitude_desc' 'magnitude_asc' sort absolute effect size; 'evaluebound_desc' 'evaluebound_asc' sort E-Value bound; 'alphabetical' sorts outcome name; 'custom' respects user-provided vector; 'default' alias 'magnitude_desc'.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"# descending magnitude (default for 'default') result_df <- group_tab(df = analysis_df, order = 'default') #> Error in group_tab(df = analysis_df, order = \"default\"): could not find function \"group_tab\"  # ascending magnitude result_df <- group_tab(df = analysis_df, order = 'magnitude_asc') #> Error in group_tab(df = analysis_df, order = \"magnitude_asc\"): could not find function \"group_tab\"  # strongest E-value bound first result_df <- group_tab(df = analysis_df, order = 'evaluebound_desc') #> Error in group_tab(df = analysis_df, order = \"evaluebound_desc\"): could not find function \"group_tab\"  # alphabetical result_df <- group_tab(df = analysis_df, order = 'alphabetical') #> Error in group_tab(df = analysis_df, order = \"alphabetical\"): could not find function \"group_tab\"  # custom ordering custom_order <- c('Outcome3','Outcome1','Outcome2') result_df <- group_tab(df = analysis_df, order = 'custom', custom_order = custom_order) #> Error in group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order): could not find function \"group_tab\"  # descending magnitude (default for 'default') result_df <- group_tab(df = analysis_df, order = 'default') #> Error in group_tab(df = analysis_df, order = \"default\"): could not find function \"group_tab\"  # ascending magnitude result_df <- group_tab(df = analysis_df, order = 'magnitude_asc') #> Error in group_tab(df = analysis_df, order = \"magnitude_asc\"): could not find function \"group_tab\"  # strongest E-value bound first result_df <- group_tab(df = analysis_df, order = 'evaluebound_desc') #> Error in group_tab(df = analysis_df, order = \"evaluebound_desc\"): could not find function \"group_tab\"  # alphabetical result_df <- group_tab(df = analysis_df, order = 'alphabetical') #> Error in group_tab(df = analysis_df, order = \"alphabetical\"): could not find function \"group_tab\"  # custom ordering custom_order <- c('Outcome3','Outcome1','Outcome2') result_df <- group_tab(df = analysis_df, order = 'custom', custom_order = custom_order) #> Error in group_tab(df = analysis_df, order = \"custom\", custom_order = custom_order): could not find function \"group_tab\""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"Reads RDS file specified `name` directory defined `dir_path` `push_mods`, returning data frame object stored within. .rds file found, searches file without .rds extension. function uses `` package resolve path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"","code":"here_read(name, dir_path = NULL, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"name Character string specifying name file read (without \".rds\" extension). dir_path Character string specifying directory path file read. NULL (default), uses `push_mods`. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"data frame R object stored file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"`dir_path` NULL, `push_mods` variable must defined user's environment within package, pointing directory files read. function first try read .rds file. found, attempt read file without .rds extension.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame or Object from RDS File in a Specified Directory — here_read","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved an RDS file named \"my_df.rds\" in that directory my_df <- here_read(\"my_df\") #> Error in here_read(\"my_df\"): object 'push_mods' not found  # Reading from a custom directory my_df <- here_read(\"my_df\", dir_path = \"~/custom_dir\") #> Error in here_read(\"my_df\", dir_path = \"~/custom_dir\"): File not found: ~/custom_dir/my_df.rds or ~/custom_dir/my_df"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"function deprecated removed future releases. reading data frames, consider using `here_read_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"here_read_arrow(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"name Character string specifying name Parquet file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- here_read_arrow(\"my_dataset\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"Reads `.qs` file specified `name` directory defined `dir_path`, returning data frame object stored within. function uses `qs` package efficiently read `.qs` files `` package construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"","code":"here_read_qs(name, dir_path = NULL, nthreads = 1, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"name Character string specifying name `.qs` file read (without \".qs\" extension). dir_path Character string specifying directory path file read. NULL (default), uses `push_mods`. nthreads Integer specifying number threads use decompression. Default 1. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"data frame object representing data stored specified `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"`dir_path` NULL, `push_mods` variable must defined user's environment within package, pointing directory files read. function throw error specified file exist read `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame or Object from qs File in a Specified Directory — here_read_qs","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved a `.qs` file named \"my_dataset.qs\" in that directory my_df <- here_read_qs(\"my_dataset\") #> Error in here_read_qs(\"my_dataset\"): object 'push_mods' not found  # Reading from a custom directory with multiple threads my_df <- here_read_qs(\"my_dataset\", dir_path = \"~/custom_dir\", nthreads = 4) #> Error in here_read_qs(\"my_dataset\", dir_path = \"~/custom_dir\", nthreads = 4): File not found: ~/custom_dir/my_dataset.qs"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame as RDS File in a Specified Directory — here_save","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Saves provided data frame RDS file using specified name, within directory defined `push_mods` function uses `` package construct path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"here_save(df, name, dir_path = NULL, compress = TRUE, quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"df Data frame object saved. object want persist disk. name Character string specifying base name file. \".rds\" extension automatically appended name. dir_path Character string specifying directory path file saved. NULL (default), uses `push_mods`. compress Logical character string specifying type compression use. See `?saveRDS` details. Default TRUE. quiet Logical. TRUE, suppresses console output. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Invisibly returns full path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"`dir_path` NULL, `push_mods` variable defined user's environment within package point directory files saved. assumed specified directory exists. function create directories.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"# assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save(my_df, \"my_df\") #> Error in here_save(my_df, \"my_df\"): object 'push_mods' not found  # specifying a custom directory here_save(my_df, \"my_df\", dir_path = \"~/custom_dir\", compress = \"xz\") #> Warning: cannot open compressed file '/Users/joseph/custom_dir/my_df.rds', probable reason 'No such file or directory' #> Error in xzfile(file, mode): cannot open the connection"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"function deprecated removed future releases. saving data frames, consider using `here_save_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"here_save_arrow(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"df Data frame saved. name Character string specifying base name file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_arrow(my_df, \"my_saved_dataframe\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"Saves provided data frame object `.qs` file using specified name, within directory defined `dir_path`. function leverages `qs` package write data `.qs` format enhanced compression efficient storage quick access R.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"","code":"here_save_qs(obj, name, dir_path, preset = \"high\", nthreads = 1)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"obj Data frame object saved. object want persist disk `.qs` format. name Character string specifying base name file (without \".qs\" extension). dir_path Character string specifying directory path file saved. preset Character string specifying compression preset. Default \"high\" better compression. nthreads Integer specifying number threads use compression. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"Invisible NULL. primary effect function side effect writing `.qs` file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"`dir_path` argument must point existing directory. function create directories; assumes specified directory already exists. function uses enhanced compression settings default minimize file size.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame or Object to qs File in a Specified Directory with Enhanced Compression — here_save_qs","text":"","code":"my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_qs(my_df, \"my_saved_dataframe\", \"~/mydata\") #> Error in qs::qsave(obj, file_path, preset = preset, nthreads = nthreads): For file ~/mydata/my_saved_dataframe.qs: Failed to open for writing. Does the directory exist? Do you have file permissions? Is the file name long? (>255 chars)"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"function takes list data frames, performs multiple imputation fill missing values using 'mice' package, combines imputed datasets single dataset. imputations performed separately data frame list, results combined 'mids' object, cleaned returned.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"impute_and_combine(   list_df,   m = 10,   exclude_vars = c(\"t0_sample_frame\", \"id\", \"t0_sample_origin_names_combined\") )"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"list_df list containing data frames perform multiple imputation. m number multiple imputations perform data frame. exclude_vars vector variable names excluded imputation model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"data frame combines imputed datasets, unnecessary columns removed         row names reset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming list_df is a list of data frames with missing values   imputed_data <- impute_and_combine(list_df, m = 5)   print(imputed_data) } # }"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate E-values for LMTP Output — lmtp_evalue_tab","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"function takes output `margot_tab_lmtp()`, contains estimates treatment effects, calculates E-values assess robustness estimates potential unmeasured confounding. E-values quantify minimum strength association, risk ratio scale, unmeasured confounder need treatment outcome, fully explain away observed association. function supports risk differences (RD) risk ratios (RR) scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"lmtp_evalue_tab(x, delta = 1, sd = 1, scale = c(\"RD\", \"RR\"))"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"x data frame output `margot_tab_lmtp()` containing estimates interest. delta hypothesized increase outcome, used `scale` \"RD\". Default 1. sd standard deviation outcome, used `scale` \"RD\". Default 1. scale character string indicating scale estimate: \"RD\" risk difference, \"RR\" risk ratio. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"data frame similar `x`, additional columns E-Value lower bound, excluding   'standard_error' column.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'tab_contrast_hours_charity_z_null' is a data frame output from `margot_lmtp_tab()` lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RD\") lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RR\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"","code":"manager_boilerplate_measures(...)"},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/manager_boilerplate_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — manager_boilerplate_measures","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"function calculates adjusts weights censoring, combining sample weights provided. also offers options trimming normalising resulting weights. Progress reported using cli package.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"","code":"margot_adjust_weights(   pscore,   censoring_indicator,   sample_weights = NULL,   trim = TRUE,   normalize = TRUE,   lower_percentile = 0.01,   upper_percentile = 0.99,   na.rm = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"pscore Numeric vector predicted probabilities censoring model. Values must 0 1. censoring_indicator Logical vector 0/1 numeric vector indicating censoring status (TRUE/1 censored, FALSE/0 ). sample_weights Optional numeric vector sample weights. trim Logical; whether trim weights (default TRUE). normalize Logical; whether normalise weights (default TRUE). lower_percentile Numeric; lower percentile trimming (default 0.01). upper_percentile Numeric; upper percentile trimming (default 0.99). na.rm Logical; whether remove NA values (default TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_adjust_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Weights for Censoring and Sample Design with Progress Reporting — margot_adjust_weights","text":"list containing adjusted weights summary statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":null,"dir":"Reference","previous_headings":"","what":"convert an amelia object to a mice object — margot_amelia_to_mice","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"convert amelia object mice object","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"","code":"margot_amelia_to_mice(amelia_obj)"},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"amelia_output object class `amelia`, containing imputed datasets Amelia package","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"`mids` object compatible `mice` package, structured original dataset imputed values","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_amelia_to_mice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert an amelia object to a mice object — margot_amelia_to_mice","text":"","code":"# load Amelia package and perform imputation library(Amelia) #> Error in library(Amelia): there is no package called ‘Amelia’ data(africa) # example dataset from Amelia package #> Warning: data set ‘africa’ not found amelia_output <- amelia(x = africa, m = 5, idvars = \"country\") # impute data #> Error in amelia(x = africa, m = 5, idvars = \"country\"): could not find function \"amelia\"  # convert amelia object to mice object mids_obj <- margot_amelia_to_mice(amelia_output) #> Error: object 'amelia_output' not found  # verify mids object print(mids_obj) #> Error: object 'mids_obj' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"function creates data frame maps standard z-scores corresponding values original data scale log-transformed data. uses `back_transform_log_z` function perform back-transformation presents results tidy data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"","code":"margot_back_transform_log_z(   log_mean,   log_sd,   z_scores = c(-2, -1, -0.5, 0, 0.5, 1, 2),   label = \"data_scale\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"log_mean mean log-transformed dataset z-scores calculated. log_sd standard deviation log-transformed dataset z-scores calculated. z_scores Optional vector z-scores transform. Defaults c(-2, -1, -0.5, 0, 0.5, 1, 2) representing common points normal distribution. label Optional string label data scale column. Defaults \"data_scale\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"data frame two columns: z_score original data scale values.   name second column value `label` parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_back_transform_log_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Z-score to Original Scale Mapping for Log-Transformed Data — margot_back_transform_log_z","text":"","code":"# Get mean and sd from original log-transformed income data log_mean_inc <- mean(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found log_sd_inc <- sd(original_df$t0_log_household_inc, na.rm = TRUE) #> Error: object 'original_df' not found  # Create mapping table with default z-scores income_mapping <- margot_back_transform_log_z(   log_mean = log_mean_inc,   log_sd = log_sd_inc,   label = \"household_income\" ) #> Error: object 'log_mean_inc' not found print(income_mapping) #> Error: object 'income_mapping' not found  # Create mapping with custom z-scores custom_mapping <- margot_back_transform_log_z(   log_mean = log_mean_inc,   log_sd = log_sd_inc,   z_scores = c(-1, 0, 1),   label = \"household_income\" ) #> Error: object 'log_mean_inc' not found print(custom_mapping) #> Error: object 'custom_mapping' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"function deprecated margot 0.2.1.65. Please use margot_policy() instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"","code":"margot_batch_policy(   result_outcomes,   policy_tree_args = list(),   decision_tree_args = list(),   dpi = 600,   width = 12,   height = 12,   save_plots = TRUE,   output_dir = here::here(push_mods),   spend = c(0.2, 0.5),   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"result_outcomes list containing results margot_multi_arm_causal_forest(). policy_tree_args list arguments pass margot_plot_policy_tree(). Default list(). decision_tree_args list arguments pass margot_plot_decision_tree(). Default list(). dpi resolution saved plots dots per inch. Default 600. width width saved plots inches. Default 12. height height saved plots inches. Default 12. save_plots Logical indicating whether save plots disk. Default TRUE. output_dir directory save plots . Default ::(push_mods). spend vector spend levels use difference gain summaries. Default c(0.2, 0.5). label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_batch_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Processing of Policy Trees and Related Visualizations (Deprecated) — margot_batch_policy","text":"list element corresponds model input   `result_outcomes`. element list containing: policy_tree_plot ggplot object policy tree plot policy_tree_interpretation character string interpreting policy tree qini_plot ggplot object Qini plot decision_tree_visualisation ggplot object visualizing decision tree policy_combo_plot ggplot object policy combo plot diff_gain_summaries nested list containing difference gain summaries spend level","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple batched model outputs — margot_bind_models","title":"Combine multiple batched model outputs — margot_bind_models","text":"function combines either “causal forest” “lmtp” batched model outputs single object, provided share compatible structures.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple batched model outputs — margot_bind_models","text":"","code":"margot_bind_models(..., quiet = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple batched model outputs — margot_bind_models","text":"... One batched model output objects. quiet Logical; TRUE, suppresses CLI feedback messages. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple batched model outputs — margot_bind_models","text":"single combined model output object.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine multiple batched model outputs — margot_bind_models","text":"- inputs four elements `models`, `contrasts`,   `individual_tables` `combined_tables`, assumes **lmtp**‐style object   flattens list, row‐binding `combined_tables`. - Otherwise falls back original “causal forest” structure   elements `results`, `combined_table`, `outcome_vars`,   `not_missing` `full_models`. - checks `not_missing` vectors match exactly across inputs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple batched model outputs — margot_bind_models","text":"","code":"# for lmtp outputs combined_lmtp <- margot_bind_models(   health_lmtp_output,   psych_lmtp_output ) #> Error: object 'health_lmtp_output' not found  # for causal forest outputs combined_cf <- margot_bind_models(   models_binary_social,   models_binary_psych ) #> Error: object 'models_binary_social' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind and format domain-specific tables — margot_bind_tables","title":"Bind and format domain-specific tables — margot_bind_tables","text":"function binds named list domain-specific tables, optionally sorts raw E_Val_bound column (ascending descending), optionally renames columns, highlights rows threshold, groups rows domain. works latex, html, markdown output.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind and format domain-specific tables — margot_bind_tables","text":"","code":"margot_bind_tables(   tables_list,   sort_E_val_bound = c(\"none\", \"asc\", \"desc\"),   e_val_bound_threshold = 1,   highlight_color = \"yellow\",   bold = TRUE,   output_format = \"markdown\",   rename_cols = TRUE,   col_renames = list(`E-Value` = \"E_Value\", `E-Value bound` = \"E_Val_bound\"),   rename_ate = FALSE,   threshold_col = \"E_Val_bound\",   kbl_args = list(booktabs = TRUE, caption = \"Combined Results by Domain\", align = NULL) )"},{"path":"https://go-bayes.github.io/margot/reference/margot_bind_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind and format domain-specific tables — margot_bind_tables","text":"tables_list named list data frames; element domain table. row-names captured \"Outcome\" column. sort_E_val_bound character: one \"none\", \"asc\", \"desc\". default \"none\". e_val_bound_threshold numeric; threshold highlighting rows. default 1. highlight_color character NULL; background colour highlighted rows. default \"yellow\". bold logical; whether bold highlighted rows. default TRUE. output_format character; one \"latex\", \"html\", \"markdown\". default \"latex\". rename_cols logical; whether apply column renaming. default TRUE. col_renames named list; mapping new_name = old_name renaming. default list(\"E-Value\"=\"E_Value\",\"E-Value bound\"=\"E_Val_bound\"). rename_ate logical; TRUE, renames effect column \"ATE\". default FALSE. threshold_col character; name (pre-rename) column test. default \"E_Val_bound\". kbl_args list; extra arguments kableExtra::kbl(), e.g. list(booktabs=TRUE, caption=\"Combined Results Domain\", align=NULL).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"function runs multiple GRF causal forest models enhanced features. addition estimating causal effects, can compute Rank-Weighted Average Treatment Effect (RATE) model. also gives option train separate \"Qini forest\" subset data compute Qini curves held-data, thereby avoiding -sample optimism Qini plots.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"","code":"margot_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 15,   save_models = TRUE,   train_proportion = 0.7,   qini_split = TRUE,   qini_train_prop = 0.7,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modelled. covariates matrix covariates used GRF models. W vector binary treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 15. save_models Logical indicating whether save full GRF model objects. Default TRUE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.7. qini_split Logical indicating whether separate train/test split exclusively Qini calculation. Default TRUE (.e., Qini computed --sample). qini_train_prop Proportion data use Qini training set (qini_split=TRUE). Default 0.7. verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Qini Cross-Validation — margot_causal_forest","text":"list containing model results, combined table, relevant information.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"Transform year_measured Variable Based Clustered Conditions Within Waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"","code":"margot_censor(   dt,   cluster_id = \"rel_num\",   id_var = \"id\",   wave_var = \"wave\",   condition_var = \"rel_complete\",   condition_value = 0,   year_measured_var = \"year_measured\",   censor_final_wave = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"dt data.frame data.table long format containing repeated measures. cluster_id string specifying cluster identifier variable. Default \"rel_num\". id_var string specifying individual identifier variable. Default \"id\". wave_var string specifying variable indicating wave. Default \"wave\". condition_var string specifying condition variable. Default \"rel_complete\". condition_value value condition_var triggers transformation. Default 0. year_measured_var string specifying year_measured variable. Default \"year_measured\". censor_final_wave Logical. TRUE, censoring applied final wave; FALSE (default), final wave exempt.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform year_measured Variable Based on Clustered Conditions Within Waves — margot_censor","text":"modified data.table updated year_measured values based condition.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"Takes multiple results tables `margot_plot` objects combines single formatted table using kableExtra, optional group headers section.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"","code":"margot_combine_results(   results,   options = NULL,   format = \"latex\",   digits = 2,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"results named list data frames, typically extracted `margot_plot` objects using `$transformed_table`. Names used section headers options provided. options Optional list options created `margot_plot_create_options()`. names results list. option object can include 'subtitle' used section header. format Output format kable. Default \"latex\". digits Number decimal places rounding numeric values. Default 2. ... Additional arguments passed kable().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"kable object can customized using kableExtra functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_combine_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Multiple Results Tables from margot_plot into a Single Formatted Table — margot_combine_results","text":"","code":"if (FALSE) { # \\dontrun{ # Suppose we have domain-based results: results_list <- list(   Health = list(     transformed_table = health_religious_vs_secular$transformed_table,     interpretation = health_religious_vs_secular$interpretation   ),   Psychological = list(     transformed_table = psych_religious_vs_secular$transformed_table,     interpretation = psych_religious_vs_secular$interpretation   ) )  # And corresponding options: options_list <- list(   Health = margot_plot_create_options(     subtitle = \"Health: Religious vs Secular (baseline)\",   ),   Psychological = margot_plot_create_options(     subtitle = \"Psychological: Religious vs Secular (baseline)\",   ) )  # Combine the results and print: combined_table <- margot_combine_results(   results = results_list,   options = options_list,   format = \"latex\",   booktabs = TRUE,   longtable = TRUE,   digits = 2 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Treatment Effects Between Groups — margot_compare_groups","title":"Compare Treatment Effects Between Groups — margot_compare_groups","text":"function compares treatment effects two groups, calculating either risk difference (RD) relative risk ratio (RR). supports label mapping transformation better interpretability results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Treatment Effects Between Groups — margot_compare_groups","text":"","code":"margot_compare_groups(   group,   subgroup,   type = \"RD\",   label_mapping = NULL,   decimal_places = 4 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Treatment Effects Between Groups — margot_compare_groups","text":"group data frame containing first group's treatment effects confidence intervals. subgroup data frame containing second group's treatment effects confidence intervals. type Character string specifying type comparison. Either \"RD\" risk difference (default) \"RR\" relative risk ratio. label_mapping Optional list mapping original variable names readable labels. decimal_places Number decimal places rounding outputs.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Treatment Effects Between Groups — margot_compare_groups","text":"list containing two elements: results data frame computed statistics comparison. interpretations named vector interpretation strings comparison.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compare_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Treatment Effects Between Groups — margot_compare_groups","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have group_full and group_rels data frames  # Define label mapping label_mapping <- list(   \"t2_env_not_climate_chg_concern_z\" = \"Deny Climate Change Concern\",   \"t2_env_not_climate_chg_cause_z\" = \"Deny Humans Cause Climate Change\",   \"t2_env_not_climate_chg_real_z\" = \"Deny Climate Change Real\",   \"t2_env_not_env_efficacy_z\" = \"Deny Personal Env Efficacy\",   \"t2_env_not_sat_nz_environment_z\" = \"Not Sat with NZ Environment\" )  # Compare groups using Risk Difference (default) rd_results <- margot_compare_groups(group_full, group_rels,                                     type = \"RD\",                                     label_mapping = label_mapping) print(rd_results$results) print(rd_results$interpretations)  # Compare groups using Relative Risk rr_results <- margot_compare_groups(group_full, group_rels,                                     type = \"RR\",                                     label_mapping = label_mapping) print(rr_results$results) print(rr_results$interpretations) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"function computes sample weights based gender achieve target gender balance population. assumes binary gender classification 1 represents male 0 represents female.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"","code":"margot_compute_gender_weights(data, male_col = \"male\", target_male_prop = 0.5)"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"data data frame containing gender information. male_col Character string specifying name column `data` indicates male gender (1 male, 0 female). Default \"male\". target_male_prop Numeric value 0 1 specifying target proportion males population. Default 0.5 (50% male).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"numeric vector sample weights. weight corresponds row input data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"function calculates weights , applied, adjust sample match specified target gender proportion. upweights underrepresented gender downweights overrepresented gender.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gender-Based Sample Weights (deprecated, use `margot_compute_gender_weights_by_wave`) — margot_compute_gender_weights","text":"","code":"# Create a sample dataset dat <- data.frame(id = 1:100, male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)))  # Compute weights weights <- margot_compute_gender_weights(dat, male_col = \"male\", target_male_prop = 0.5) #> Warning: `margot_compute_gender_weights()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_compute_gender_weights_by_wave()` instead.  # Check weight distribution table(round(weights, 3)) #>  #> 0.725 1.613  #>    69    31"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"Compute sample weights gender adjustment based baseline wave proportions. Compute sample weights gender adjustment based baseline wave proportions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"","code":"margot_compute_gender_weights_by_wave(   data,   male_col = \"male\",   wave_col = \"wave\",   target_wave,   target_male_prop = 0.5 )  margot_compute_gender_weights_by_wave(   data,   male_col = \"male\",   wave_col = \"wave\",   target_wave,   target_male_prop = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"data data frame containing gender wave information. male_col character string specifying column indicates male gender (1 male, 0 female). Default \"male\". wave_col character string specifying column indicating wave. Default \"wave\". target_wave value wave_col identifies baseline wave. target_male_prop numeric value 0 1 representing target proportion males. Default 0.5.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"numeric vector sample weights rows. numeric vector sample weights rows.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"function calculates gender proportions baseline wave computes weights overall sample aligns target gender distribution. weights applied rows. function computes sample proportions baseline wave calculates weights comparing proportions target proportions. upweights underrepresented gender downweights overrepresented gender. resulting weights applied full dataset. function calculates gender proportions baseline wave computes weights overall sample aligns target gender distribution. weights applied rows. function computes sample proportions baseline wave calculates weights comparing proportions target proportions. upweights underrepresented gender downweights overrepresented gender. resulting weights applied full dataset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights_by_wave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gender-Based Sample Weights Using Baseline Wave Proportions — margot_compute_gender_weights_by_wave","text":"","code":"dat <- data.frame(   id = 1:100,   male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)),   wave = rep(1:2, each = 50) ) weights <- margot_compute_gender_weights_by_wave(dat, male_col = \"male\",                                                  wave_col = \"wave\",                                                  target_wave = 1,                                                  target_male_prop = 0.52) head(weights) #> [1] 1.3684211 1.3684211 0.7741935 0.7741935 0.7741935 0.7741935  dat <- data.frame(   id = 1:100,   male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)),   wave = rep(1:2, each = 50) ) weights <- margot_compute_gender_weights_by_wave(dat, male_col = \"male\",                                                  wave_col = \"wave\",                                                  target_wave = 1,                                                  target_male_prop = 0.52) head(weights) #> [1] 0.7272727 1.5294118 0.7272727 0.7272727 0.7272727 1.5294118"},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"count dyads in longitudinal data — margot_count_dyads","title":"count dyads in longitudinal data — margot_count_dyads","text":"count dyads longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count dyads in longitudinal data — margot_count_dyads","text":"","code":"margot_count_dyads(   dat,   start_wave = 2009,   end_wave = 2022,   year_measured_val = 1,   rel_id_var = \"rel_num_l\",   complete_var = \"rel_complete\",   prev_wave_counts = c(1, 2, 3, 4) )"},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count dyads in longitudinal data — margot_count_dyads","text":"dat data frame containing longitudinal data. start_wave integer. first wave process (default: 2009). end_wave integer. last wave process (default: 2022). year_measured_val integer. value 'year_measured' filter (default: 1). rel_id_var character. name variable indicating relationship dyad (default: \"rel_num_l\"). complete_var character. name variable indicating complete dyad status (default: \"rel_complete\"). prev_wave_counts integer vector. previous wave thresholds count (default: c(1,2,3,4)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_dyads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count dyads in longitudinal data — margot_count_dyads","text":"tibble columns :   - wave: survey wave number   - n_total: total number dyads (complete + singleton)   - n_single: number singleton dyads   - n_complete: number complete dyads   - n_wave_1plus: dyads 1+ previous waves   - n_wave_2plus: dyads 2+ previous waves   - n_wave_3plus: dyads 3+ previous waves   - n_wave_4plus: dyads 4+ previous waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"count individual participants in longitudinal data — margot_count_ids","title":"count individual participants in longitudinal data — margot_count_ids","text":"count individual participants longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count individual participants in longitudinal data — margot_count_ids","text":"","code":"margot_count_ids(   dat,   start_wave = 2009,   end_wave = 2022,   prev_wave_counts = c(1, 2, 3, 4),   opt_in_var = \"sample_frame_opt_in\",   opt_in_true = 1,   opt_in_false = 0 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count individual participants in longitudinal data — margot_count_ids","text":"dat data frame containing longitudinal data start_wave integer. first wave process (default: 2009) end_wave integer. last wave process (default: 2022) prev_wave_counts integer vector. previous wave thresholds count (default: c(1,2,3,4)) opt_in_var character. name opt-variable track (default: \"sample_frame_opt_in\") opt_in_true value indicating opted-status (default: 1) opt_in_false value indicating opted-status (default: 0)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_count_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count individual participants in longitudinal data — margot_count_ids","text":"tibble columns :   - wave: survey wave number   - n_total: cumulative unique participants current wave   - n_active: active participants current wave   - n_deceased: newly deceased current wave   - n_deceased_total: total deceased current wave   - n_returned: participants absent previous wave present earlier waves   - n_returned_total: total returnees current wave   - n_opt_in: newly opted-participants current wave   - n_opt_in_total: total opted-participants current wave   - n_wave_1plus: participants 1+ previous waves   - n_wave_2plus: participants 2+ previous waves   - n_wave_3plus: participants 3+ previous waves   - n_wave_4plus: participants 4+ previous waves","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"","code":"margot_create_bibliography(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_bibliography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Boilerplate Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_bibliography","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_manage_measures()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"","code":"margot_create_database(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_create_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Database of Measures (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_create_database","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_manage_measures(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Based on Exposure Variables — margot_filter","title":"Filter Data Based on Exposure Variables — margot_filter","text":"function filters dataframe based levels single factor variable arranges dataframe identifier continuous variables present.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Based on Exposure Variables — margot_filter","text":"","code":"margot_filter(dat_wide, exposure_vars, sort_var = \"id\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Based on Exposure Variables — margot_filter","text":"dat_wide Dataframe filter. exposure_vars Vector names exposure variables consider. sort_var Optional; variable sort dataframes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Based on Exposure Variables — margot_filter","text":"list dataframes filtered levels factor variable arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip CATE Estimates for Selected Outcomes in GRF Model Results — margot_flip_forests","title":"Flip CATE Estimates for Selected Outcomes in GRF Model Results — margot_flip_forests","text":"function post-processes results margot_causal_forest flip CATE estimates, RATE results, QINI RATE results, QINI curves selected outcomes. useful want ensure consistent interpretation effects across differently coded outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip CATE Estimates for Selected Outcomes in GRF Model Results — margot_flip_forests","text":"","code":"margot_flip_forests(   model_results,   flip_outcomes,   model_prefix = \"model_\",   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip CATE Estimates for Selected Outcomes in GRF Model Results — margot_flip_forests","text":"model_results list containing model results margot_causal_forest(). flip_outcomes character vector outcome variable names CATE estimates flipped. model_prefix character string indicating prefix used model names results list. Default \"model_\". verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_flip_forests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip CATE Estimates for Selected Outcomes in GRF Model Results — margot_flip_forests","text":"modified copy model_results list flipped CATE estimates related outputs         specified outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"function wrapper grf::causal_forest runs multiple GRF causal forest models specified outcome variables. calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"","code":"margot_grf_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10,   save_models = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_subset_model()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"","code":"margot_grf_subset_table(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"... Arguments passed deprecated function","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models (Deprecated) — margot_grf_subset_table","text":"","code":"if (FALSE) { # \\dontrun{ # Instead of using this deprecated function: # result_subset <- margot_grf_subset_table(...)  # Use the new function: # result_subset <- margot_subset_model(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"Imputes missing values longitudinal data carrying forward previous observations specified number time points back. default, never imputes data final wave (end--study). Optionally, can create indicator variables imputed values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"","code":"margot_impute_carry_forward(   df_wide,   columns_to_impute,   max_carry_forward = 1,   time_point_prefixes = NULL,   time_point_regex = NULL,   require_one_observed = TRUE,   columns_no_future_required = NULL,   create_na_indicator = TRUE,   indicator_suffix = \"_na\",   indicator_as_suffix = TRUE,   verbose = TRUE,   impute_final_wave = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"df_wide wide-format dataframe containing longitudinal data. columns_to_impute character vector base column names impute (without time prefixes). max_carry_forward maximum number time points look back carrying forward values. time_point_prefixes optional vector time point prefixes (e.g., c(\"t0\", \"t1\", \"t2\")). time_point_regex optional regex pattern identify time points. Overrides time_point_prefixes provided. require_one_observed logical. TRUE, impute least one value observed present following wave. columns_no_future_required character vector columns require future observations imputation. defaults columns require_one_observed = FALSE, none require_one_observed = TRUE. create_na_indicator logical. TRUE, creates indicator variables imputed values. indicator_suffix suffix add original column name indicator variable (default \"_na\"). indicator_as_suffix logical. TRUE, indicator suffix added suffix; FALSE, added prefix. verbose logical. TRUE, prints progress information. impute_final_wave logical. FALSE (default), final wave (end--study) never imputed. TRUE, final wave can imputed like waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_impute_carry_forward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Values Using Carry Forward in Longitudinal Data — margot_impute_carry_forward","text":"dataframe imputed values optional indicator variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect and Debug Model Result Structure — margot_inspect_model","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"utility function inspects structure specific model result models results list, helping debug issues flipping estimates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"","code":"margot_inspect_model(model_results, model_name = NULL, details = FALSE)"},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"model_results list containing model results margot_causal_forest(). model_name Name specific model inspect. NULL, summarizes models. details Logical indicating whether show detailed structure objects. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_inspect_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect and Debug Model Result Structure — margot_inspect_model","text":"Invisibly returns summary model structure.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Marginal Causal Effect Estimates — margot_interpret_marginal","title":"Interpret Marginal Causal Effect Estimates — margot_interpret_marginal","text":"function takes output group_tab() (rd rr estimates e‑values) returns markdown bulleted list outcomes exhibited causal evidence. notes outcomes presented order appear plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Marginal Causal Effect Estimates — margot_interpret_marginal","text":"","code":"margot_interpret_marginal(   df,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   original_df = NULL,   interpret_all_E_gt1 = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Marginal Causal Effect Estimates — margot_interpret_marginal","text":"df data frame group_tab(), including outcome, effect column, 2.5 %, 97.5 %, E_Value, E_Val_bound, optionally unit. type one \"RD\" \"RR\". default: \"RD\". order one \"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\", \"evaluebound_asc\", \"custom\", \"default\". (\"default\" → \"magnitude_desc\"; deprecated.) original_df optional raw data frame back‑transforming original scale. interpret_all_E_gt1 logical; TRUE, include estimates E_Value > 1 & E_Val_bound > 1. default: FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Marginal Causal Effect Estimates — margot_interpret_marginal","text":"list one element: interpretation markdown string bulleted list outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch process policy tree interpretations — margot_interpret_policy_batch","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"function now accepts vector model names process produces single combined output. common description printed top, followed model's specific findings.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"","code":"margot_interpret_policy_batch(   models,   model_names = NULL,   save_path = NULL,   prefix = NULL,   include_timestamp = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"models list containing results multi-arm causal forest models. model_names character vector model names interpret. NULL, models processed. save_path path combined interpretation saved. NULL, nothing saved. prefix optional prefix filename. include_timestamp Logical; whether include timestamp filename (desired). ... Additional arguments pass margot_interpret_policy_tree().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch process policy tree interpretations — margot_interpret_policy_batch","text":"single character string containing combined markdown output.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Policy Tree Results — margot_interpret_policy_tree","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"function creates interpretation policy tree results causal forest multi-arm causal forest model. generates formatted description policy tree, including main splits recommended actions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"","code":"margot_interpret_policy_tree(   model,   model_name,   train_proportion = 0.5,   custom_action_names = NULL,   label_mapping = NULL,   original_df = NULL,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"model list containing results multi-arm causal forest model. model_name string specifying model's results interpret. train_proportion numeric value 0 1 proportion data used training. default 0.5. custom_action_names optional vector custom names actions. must match number actions policy tree. label_mapping optional list maps variable names custom labels. used descriptive labels interpretation. original_df optional dataframe untransformed variables, used display split values data scale. remove_tx_prefix logical indicating whether remove prefixes like t0_ variable names. default true. remove_z_suffix logical indicating whether remove _z suffix variable names. default true. use_title_case logical indicating whether convert variable names title case. default true.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"invisibly returns string containing interpretation. function also prints interpretation console.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_policy_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret Policy Tree Results — margot_interpret_policy_tree","text":"","code":"if (FALSE) { # \\dontrun{ # create a label mapping label_mapping <- list(   \"t2_env_not_climate_chg_concern_z\" = \"Deny Climate Change Concern\",   \"t2_env_not_climate_chg_cause_z\" = \"Deny Humans Cause Climate Change\" )  # interpret policy tree results with label mapping interpretation <- margot_interpret_policy_tree(   model = models_multi,   model_name = \"model_t2_env_not_climate_chg_concern_z\",   label_mapping = label_mapping,   original_df = original_df )  # print the interpretation cat(interpretation) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret Qini Results for Both Binary and Multi-Arm Treatments — margot_interpret_qini","title":"Interpret Qini Results for Both Binary and Multi-Arm Treatments — margot_interpret_qini","text":"function interprets Qini results binary multi-arm treatments. detects treatment type based input data structure calls appropriate sub-function. new parameter, model_names, restricts analysis specified models; supplied, models processed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret Qini Results for Both Binary and Multi-Arm Treatments — margot_interpret_qini","text":"","code":"margot_interpret_qini(   multi_batch,   label_mapping = NULL,   alpha = 0.05,   decimal_places = 2,   model_names = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret Qini Results for Both Binary and Multi-Arm Treatments — margot_interpret_qini","text":"multi_batch List output margot_batch_policy() diff_gain_summaries. label_mapping Optional named list mapping model names readable labels. alpha Significance level confidence intervals. Default 0.05. decimal_places Number decimal places rounding. Default 2. model_names Optional character vector specifying models process. Default NULL (.e. process ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret Qini Results for Both Binary and Multi-Arm Treatments — margot_interpret_qini","text":"list summary table single combined explanation         qini_explanation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret RATE estimates — margot_interpret_rate","title":"Interpret RATE estimates — margot_interpret_rate","text":"Produce compact Markdown summary describing outcomes show positive, negative, inconclusive heterogeneous treatment effects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret RATE estimates — margot_interpret_rate","text":"","code":"margot_interpret_rate(rate_df, flipped_outcomes = NULL, target = \"AUTOC\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret RATE estimates — margot_interpret_rate","text":"rate_df data frame `margot_rate()` ** list containing `rate_autoc` `rate_qini`. flipped_outcomes Character vector outcomes inverted preprocessing (unused kept API symmetry). target Either `\"AUTOC\"` `\"Qini\"` (ignored `rate_df` list).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret RATE estimates — margot_interpret_rate","text":"Markdown string (single method) comparison list (two methods).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and interpret RATE estimates from AUTOC and Qini — margot_interpret_rate_comparison","title":"Compare and interpret RATE estimates from AUTOC and Qini — margot_interpret_rate_comparison","text":"Compare interpret RATE estimates AUTOC Qini","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and interpret RATE estimates from AUTOC and Qini — margot_interpret_rate_comparison","text":"","code":"margot_interpret_rate_comparison(autoc_df, qini_df, flipped_outcomes = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and interpret RATE estimates from AUTOC and Qini — margot_interpret_rate_comparison","text":"autoc_df Data frame AUTOC results produced `margot_rate()`. qini_df Data frame Qini  results produced `margot_rate()`. flipped_outcomes Character vector outcomes inverted preprocessing.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_rate_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and interpret RATE estimates from AUTOC and Qini — margot_interpret_rate_comparison","text":"list comparison text, individual summaries, model name sets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_interpret_marginal()` instead. function interprets output causal effect analysis, providing textual descriptions causal effect estimates. categorises strength evidence causality based E-values confidence intervals, generates detailed interpretation effect estimates according specified causal scales (.e., \"causal_difference\" \"risk_ratio\") estimands. function supports interpreting results causal difference risk ratio scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"","code":"margot_interpret_table(   df,   type = c(\"RD\", \"RR\"),   estimand = NULL,   order = \"default\",   original_df = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"df Data frame containing causal effect estimates, expected include columns outcome names, effect estimates (either differences ratios), confidence intervals, E-values, summary estimate label. structure `df` align specified `causal_scale`. estimand Optional character string indicating type causal estimand interpreted: \"PATE\" (Population Average Treatment Effect), \"ATE\" (Average Treatment Effect), \"ATT\" (Average Treatment Effect Treated), \"CATE\" (Conditional Average Treatment Effect), \"LMTP\" (Longitudinal Modified Treatment Policy). Default NULL. order Character string specifying order results. Default \"default\". causal_scale Character string specifying causal scale used analysis. Currently supports \"causal_difference\" differences means medians, \"risk_ratio\" comparing ratios probabilities risks.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"list containing two elements: estimand_description character string describing specified estimand, NULL estimand provided. interpretation character string containing detailed interpretation outcome `df`,   including causal contrast, E-values, strength evidence causality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret and Describe Causal Effect Estimates Using E-values (Deprecated) — margot_interpret_table","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `group_tab_output` is the result from a causal analysis result <- margot_interpret_table(group_tab_output, \"causal_difference\", \"ATE\") cat(result$estimand_description) cat(result$interpretation)  # Without specifying an estimand result <- margot_interpret_table(group_tab_output, \"risk_ratio\") cat(result$interpretation) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process LMTP Models — margot_lmtp","title":"Batch Process LMTP Models — margot_lmtp","text":"function runs multiple Longitudinal Modified Treatment Policy (LMTP) models specified outcome variables, calculates contrasts, creates evaluation tables, optionally saves complete output.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"margot_lmtp(   data,   outcome_vars,   trt,   shift_functions = list(),   include_null_shift = TRUE,   lmtp_model_type = lmtp::lmtp_tmle,   contrast_type = c(\"pairwise\", \"null\"),   contrast_scale = c(\"additive\", \"rr\", \"or\"),   lmtp_defaults = list(),   n_cores = parallel::detectCores() - 1,   save_output = FALSE,   save_path = here::here(\"push_mods\"),   base_filename = \"lmtp_output\",   use_timestamp = FALSE,   prefix = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process LMTP Models — margot_lmtp","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. trt character string specifying treatment variable. shift_functions list shift functions applied. function take `data` `trt` arguments. include_null_shift Logical, whether include null shift. Default TRUE. lmtp_model_type LMTP model function use. Default lmtp_tmle. contrast_type Type contrasts compute: \"pairwise\" \"null\". Default \"pairwise\". contrast_scale Scale contrasts: \"additive\", \"rr\", \"\". Default \"additive\". lmtp_defaults list default parameters LMTP models. n_cores Number cores use parallel processing. Default detectCores() - 1. save_output Logical, whether save complete output. Default FALSE. save_path directory path save output. Default \"push_mods\" current working directory. base_filename base filename saving output. Default \"lmtp_output\". use_timestamp Logical, whether include timestamp filename. Default FALSE. prefix Optional prefix add saved output filename. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process LMTP Models — margot_lmtp","text":"list containing: models list LMTP models outcome shift function. contrasts list contrasts computed outcome. individual_tables list individual tables contrast outcome. combined_tables list combined tables contrast type across outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"if (FALSE) { # \\dontrun{ # Assume we have a dataset 'my_data' with variables 'outcome', 'treatment', and some confounders  # Define shift functions gain_function <- function(data, trt) {   data[[trt]] + 1 }  loss_function <- function(data, trt) {   pmax(data[[trt]] - 1, 0) }  # Run LMTP analysis result <- margot_lmtp(   data = my_data,   outcome_vars = c(\"outcome1\", \"outcome2\"),   trt = \"treatment\",   shift_functions = list(gain = gain_function, loss = loss_function),   lmtp_defaults = list(baseline = c(\"confounder1\", \"confounder2\"),                        time_vary = c(\"time_var1\", \"time_var2\"),                        outcome_type = \"continuous\"),   save_output = TRUE,   save_path = here::here(\"output\", \"lmtp_results\"),   prefix = \"my_study\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"function first creates summary table output `lmtp::lmtp_contrast()` using `margot_tab_lmtp`, specifying desired scale (RD RR) new name row. calculates E-values estimates table assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"margot_lmtp_evalue(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"lmtp_output output `lmtp::lmtp_contrast()`, summarized analyzed E-values. scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". new_name Character string name row output summary table, representing treatment contrast. name applied first row summary table. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"data frame original estimates E-values. table includes columns estimate (either RD RR), E-Value, E-Value lower bound, excluding 'standard_error' column.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # assuming `contrast_output` is the result from `lmtp::lmtp_contrast()` summary_evalues <- margot_lmtp_evalue(   lmtp_output = contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" ) print(summary_evalues) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"margot_lmtp_tab(lmtp_output, scale = c(\"RD\", \"RR\"), new_name = \"\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate: \"RD\" \"RR\". Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"data frame four columns: estimate specified scale, standard error,   lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-transform Variables in a Data Frame — margot_log_transform_vars","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"function applies log(x + 1) transformation specified variables data frame. handles NA values, warns drops non-numeric selections, allows exceptions, can applied variables specific prefixes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"","code":"margot_log_transform_vars(   data,   vars,   exceptions = character(0),   prefix = \"log_\",   keep_original = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data data frame process. vars character vector variable names tidyselect helper (e.g., starts_with(\"hours_\")). exceptions character vector variable names exclude transformation. prefix string prepend names transformed variables. default \"log_.\" keep_original logical; true, keeps original transformed variables. false, replaces original. default true.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data frame log-transformed variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"margot_make_tables wrapper table1::table1() simplifies creation summary tables. provides custom variable labelling, formatting, factor conversion, additional table options. function optimized \"markdown\" \"latex\" outputs, special support Quarto documents.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"","code":"margot_make_tables(   data,   vars,   by,   labels = NULL,   factor_vars = NULL,   table1_opts = list(),   format = c(\"markdown\", \"latex\"),   kable_opts = list(),   quarto_label = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"data data.frame containing dataset. vars character vector variable names include left-hand side table. character vector variable names stratify table . Supports multiple variables interactions. labels named character vector custom variable labels. Names correspond variable names vars. factor_vars optional character vector variable names vars convert factors frequency tables. table1_opts list additional options pass table1::table1(). example, list(overall = FALSE, transpose = TRUE). format character string specifying output format. Options \"markdown\" (default) \"latex\". kable_opts list additional options controlling table styling: format = \"latex\", passed kableExtra::kable_styling(). format = \"markdown\", currently documentation purposes. quarto_label optional label Quarto cross-references (e.g., \"tbl-demographics\"). specified LaTeX output, adds \\label{} command enable Quarto's cross-referencing system.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"table object formatted specified output: format = \"latex\", kableExtra-formatted LaTeX table optional Quarto label format = \"markdown\", markdown-formatted kable table bold variable names","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_make_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Summary Tables Using table1 with Custom Formatting — margot_make_tables","text":"","code":"if (FALSE) { # \\dontrun{   # LaTeX output with Quarto label   latex_table <- margot_make_tables(     data = mydata,     vars = c(\"age\", \"gender\", \"income\"),     by = \"group\",     labels = c(\"age\" = \"Age\", \"gender\" = \"Gender\", \"income\" = \"Income\"),     factor_vars = \"gender\",     table1_opts = list(overall = FALSE, transpose = TRUE),     format = \"latex\",     quarto_label = \"tbl-demographics\"   ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `boilerplate::boilerplate_merge_databases()` instead. Install new package `devtools::install_github(\"go-bayes/boilerplate\")`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"","code":"margot_merge_databases(...)"},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"... arguments (ignored)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"message indicating function deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_merge_databases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Two Measure Databases (DEPRECATED, use `boilerplate` package: <https://go-bayes.github.io/boilerplate/>) — margot_merge_databases","text":"","code":"if (FALSE) { # \\dontrun{ # This function is deprecated. Use instead: # devtools::install_github(\"go-bayes/boilerplate\") # library(boilerplate) # boilerplate::boilerplate_merge_databases(...) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"function creates summary table output various causal models, including `lmtp::lmtp_contrast()`, `grf::causal_forest()`, `grf::multi_arm_causal_forest()`. calculates E-values estimates assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"margot_model_evalue(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1,   subset = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"model_output output supported causal model. Supported types include: Output `lmtp::lmtp_contrast()` Output `grf::causal_forest()` Output `grf::multi_arm_causal_forest()` data frame columns 'estimate' 'std.err' scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". parameter ignored causal forest models, always use \"RD\". new_name Character string name row(s) output summary table, representing treatment contrast(s). multi-arm causal forests, combined contrast information. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1. subset optional logical vector subsetting data model `grf` model. Default `NULL`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"data frame original estimates E-values. table includes columns   estimate (either RD RR), confidence interval, E-Value, E-Value lower bound.   multi-arm causal forests, multiple rows returned, one contrast.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # For lmtp_contrast output summary_evalues <- margot_model_evalue(   model_output = lmtp_contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" )  # For causal_forest output cf_summary <- margot_model_evalue(   model_output = causal_forest_output,   new_name = \"Causal Forest Effect\" )  # For multi_arm_causal_forest output macf_summary <- margot_model_evalue(   model_output = multi_arm_cf_output,   new_name = \"Multi-Arm Effect\" )  # For direct input of estimate and standard error direct_summary <- margot_model_evalue(   model_output = data.frame(estimate = 0.5, std.err = 0.1),   new_name = \"Direct Effect\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"function takes output `lmtp::lmtp_contrast()` causal forest model creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR) LMTP models. causal forest models, scale always \"RD\". resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"margot_model_tab(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"model_output output object `lmtp::lmtp_contrast()` causal forest model. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". parameter ignored causal forest models. new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_model_tab(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) print(tab_contrast_hours_charity_z_null) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"function wrapper grf::multi_arm_causal_forest runs multiple GRF multi-arm causal forest models specified outcome variables. calculates average treatment effects, creates custom evaluation tables, includes additional features tau.hat estimates, policy trees, variable importance rankings, Qini curves. also prepares data policy tree visualization, using specified proportion data training.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"","code":"margot_multi_arm_causal_forest(   data,   outcome_vars,   covariates,   W_multi,   weights,   exposure_name,   grf_defaults = list(),   save_data = FALSE,   top_n_vars = 20,   save_models = FALSE,   compute_qini = TRUE,   train_proportion = 0.7,   W.hat = NULL,   cost = NULL,   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W_multi factor vector multi-arm treatment assignments. weights vector weights observations. exposure_name character string specifying name exposure variable. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE. compute_qini Logical indicating whether compute Qini curves model. Default TRUE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.7. W.hat Optional vector specifying known treatment assignment probabilities arm. cost Optional vector specifying cost associated treatment arm. verbose Logical indicating whether display detailed messages execution. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"list containing: results list model results, one outcome variable. model result includes: ateAverage treatment effect custom_tableCustom evaluation table tau_hatIndividual treatment effect estimates top_varsTop variables importance variable_importanceData frame variable importance rankings dr_scoresDouble robust scores policy_tree_depth_2Policy tree depth 2, trained train_proportion non-missing data plot_dataData prepared policy tree visualization, using remaining proportion non-missing data qini_dataData frame containing Qini curve data plotting (compute_qini TRUE) qini_objectsList maq objects curve, used computing average gain  combined_tables list data frames combining custom evaluation tables grouped comparison levels. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. exposure_name name exposure variable. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"Setting save_models = TRUE typically results large objects (often several GB).       Ensure sufficient memory available using option.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"function performs omnibus heterogeneity test specified models outputted margot::margot_run_models_grf() provides interpretations readable format.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"","code":"margot_omnibus_hetero_test(   model_results,   outcome_vars = NULL,   alpha = 0.05,   detail_level = \"standard\",   label_mapping = NULL,   format = \"table\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"model_results list model results margot::margot_run_models_grf(). outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. alpha Significance level hypothesis tests. Default 0.05. detail_level Character string specifying level detail output. Options \"basic\", \"standard\" (default), \"detailed\". label_mapping Optional. named list mapping outcome variable names display labels. example: list(\"t2_agreeableness_z\" = \"Agreeableness\"). format Output format: \"table\" (default), \"markdown\", \"text\". \"table\" returns tibble use tidyverse tools. \"markdown\" returns formatted markdown text Quarto documents. \"text\" returns plain text interpretations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"list containing:   - summary_table: tibble test results   - interpretations: Results formatted according format parameter   - brief_interpretation: concise summary results","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"function streamlines process running planned contrasts heterogeneity analyses across multiple outcome domains. applies subset analyses (e.g., wealth, ethnicity, political orientation) different outcome domains, saving results, generating tables, creating visualizations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"","code":"margot_planned_subgroups_batch(   domain_models,   X,   base_defaults,   subset_types,   original_df,   domain_names,   subtitles,   output_dir = NULL,   push_mods = FALSE,   interpret_all_E_gt1 = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"domain_models list model sets different domains (e.g., list(models_binary_health, models_binary_psych)) X predictor matrix used models base_defaults default parameters model processing subset_types list subset specifications (e.g., list(wealth = subsets_standard_wealth)) original_df original dataframe containing variables domain_names character vector names outcome domains subtitles character vector subtitles plots output_dir directory save outputs (defaults NULL) push_mods logical; whether push models (defaults FALSE) interpret_all_E_gt1 logical; interpretation parameter (defaults TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"nested list containing results organized domain subset type","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_planned_subgroups_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch process heterogeneity analyses across multiple outcome domains — margot_planned_subgroups_batch","text":"","code":"# set up lists of models, names, and subtitles domain_models <- list(   models_binary_health,   models_binary_psych,   models_binary_present,   models_binary_life,   models_binary_social ) #> Error: object 'models_binary_health' not found  domain_names <- c(\"health\", \"psych\", \"present\", \"life\", \"social\")  subtitles <- c(   subtitle_health,   subtitle_psych,   subtitle_present,   subtitle_life,   subtitle_social ) #> Error: object 'subtitle_health' not found  # set up subset types in a list subset_types <- list(   wealth = subsets_standard_wealth,   ethnicity = subsets_standard_ethnicity,   political = subsets_standard_political,   gender = subsets_standard_gender,   cohort = subsets_standard_cohort ) #> Error: object 'subsets_standard_wealth' not found  # run the batch processing for all domains and subsets results <- margot_planned_subgroups_batch(   domain_models = domain_models,   X = X,   base_defaults = base_defaults_binary,   subset_types = subset_types,   original_df = original_df,   domain_names = domain_names,   subtitles = subtitles,   push_mods = push_mods ) #> Error: object 'domain_models' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Margot Plot with Interpretation — margot_plot","title":"Create a Margot Plot with Interpretation — margot_plot","text":"Create Margot plot visualising causal effects flexible sorting, embed compact interpretation, return transformed table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Margot Plot with Interpretation — margot_plot","text":"","code":"margot_plot(   .data,   type = c(\"RD\", \"RR\"),   order = c(\"alphabetical\", \"magnitude_desc\", \"magnitude_asc\", \"evaluebound_desc\",     \"evaluebound_asc\", \"custom\", \"default\"),   custom_order = NULL,   title_binary = NULL,   include_coefficients = TRUE,   standardize_label = c(\"NZ\", \"US\", \"none\"),   interpret_all_E_gt1 = FALSE,   e_val_bound_threshold = 1,   ...,   options = list(),   label_mapping = NULL,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   prefix = NULL,   save_path = here::here(\"push_mods\"),   original_df = NULL,   bold_rows = FALSE,   rename_cols = FALSE,   col_renames = list(`E-Value` = \"E_Value\", `E-Value bound` = \"E_Val_bound\"),   rename_ate = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Margot Plot with Interpretation — margot_plot","text":".data data frame : - `outcome` column, - effect columns: `E[Y(1)]-E[Y(0)]` `E[Y(1)]/E[Y(0)]`, - confidence limits: `2.5  - `E_Value`, `E_Val_bound`, optional `unit`. type one `\"RD\"` (risk difference) `\"RR\"` (risk ratio). Default: `\"RD\"`. order outcome sorting. Options: - `alphabetical`, `magnitude_desc`, `magnitude_asc`, - `evaluebound_desc`, `evaluebound_asc`, `custom`, `default`. Default: `\"alphabetical\"`. custom_order character vector `order = \"custom\"`. title_binary optional title binary plots. include_coefficients logical; include effect values plot. Default: `TRUE`. standardize_label one `\"NZ\"`, `\"US\"`, `\"none\"`. Default: `\"NZ\"`. interpret_all_E_gt1 logical; `TRUE`, interpret effects `E_Value > 1` & `E_Val_bound > 1`. Default: `FALSE`. e_val_bound_threshold numeric; minimum `E_Val_bound` treat effect reliable. Default: `1`. ... additional args passed `options`. options list plot & label options. label_mapping named vector mapping original display labels. save_output logical; `TRUE`, save output via `here_save_qs()`. Default: `FALSE`. use_timestamp logical; append timestamp filename. Default: `FALSE`. base_filename base output filename. Default: `\"margot_plot_output\"`. prefix optional filename prefix. save_path directory saving. Default: `::(\"push_mods\")`. original_df optional data frame back-transformation. bold_rows logical; bold row-names threshold. Default: `FALSE`. rename_cols logical; apply `col_renames`. Default: `FALSE`. col_renames named list mapping new = old. Default: `list(\"E-Value\"=\"E_Value\", \"E-Value bound\"=\"E_Val_bound\")`. rename_ate logical; rename effect column `\"ATE\"`. Default: `FALSE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Margot Plot with Interpretation — margot_plot","text":"list : * `plot`:   `ggplot2` object * `interpretation`: markdown string * `transformed_table`: input `.data` transformed row-names","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"function creates boxplots one variables across specified panel waves. offers various customisation options plot appearance layout.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"","code":"margot_plot_boxplot(   data,   y_vars,   waves = NULL,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = \"Wave\",   show_points = FALSE,   point_alpha = 0.05,   point_size = 0.5,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 16,   height = 8,   legend_position = \"bottom\",   y_limits = NULL,   facet_scales = \"free_y\",   facet_ncol = NULL,   facet_nrow = NULL,   coord_flip = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"data data frame containing variables plotted. y_vars list variable names plotted y-axis. waves vector wave values include plot (default NULL, includes waves). id_col Name column containing unique identifiers (default \"id\"). title title plot (optional, auto-generated NULL). y_label label y-axis (optional). x_label label x-axis (optional, defaults \"Wave\"). show_points Logical, whether show individual data points (default FALSE). point_alpha Alpha value data points shown (default 0.3). point_size Size data points shown (default 0.5). include_timestamp Logical, whether include timestamp plot title filename (default FALSE). save_path Path save plot (optional). prefix Optional prefix saved file name (default NULL). width Width saved plot inches (default 16). height Height saved plot inches (default 8). legend_position Position legend (default \"bottom\"). y_limits Y-axis limits (optional). facet_scales Scales facet panels (default \"free_y\"). facet_ncol Number columns facet_wrap (optional). facet_nrow Number rows facet_wrap (optional). coord_flip Logical, whether flip coordinates plot (default FALSE). ... Additional arguments passed geom_boxplot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"ggplot object representing boxplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create panel data Boxplots using ggplot2 — margot_plot_boxplot","text":"","code":"if (FALSE) { # \\dontrun{ # define outcome variables outcome_vars <- c(   \"env_climate_chg_concern\",   \"env_climate_chg_cause\",   \"env_climate_chg_real\",   \"env_sat_nz_environment\",   \"envefficacy\" )  # basic usage with all waves p1 <- margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   id_col = \"id\" )  # plotting specific waves with points shown and coordinates flipped p2 <- margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   waves = c(2021, 2022),   show_points = TRUE,   coord_flip = TRUE,   id_col = \"id\" )  # saving the plot with a custom prefix margot_plot_boxplot(   data = your_data,   y_vars = outcome_vars,   waves = c(2021, 2022, 2023),   save_path = \"path/to/save\",   prefix = \"climate_change\",   include_timestamp = TRUE,   id_col = \"id\" )  # customizing the plot appearance with flipped coordinates p3 <- margot_plot_boxplot(   data = your_data,   y_vars = c(\"env_climate_chg_concern\", \"envefficacy\"),   waves = c(2021, 2022),   title = \"Climate Change Concern and Efficacy\",   y_label = \"Score\",   legend_position = \"right\",   facet_scales = \"free\",   coord_flip = TRUE,   id_col = \"id\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"function creates boxplots one outcome variable across specified panel waves, allowing different groups covariates. combines features margot_plot_boxplot() margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"","code":"margot_plot_boxplot_covariate(   data,   outcome,   covariate,   waves = NULL,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = \"Wave\",   color_label = NULL,   show_points = FALSE,   point_alpha = 0.05,   point_size = 0.5,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 16,   height = 8,   legend_position = \"right\",   y_limits = NULL,   coord_flip = FALSE,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"data data frame containing variables plotted. outcome name outcome variable plotted. covariate name covariate variable grouping. waves vector wave values include plot (default NULL, includes waves). id_col name column containing unique identifiers (default \"id\"). title title plot (optional, auto-generated NULL). y_label label y-axis (optional). x_label label x-axis (optional, defaults \"Wave\"). color_label label color legend (optional, defaults covariate name). show_points logical, whether show individual data points (default FALSE). point_alpha alpha value data points shown (default 0.05). point_size size data points shown (default 0.5). include_timestamp logical, whether include timestamp plot title filename (default FALSE). save_path path save plot (optional). prefix optional prefix saved file name (default NULL). width width saved plot inches (default 12). height height saved plot inches (default 8). legend_position position legend (default \"right\"). y_limits y-axis limits (optional). coord_flip logical, whether flip coordinates plot (default FALSE). ... additional arguments passed geom_boxplot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"ggplot object representing boxplot covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_boxplot_covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create boxplots with covariates using ggplot2 — margot_plot_boxplot_covariate","text":"","code":"if (FALSE) { # \\dontrun{ # example 1: basic usage with all waves p1 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_climate_chg_concern\",   covariate = \"education\",   id_col = \"id\" )  # example 2: plotting specific waves with custom labels p2 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"political_orientation\",   covariate = \"age_group\",   waves = c(2021, 2022, 2023),   y_label = \"Political Orientation\",   color_label = \"Age Group\",   id_col = \"id\" )  # example 3: showing individual points and flipping coordinates p3 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_sat_nz_environment\",   covariate = \"income_bracket\",   show_points = TRUE,   coord_flip = TRUE,   y_label = \"Satisfaction with NZ Environment\",   color_label = \"Income Bracket\",   id_col = \"id\" )  # example 4: customizing plot appearance and saving p4 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"envefficacy\",   covariate = \"gender\",   y_label = \"Environmental Efficacy\",   color_label = \"Gender\",   legend_position = \"bottom\",   y_limits = c(1, 7),   save_path = \"path/to/save\",   prefix = \"env_efficacy\",   width = 10,   height = 6,   id_col = \"id\" )  # example 5: using with categorical outcome and including timestamp p5 <- margot_plot_boxplot_covariate(   data = your_data,   outcome = \"env_climate_chg_cause\",   covariate = \"political_party\",   y_label = \"Perceived Cause of Climate Change\",   color_label = \"Political Party\",   include_timestamp = TRUE,   id_col = \"id\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram with Quantile or Custom Breaks — margot_plot_categorical","title":"Create a Coloured Histogram with Quantile or Custom Breaks — margot_plot_categorical","text":"function creates histogram coloured regions based quantile breaks custom breaks. uses `create_ordered_variable` function categorise data plots histogram different colours category.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram with Quantile or Custom Breaks — margot_plot_categorical","text":"","code":"margot_plot_categorical(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL,   save_path = NULL,   width = 16,   height = 10,   legend_position = \"right\",   include_timestamp = FALSE,   file_prefix = \"\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram with Quantile or Custom Breaks — margot_plot_categorical","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colours use intervals. NULL, uses Okabe‑Ito palette. hist_colour colour histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x‑axis. NULL, formatted column name used. y_lab label y‑axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x‑axis text. x_scale_transform Optional. transformation x‑axis (e.g., \"log10\"). y_scale_transform Optional. transformation y‑axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically. save_path optional path save plot. NULL, plot saved. width width saved plot inches. Default 16. height height saved plot inches. Default 10. legend_position position legend. Can \"right\", \"left\", \"bottom\", \"top\", two‑element numeric vector. include_timestamp logical value indicating whether include timestamp saved filename. Default FALSE. file_prefix optional prefix add beginning saved filename.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram with Quantile or Custom Breaks — margot_plot_categorical","text":"ggplot2 object representing coloured histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Plot Options for Margot Plot — margot_plot_create_options","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"function creates list options use `margot_plot` function. allows easy customization plot settings maintaining set default values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"","code":"margot_plot_create_options(   subtitle,   base_defaults = NULL,   title = NULL,   filename_prefix = NULL,   label_mapping = NULL,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   save_path = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"subtitle Character string. subtitle plot. base_defaults List. base default options use. provided, uses pre-defined set defaults. title Character string. title plot. NULL, uses title base_defaults. filename_prefix Character string. Prefix filename. NULL, uses default prefix. label_mapping Named list. Mapping original outcome labels new labels. save_output Logical. Whether save complete output. Default FALSE. use_timestamp Logical. Whether add timestamp output filename. Default FALSE. base_filename Character string. Base name output file. Default \"margot_plot_output\". save_path Character string. Path output saved. Default NULL. ... Additional named arguments override add default options.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"list plot options used `margot_plot`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"function allows customization various plot parameters, including color schemes, text sizes, label transformations, output saving options. `label_mapping` parameter enables custom renaming specific outcomes without affecting default transformations labels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_create_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Plot Options for Margot Plot — margot_plot_create_options","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage health_options <- margot_plot_create_options(\"Health Outcomes\")  # Custom title, filename prefix, and output saving education_options <- margot_plot_create_options(   \"Education Outcomes\",   title = \"Custom Title\",   filename_prefix = \"edu_outcomes\",   save_output = TRUE,   use_timestamp = TRUE,   base_filename = \"education_analysis\",   save_path = \"path/to/save\" )  # Using label_mapping for custom outcome labels trust_science_options <- margot_plot_create_options(   subtitle = \"Trust in Science Outcomes\",   title = \"Science Trust Analysis\",   filename_prefix = \"science_trust\",   label_mapping = list(     \"t2_trust_science_our_society_places_too_much_emphasis_reversed_z\" = \"Science Overemphasis\"   ),   colors = c(     \"positive\" = \"#4CAF50\",     \"not reliable\" = \"#FFC107\",     \"negative\" = \"#F44336\"   ),   base_size = 16,   point_size = 4,   save_output = TRUE )  # Use the created options in margot_plot result <- margot_plot(your_data, options = trust_science_options) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","title":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","text":"function creates ggplot visualization decision tree Margot Causal Forest results. handles label transformations, includes standardized original split values, provides informative feedback using cli messages.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","text":"","code":"margot_plot_decision_tree(   result_object,   model_name = NULL,   original_df = NULL,   x_padding = 0.12,   y_padding = 0.25,   border_size = 0.5,   text_size = 4,   edge_label_offset = 0.025,   span_ratio = 0.4,   non_leaf_fill = \"lightyellow\",   title = NULL,   leaf_palette = NULL,   plot_margin = unit(c(1, 1, 1, 1), \"cm\"),   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   remove_action_label = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","text":"result_object list containing policy tree object Margot results. model_name Character string specifying model name results object. Default NULL. original_df Optional dataframe untransformed variables, used display split values data scale. x_padding Numeric value horizontal padding plot. Default 0.12. y_padding Numeric value vertical padding plot. Default 0.12. border_size Numeric value size node borders. Default 0.5. text_size Numeric value size text plot. Default 3. edge_label_offset Numeric value offset edge labels. Default 0.025. span_ratio Numeric value aspect ratio plot. Default 0.4. non_leaf_fill Character string specifying fill color non-leaf nodes. Default \"lightyellow\". title Character string plot title. Default NULL. leaf_palette Vector colors leaf nodes. Default NULL (uses Okabe-Ito palette). remove_tx_prefix Logical indicating whether remove \"tx_\" prefix labels. Default TRUE. remove_z_suffix Logical indicating whether remove \"_z\" suffix labels. Default TRUE. use_title_case Logical indicating whether convert labels title case. Default TRUE. remove_underscores Logical indicating whether remove underscores labels. Default TRUE. remove_action_label Logical indicating whether remove \"Action: \" prefix leaf node labels final plot. Default TRUE. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","text":"ggplot object representing decision tree.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_decision_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Decision Tree from Margot Causal Forest Results — margot_plot_decision_tree","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'results' is your Margot results object and 'model_name' is the name of your model tree_plot <- margot_plot_decision_tree(results, model_name = \"my_model\") print(tree_plot)  # To keep the \"Action: \" prefix in leaf node labels tree_plot <- margot_plot_decision_tree(results, model_name = \"my_model\", remove_action_label = FALSE) print(tree_plot)  # Using custom label mapping and original_df for unstandardized values label_mapping <- list(   \"t2_env_not_env_efficacy_z\" = \"Deny Personal Environmental Efficacy\",   \"t2_env_not_climate_chg_real_z\" = \"Deny Climate Change Real\" ) tree_plot <- margot_plot_decision_tree(results, model_name = \"model_t2_env_not_env_efficacy_z\",                                        label_mapping = label_mapping,                                        original_df = original_df) print(tree_plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"function creates ggplot2 visualisation show discontinuities data across multiple events. particularly useful visualising changes trends significant events.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"","code":"margot_plot_discontinuity(   data,   y_var,   event_dates,   event_names = NULL,   start_date = NULL,   end_date = NULL,   title = NULL,   y_label = NULL,   x_label = NULL,   smoothing_method = \"gam\",   gam_k = 4,   data_fraction = 1,   seed = NULL,   point_alpha = 0.03,   jitter_width = 1,   base_date = as.Date(\"2009-06-30\"),   save_path = NULL,   width = 12,   height = 8,   event_line_color = \"darkred\",   event_line_alpha = 0.7,   event_line_type = \"dashed\",   event_line_width = 0.5,   event_label_size = 3,   event_label_color = \"darkred\",   legend_position = \"bottom\",   use_title_case = TRUE,   remove_underscores = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"data data frame containing variables plotted. y_var name y-axis variable data frame. event_dates vector dates representing events. event_names optional vector names events. NULL, events labeled \"Event 1\", \"Event 2\", etc. start_date optional start date x-axis. end_date optional end date x-axis. title optional title plot. y_label optional label y-axis. x_label optional label x-axis. smoothing_method method used smoothing. Default \"gam\". gam_k number knots use smoothing_method \"gam\". Default 4. data_fraction fraction data use. Default 1 (use data). seed optional seed reproducibility sampling data. point_alpha alpha (transparency) data points. Default 0.03. jitter_width width jitter data points. Default 1. base_date base date timeline. Default \"2009-06-30\". save_path optional path save plot. width width saved plot inches. Default 12. height height saved plot inches. Default 8. event_line_color color event lines. Default \"darkred\". event_line_alpha alpha event lines. Default 0.7. event_line_type type event lines. Default \"dashed\". event_line_width width event lines. Default 0.5. event_label_size size event labels. Default 3. event_label_color color event labels. Default \"darkred\". legend_position position legend. Default \"bottom\". use_title_case Logical, whether use title case labels. Default TRUE. remove_underscores Logical, whether remove underscores labels. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"ggplot2 object representing discontinuity plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_discontinuity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Discontinuity Plot for Multiple Events — margot_plot_discontinuity","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(ggplot2) library(margot)  # Assume that 'dat' is your dataset and that 'path_talk' is defined muslim_discontinuity_warmth_plot <- margot_plot_discontinuity(   data = dat,   y_var = \"warm_muslims\",   event_dates = c(\"2019-03-15\", \"2020-03-26\"),   event_names = c(\"Christchurch Attack\", \"COVID-19 Lockdown\"),   start_date = \"2012-06-06\",   title = \"Discontinuity at multiple events (GAM)\",   y_label = \"Muslim Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\",   point_alpha = 0.05,   smoothing_method = \"gam\",   gam_k = 4,   data_fraction = .1,   seed = 123,   save_path = here::here(path_talk) )  # Display the plot print(muslim_discontinuity_warmth_plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a separate exposure plot — margot_plot_exposure","title":"Create a separate exposure plot — margot_plot_exposure","text":"Create separate exposure plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a separate exposure plot — margot_plot_exposure","text":"","code":"margot_plot_exposure(data, name_exposure, exposure_waves, baseline_wave)"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a separate exposure plot — margot_plot_exposure","text":"data data frame containing exposure data name_exposure name exposure variable exposure_waves vector wave numbers exposure measurements baseline_wave wave number baseline measurements","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a separate exposure plot — margot_plot_exposure","text":"ggplot object representing exposure plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"margot_plot_grf_rate(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"`r lifecycle::badge(\"deprecated\")` function deprecated. Please use `margot_plot_histogram()` instead.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"","code":"margot_plot_hist(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram with Quantile or Custom Breaks (DEPRECATED) — margot_plot_hist","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Error in coloured_histogram_quantiles(df, \"value\", n_divisions = 4): could not find function \"coloured_histogram_quantiles\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): could not find function \"coloured_histogram_quantiles\""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"function generates histogram plot specified variables across different waves data. highlights mean standard deviation variable wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"","code":"margot_plot_histogram(   data,   col_names,   id_col = \"id\",   wave_col = \"wave\",   waves = NULL,   binwidth = 0.5,   title = NULL,   x_label = NULL,   y_label = \"Count\",   save_path = NULL,   width = 12,   height = 8,   facet_scales = \"free\",   color_palette = NULL,   add_timestamp = FALSE,   file_prefix = \"\",   mean_line_color = \"black\",   sd_line_color = \"black\",   vertical_facets = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"data data frame containing variables plot. col_names Vector names columns create histograms . id_col Name column containing unique identifiers. Default \"id\". wave_col Name column containing wave information. Default \"wave\". waves Vector waves include plot. NULL, waves included. binwidth Width bins histogram. Default 0.5. title optional title plot. NULL, automatic title generated. x_label optional label x-axis. NULL, \"Value\" used. y_label optional label y-axis. Default \"Count\". save_path optional path save plot. NULL, plot saved. width width saved plot inches. Default 12. height height saved plot inches. Default 8. facet_scales Scales facet. Either \"fixed\", \"free_x\", \"free_y\", \"free\". Default \"free\". color_palette optional custom color palette plot. add_timestamp Logical. TRUE, adds timestamp saved filename. Default FALSE. file_prefix optional prefix add beginning saved filename. Default empty string. mean_line_color Color vertical line representing mean. Default \"black\". sd_line_color Color dashed lines representing standard deviation. Default \"black\". vertical_facets Logical. TRUE, facets arranged vertically. FALSE (default), facets arranged horizontally.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"ggplot2 object representing histogram highlights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Histogram with Mean and Standard Deviation Highlights for Each Wave and Variable — margot_plot_histogram","text":"","code":"# basic usage with default settings margot_plot_histogram(   data = your_data,   col_names = c(\"variable1\", \"variable2\"),   id_col = \"participant_id\",   wave_col = \"survey_wave\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # specify waves and custom binwidth margot_plot_histogram(   data = your_data,   col_names = c(\"score1\", \"score2\"),   waves = c(2018, 2020),   binwidth = 1 ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use custom labels and saving the plot with timestamp and prefix margot_plot_histogram(   data = your_data,   col_names = c(\"attitude_measure\"),   title = \"Distribution of Attitudes Over Time\",   x_label = \"Attitude Score\",   save_path = \"path/to/save/plot\",   add_timestamp = TRUE,   file_prefix = \"study1\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use a custom color palette and custom line colors custom_colors <- c(\"#FF9999\", \"#66B2FF\") margot_plot_histogram(   data = your_data,   col_names = c(\"var1\", \"var2\"),   color_palette = custom_colors,   mean_line_color = \"red\",   sd_line_color = \"blue\" ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL  # use vertical faceting margot_plot_histogram(   data = your_data,   col_names = c(\"var1\", \"var2\"),   vertical_facets = TRUE ) #>  #> ── Margot Plot Histogram ─────────────────────────────────────────────────────── #> ✖ An error occurred: object 'your_data' not found #> <simpleError in eval(expr, envir): object 'your_data' not found> #> NULL"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"function creates histogram colored regions based quantile breaks custom breaks. uses `create_ordered_variable` function categorize data plots histogram different colors category.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"margot_plot_histogram_intervals(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Warning: `coloured_histogram_quantiles()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_plot_hist()` instead. #> Error in ggplot(df, aes(x = !!rlang::sym(col_name))): could not find function \"ggplot\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): unused argument (custom_breaks = c(-2, -1, 0, 1, 2))"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"function creates ggplot2 visualization individual responses time one variables. allows flexible data filtering, sampling, customization plot appearance. function automatically handles missing data removing rows NA values specified variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"","code":"margot_plot_individual_responses(   data,   y_vars,   id_col = \"id\",   wave_col = \"wave\",   waves = NULL,   data_fraction = 1,   random_draws = 100,   title = NULL,   y_label = NULL,   x_label = NULL,   color_palette = NULL,   theme = ggplot2::theme_classic(),   include_timestamp = FALSE,   save_path = NULL,   width = 16,   height = 8,   seed = NULL,   wave_label_angle = 45,   full_response_scale = TRUE,   scale_range = NULL,   prefix = NULL,   jitter_amount = 0.05,   legend_position = \"top\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"data data frame containing variables plotted. y_vars character vector column names `data` plotted y-axis. id_col name column `data` contains unique identifiers individuals. Default \"id\". wave_col name column `data` contains wave time information. Default \"wave\". waves optional vector wave values include plot. NULL, waves included. data_fraction fraction data use (0 1). Default 1 (use data). random_draws number random individuals plot. specified, overrides `data_fraction`. title optional title plot. y_label optional label y-axis. x_label optional label x-axis. color_palette optional vector colors use variables. theme ggplot2 theme use plot. Default theme_classic(). include_timestamp Logical, whether include timestamp saved file name. Default FALSE. save_path optional file path save plot. width width saved plot inches. Default 16. height height saved plot inches. Default 8. seed optional seed reproducibility sampling data. wave_label_angle angle x-axis labels degrees. Default 45. full_response_scale Logical, whether use full response scale y-axis. Default TRUE. scale_range optional numeric vector length 2 specifying range y-axis. NULL, range determined data. prefix optional prefix saved file name. jitter_amount Numeric, amount vertical jitter apply points lines. Default 0.05. legend_position position legend. Default \"top\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"ggplot2 object representing individual response plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_individual_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Individual Longitudinal Response Plots — margot_plot_individual_responses","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Basic usage with default settings plot1 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"variable1\", \"variable2\"),   id_col = \"participant_id\",   wave_col = \"year\" )  # Example 2: Plotting specific waves and using random draws plot2 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"score1\", \"score2\", \"score3\"),   waves = c(2020, 2021, 2022),   random_draws = 50,   title = \"Individual Scores Over Time\",   y_label = \"Score\",   x_label = \"Year\",   seed = 123 )  # Example 3: Customizing plot appearance and saving plot3 <- margot_plot_individual_responses(   data = your_data,   y_vars = c(\"measure1\", \"measure2\"),   full_response_scale = TRUE,   scale_range = c(0, 10),   theme = theme_minimal(),   wave_label_angle = 90,   jitter_amount = 0.03,   legend_position = \"bottom\",   save_path = \"path/to/save\",   prefix = \"custom_plot\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"function wrapper `margot_plot()` function, designed multi-arm causal forest models. allows user specify contrast interest, automatically passes `margot_plot()` function. specified contrast found, error reported.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"","code":"margot_plot_multi_arm(   model_table,   contrast,   original_df = NULL,   options,   label_mapping,   save_output = FALSE,   use_timestamp = FALSE,   base_filename = \"margot_plot_output\",   prefix = NULL,   save_path = here::here(\"push_mods\") )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"model_table list data frame containing model output tables. contrast character string specifying contrast used (e.g. `\"(5.0,7.0] - [1.0,3.0]\"`). original_df Optional data frame containing original (non-transformed) data back-transformation results. options list additional options customising plot, passed directly `margot_plot()`. label_mapping named list custom label mapping outcomes, also passed `margot_plot()`. save_output Logical. TRUE, saves complete output file. Default FALSE. use_timestamp Logical. TRUE, adds timestamp saved filename. Default FALSE. base_filename Character string. base name saved file. Default \"margot_plot_output\". prefix Character string. optional prefix saved filename. Default NULL. save_path Character string. directory path output saved. Default ::(\"push_mods\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"list following elements: `plot`: ggplot object Margot plot. `interpretation`: character string interpretation results. `transformed_table`: data frame transformed labels according options label mappings. `save_output` TRUE, complete output saved file using margot::here_save_qs().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"user must specify contrast `model_table`. contrast found, error raised using `cli` reporting. `margot_plot()` function provides various options customising plot, including ability save plot, modify labels, adjust plot aesthetics. full range options available `margot_plot()` can passed `options` argument. `original_df` provided, function use back-transform results original scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_multi_arm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Multi-arm Margot Plot with User-specified Contrast — margot_plot_multi_arm","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage with multi-arm models multi_results <- margot_plot_multi_arm(   models_multi$combined_tables,   contrast = \"(5.0,7.0] - [1.0,3.0]\",   original_df = df_raw_outcomes,   options = multi_options,   label_mapping = label_mapping,   save_output = TRUE,   save_path = here::here(\"output\", \"margot_plots\"),   base_filename = \"margot_plot_output\",   prefix = \"test\" ) print(multi_results$plot) cat(multi_results$interpretation) print(multi_results$transformed_table) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"function generates combined plot consisting decision tree graph showing relationships variables recommended policy.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"","code":"margot_plot_policy_combo(   result_object,   model_name,   label_mapping = NULL,   original_df = NULL,   layout = list(heights = c(1, 2)),   annotation = list(tag_levels = \"A\"),   generate_policy_tree = TRUE,   generate_decision_tree = TRUE,   policy_tree_args = list(),   decision_tree_args = list() )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"result_object object containing results multi-arm causal forest model. model_name character string specifying name model. label_mapping Optional named list custom label mappings. original_df Optional dataframe untransformed variables. layout list specifying layout combined plot. Default `list(heights = c(1, 2))`, sets relative heights two plots. annotation list specifying annotation combined plot. Default `list(tag_levels = \"\")`, adds alphabetic tags subplots. generate_policy_tree Logical, whether generate policy tree plot. Default TRUE. generate_decision_tree Logical, whether generate decision tree plot. Default TRUE. policy_tree_args list arguments pass margot_plot_policy_tree. Default list(). decision_tree_args list arguments pass margot_plot_decision_tree. Default list().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"list containing: policy_tree ggplot object representing policy tree (generated) decision_tree ggplot object representing decision tree (generated) combined_plot ggplot object representing combined plot (plots generated)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_combo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Combined Decision Tree and Policy Relationship Graph — margot_plot_policy_combo","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'results' is your Margot results object, 'model_name' is the name of your model, # 'label_mapping' is your custom label mapping, and 'original_df' is your original dataframe combined_plot <- margot_plot_policy_combo(   result_object = results,   model_name = \"model_t2_env_not_env_efficacy_z\",   label_mapping = label_mapping,   original_df = original_df,   policy_tree_args = list(point_alpha = 0.75),   decision_tree_args = list(text_size = 4.5, edge_label_offset = 0.01) )  # Print the combined plot print(combined_plot$combined_plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Policy Tree Results with Shading Option — margot_plot_policy_tree","title":"Plot Policy Tree Results with Shading Option — margot_plot_policy_tree","text":"Visualise top-two splits policy tree scatterplots two split variables, points coloured predicted action, optional shading non-decision regions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Policy Tree Results with Shading Option — margot_plot_policy_tree","text":"","code":"margot_plot_policy_tree(   mc_test,   model_name,   original_df = NULL,   shading = TRUE,   color_scale = NULL,   point_alpha = 0.5,   theme_function = theme_classic,   title_size = 16,   subtitle_size = 14,   axis_title_size = 14,   legend_title_size = 14,   jitter_width = 0.3,   jitter_height = 0.3,   split_line_color = \"red\",   split_line_alpha = 0.7,   split_line_type = \"dashed\",   split_line_linewidth = 0.5,   split_label_size = 10,   split_label_color = \"red\",   custom_action_names = NULL,   legend_position = \"bottom\",   plot_selection = \"both\",   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   label_mapping = NULL,   shade_fill = \"#6e6e6e\",   shade_alpha = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Policy Tree Results with Shading Option — margot_plot_policy_tree","text":"mc_test List multi-arm causal forest run containing $results[[model_name]]$policy_tree_depth_2 $results[[model_name]]$plot_data. model_name String name model mc_test$results. original_df Optional data.frame original-scale variables axis annotations. shading Logical; TRUE, shade non-decision regions. Default: TRUE. color_scale Optional ggplot2 colour scale. Default: Okabe–Ito palette. point_alpha Numeric point transparency (0–1). Default: 0.5. theme_function ggplot2 theme function. Default: theme_classic(). title_size Numeric plot-title text size. Default: 16. subtitle_size Numeric subtitle text size. Default: 14. axis_title_size Numeric axis-title text size. Default: 14. legend_title_size Numeric legend-title text size. Default: 14. jitter_width Numeric horizontal jitter. Default: 0.3. jitter_height Numeric vertical jitter. Default: 0.3. split_line_color Colour split lines. Default: \"red\". split_line_alpha Alpha split lines. Default: 0.7. split_line_type Linetype split lines. Default: \"dashed\". split_line_linewidth Linewidth split lines. Default: 0.5. split_label_size Text size secondary-axis labels. Default: 10. split_label_color Colour secondary-axis labels. Default: \"red\". custom_action_names Optional vector custom action labels. legend_position Legend position: \"top\",\"bottom\",\"left\",\"right\". Default: \"bottom\". plot_selection panels show: \"\",\"p1\",\"p2\". Default: \"\". remove_tx_prefix Logical; strip \"tx_\" names. Default: TRUE. remove_z_suffix Logical; strip \"_z\" names. Default: TRUE. use_title_case Logical; convert labels Title Case. Default: TRUE. remove_underscores Logical; remove underscores. Default: TRUE. label_mapping Named list label overrides. Default: NULL. shade_fill Fill colour shading. Default: \"#6e6e6e\". shade_alpha Alpha shading. Default: 0.35.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Policy Tree Results with Shading Option — margot_plot_policy_tree","text":"patchwork ggplot two panels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"function creates ggplot object displaying Qini curves based results margot_multi_arm_causal_forest() model. includes label transformations informative CLI messages.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"margot_plot_qini(   mc_result,   outcome_var,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   label_mapping = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"mc_result list containing results margot_multi_arm_causal_forest(). outcome_var character string specifying name outcome variable plot. match one model names mc_result$results. remove_tx_prefix Logical value indicating whether remove \"tx_\" prefix labels. Default TRUE. remove_z_suffix Logical value indicating whether remove \"_z\" suffix labels. Default TRUE. use_title_case Logical value indicating whether convert labels title case. Default TRUE. remove_underscores Logical value indicating whether remove underscores labels. Default TRUE. label_mapping Optional named list custom label mappings. Keys original variable names (without \"model_\" prefix), values desired display labels. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"ggplot object representing Qini curves specified outcome variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming mc.test is the result of margot_multi_arm_causal_forest() plot_qini_curves(mc.test, \"model_t2_belong_z\")  # Using custom label mapping label_mapping <- list(   \"t2_env_not_env_efficacy_z\" = \"Deny Personal Environmental Efficacy\",   \"t2_env_not_climate_chg_real_z\" = \"Deny Climate Change Real\" ) plot_qini_curves(mc.test, \"model_t2_env_not_env_efficacy_z\", label_mapping = label_mapping) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_rate","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"margot_plot_rate(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process and Plot RATE Curves for Multiple Models (New Function) — margot_plot_rate_batch","title":"Batch Process and Plot RATE Curves for Multiple Models (New Function) — margot_plot_rate_batch","text":"function processes subset models (models default), creates RATE (Rank Average Treatment Effect) plots model using margot package, optionally saves plots.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process and Plot RATE Curves for Multiple Models (New Function) — margot_plot_rate_batch","text":"","code":"margot_plot_rate_batch(   models_binary,   model_names = NULL,   dpi = 300,   width = 12,   height = 8,   save_plots = TRUE,   output_dir = \"rate_plots\" )  margot_plot_batch_rate(   models_binary,   model_names = NULL,   dpi = 300,   width = 12,   height = 8,   save_plots = TRUE,   output_dir = \"rate_plots\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process and Plot RATE Curves for Multiple Models (New Function) — margot_plot_rate_batch","text":"models_binary list model results, element contains 'rate_result' component. model_names Optional character vector model names process. Default NULL (models). dpi resolution saved plots dots per inch. Default 300. width width saved plots inches. Default 12. height height saved plots inches. Default 8. save_plots Logical indicating whether save plots disk. Default TRUE. output_dir directory plots saved. Default \"rate_plots\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process and Plot RATE Curves for Multiple Models (New Function) — margot_plot_rate_batch","text":"list containing generated ggplot objects processed model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Panel Study Response Timeline — margot_plot_response_timeline","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"function creates ggplot2 visualization panel study response timeline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"","code":"margot_plot_response_timeline(   df_timeline,   n_total_participants = NULL,   save = FALSE,   save_path = here::here(\"output\"),   width = 12,   height = 8,   base_filename = \"timeline_histogram\",   title = \"Panel Study Timeline\",   x_label = \"Date\",   y_label = \"Count of Responses\",   color_palette = NULL,   save_png = FALSE,   use_timestamp = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"df_timeline data frame containing processed timeline data, typically output `prepare_panel_data()`. n_total_participants total number unique participants. NULL, extracted df_timeline available. save Logical. TRUE, saves plot qs file. Default FALSE. save_path directory path save plot. Default \"output\" current working directory. width width saved plot inches. Default 12. height height saved plot inches. Default 8. base_filename base filename saving plot. Default \"timeline_histogram\". title main title plot. Default \"Panel Study Timeline\". x_label label x-axis. Default \"Date\". y_label label y-axis. Default \"Count Responses\". color_palette vector colors use waves. NULL, uses default color-blind friendly palette. save_png Logical. TRUE, saves plot PNG file. Default FALSE. use_timestamp Logical. TRUE, includes timestamp PNG filename. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"ggplot2 object representing panel study response timeline.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_response_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Panel Study Response Timeline — margot_plot_response_timeline","text":"","code":"if (FALSE) { # \\dontrun{ # Load required libraries library(dplyr) library(lubridate) library(ggplot2) library(here)  # Assume we have a data frame 'nzavs_data' with columns: id, wave, tscore  # Step 1: Define NZAVS-specific wave breaks nzavs_wave_breaks <- list(   \"time 1\" = c(as.Date(\"2009-08-30\"), as.Date(\"2010-10-15\")),   \"time 2\" = c(as.Date(\"2010-10-15\"), as.Date(\"2011-10-15\")),   \"time 3\" = c(as.Date(\"2011-10-15\"), as.Date(\"2012-10-15\")),   \"time 4\" = c(as.Date(\"2012-10-15\"), as.Date(\"2013-10-15\")),   \"time 5\" = c(as.Date(\"2013-10-15\"), as.Date(\"2014-10-15\")),   \"time 6\" = c(as.Date(\"2014-10-15\"), as.Date(\"2015-10-15\")),   \"time 7\" = c(as.Date(\"2015-10-15\"), as.Date(\"2016-10-15\")),   \"time 8\" = c(as.Date(\"2016-10-15\"), as.Date(\"2017-10-15\")),   \"time 9\" = c(as.Date(\"2017-10-15\"), as.Date(\"2018-10-15\")),   \"time 10\" = c(as.Date(\"2018-10-15\"), as.Date(\"2019-10-15\")),   \"time 11\" = c(as.Date(\"2019-10-15\"), as.Date(\"2020-10-15\")),   \"time 12\" = c(as.Date(\"2020-10-15\"), as.Date(\"2021-10-15\")),   \"time 13\" = c(as.Date(\"2021-10-15\"), as.Date(\"2022-10-15\")),   \"time 14\" = c(as.Date(\"2022-10-15\"), as.Date(\"2023-10-15\")) )  # Step 2: Prepare the NZAVS data prepared_data <- prepare_panel_data(   dat = nzavs_data,   wave_col = \"wave\",   tscore_col = \"tscore\",   id_col = \"id\",   base_date = as.Date(\"2009-06-30\"),   wave_breaks = nzavs_wave_breaks )  # Step 3: Create the NZAVS timeline plot nzavs_timeline <- margot_plot_response_timeline(   df_timeline = prepared_data$df_timeline,   n_total_participants = prepared_data$n_total_participants,   save = TRUE,   save_png = TRUE,   use_timestamp = TRUE,   save_path = here::here(\"output\", \"plots\"),   title = \"New Zealand Attitudes and Values Study (panel)\",   x_label = paste(\"NZAVS years\",  min(prepared_data$df_timeline$day, na.rm = TRUE),                   \"-\", max(prepared_data$df_timeline$day, na.rm = TRUE),                   \"cohort: daily counts by condition\"),   y_label = \"Count of Responses\" )  # Display the plot print(nzavs_timeline) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot Plot as PNG — margot_plot_save_png","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"function takes output either `margot_plot()` `margot_plot_multi_arm()` saves plot PNG image using `ggsave()`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"","code":"margot_plot_save_png(   plot_output,   prefix = NULL,   base_filename = \"margot_plot\",   save_path = here::here(\"push_mods\"),   width = 16,   height = 8,   dpi = 500 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"plot_output list containing output `margot_plot()` `margot_plot_multi_arm()`. list `plot` element contains ggplot object. prefix Character string. prefix add filename. Default NULL. base_filename Character string. base name saved file. Default \"margot_plot\". save_path Character string. directory path image saved. Default ::(\"push_mods\"). width Numeric. width saved image inches. Default 16. height Numeric. height saved image inches. Default 8. dpi Numeric. resolution saved image dots per inch. Default 500.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"Invisibly returns path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"function uses `ggsave()` save Margot plot PNG image. save_path directory exist, created. final filename constructed : `prefix_base_filename.png`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_save_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Margot Plot as PNG — margot_plot_save_png","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have already run margot_plot() or margot_plot_multi_arm() plot_result <- margot_plot(your_data, your_options)  # Save the plot as PNG margot_plot_save_png(   plot_result,   prefix = \"study1\",   base_filename = \"treatment_effects\",   save_path = here::here(\"output\", \"plots\") ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"function creates histogram highlights specified range values visualise shifts data distributions. highlighted range can indicate areas interest, shifts distribution. visualisation useful understanding implications causal contrasts, modified treatment policies. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"","code":"margot_plot_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE,   print_avg_value = TRUE,   show_sd_line = TRUE,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   save_path = NULL,   width = 12,   height = 8,   include_timestamp = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"df dataframe containing variable interest. col_name name column df visualised histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data. range_highlight numeric vector length 2 specifying start end range highlight. NULL, range highlighted. shift character string indicating direction shift, either \"\" \"\". Default \"\". show_avg_line logical value indicating whether display vertical line representing average value. Default TRUE. print_avg_value logical value indicating whether print numerical value average plot. TRUE, value printed horizontally left mean line bottom graph. Default TRUE. show_sd_line logical value indicating whether display vertical dashed lines (grey) representing one standard deviation either side average. Default TRUE. title optional custom title plot. NULL, default title generated. subtitle optional custom subtitle plot. NULL, default subtitle generated. x_lab optional label x-axis. NULL, formatted column name used. y_lab label y-axis. Default \"Count\". save_path optional path save plot. NULL, plot saved. width width saved plot inches. Default 12. height height saved plot inches. Default 8. include_timestamp logical value indicating whether include timestamp saved filename. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Shifts in Data Distributions with Highlighted Ranges — margot_plot_shift","text":"ggplot object representing histogram specified highlights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Slope Plot for Multiple Variables — margot_plot_slope","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"function creates ggplot2 visualization show trends multiple variables time. possible add vertical lines significant events. function now also counts reports number unique participants observations. includes options faceting avoid overplotting dealing multiple variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"","code":"margot_plot_slope(   data,   y_vars,   event_dates = NULL,   event_names = NULL,   start_date = NULL,   end_date = NULL,   title = NULL,   y_label = NULL,   x_label = NULL,   data_fraction = 1,   seed = NULL,   plot_points = FALSE,   point_alpha = 0.03,   jitter_width = 1,   base_date = as.Date(\"2009-06-30\"),   save_path = NULL,   width = 12,   height = 8,   event_line_color = \"darkred\",   event_line_alpha = 0.7,   event_line_type = \"dashed\",   event_line_width = 0.5,   event_label_size = 3,   event_label_color = \"darkred\",   legend_position = \"bottom\",   use_title_case = TRUE,   remove_underscores = TRUE,   y_limits = NULL,   color_palette = NULL,   use_facets = TRUE,   facet_scales = \"free_y\",   facet_ncol = NULL,   facet_nrow = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"data data frame containing variables plotted. y_vars list variable names single variable name plotted y-axis. event_dates optional vector dates representing events. event_names optional vector names events. NULL, events labeled \"Event 1\", \"Event 2\", etc. start_date optional start date x-axis. end_date optional end date x-axis. title optional title plot. NULL, automatic title generated including count participants observations. y_label optional label y-axis. x_label optional label x-axis. data_fraction fraction data use. Default 1 (use data). seed optional seed reproducibility sampling data. plot_points Logical, whether plot individual data points. Default FALSE. point_alpha alpha (transparency) data points. Default 0.03. jitter_width width jitter data points. Default 1. base_date base date timeline. Default \"2009-06-30\". save_path optional path save plot. width width saved plot inches. Default 12. height height saved plot inches. Default 8. event_line_color color event lines. Default \"darkred\". event_line_alpha alpha event lines. Default 0.7. event_line_type type event lines. Default \"dashed\". event_line_width width event lines. Default 0.5. event_label_size size event labels. Default 3. event_label_color color event labels. Default \"darkred\". legend_position position legend. Default \"bottom\". use_title_case Logical, whether use title case labels. Default TRUE. remove_underscores Logical, whether remove underscores labels. Default TRUE. y_limits optional vector two numbers specifying y-axis limits. color_palette optional custom color palette. NULL, default palette used. use_facets Logical, whether use faceting multiple variables. Default TRUE. facet_scales scales parameter facet_wrap. Default \"free_y\". facet_ncol number columns facet_wrap. Default NULL. facet_nrow number rows facet_wrap. Default NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"ggplot2 object representing slope plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Slope Plot for Multiple Variables — margot_plot_slope","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(ggplot2) library(tidyr) library(here)  # Basic usage with a single variable single_var_plot <- margot_plot_slope(   data = dat,   y_vars = \"warm_muslims\",   start_date = \"2012-06-06\",   y_label = \"Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\" )  # Multiple variables with events and custom y-axis limits multi_var_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"warm_muslims\", \"warm_immigrants\"),   event_dates = c(\"2019-03-15\", \"2021-01-01\"),   event_names = c(\"Christchurch Attack\", \"COVID-19 Lockdown\"),   start_date = \"2012-06-06\",   y_label = \"Warmth\",   x_label = \"NZAVS Time 4 - 14 Cohort (2012-2023)\",   y_limits = c(1, 7),   use_facets = TRUE )  # Plot with points, using a subset of data and custom facet layout point_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"warm_asians\", \"warm_pacific\", \"warm_immigrants\"),   plot_points = TRUE,   point_alpha = 0.05,   data_fraction = 0.1,   seed = 123,   y_label = \"Warmth\",   use_facets = TRUE,   facet_ncol = 2 )  # Save the plot saved_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"political_orientation\", \"social_dominance_orientation\"),   save_path = here::here(\"outputs\", \"plots\"),   width = 10,   height = 6,   use_facets = TRUE )  # Custom styling and color palette custom_plot <- margot_plot_slope(   data = dat,   y_vars = list(\"sat_government\", \"sat_nz_econ_conditions\"),   event_dates = \"2017-10-26\",   event_names = \"2017 Election\",   y_label = \"Satisfaction Level (0-10)\",   y_limits = c(0, 10),   event_line_color = \"blue\",   event_label_color = \"blue\",   legend_position = \"top\",   color_palette = c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\"),   use_facets = TRUE ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"function creates ggplot2 visualization using ggeffects calculate predicted responses model. allows flexible specification model plotting options. function automatically handles NA infinite values, reports number unique participants observations used analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"","code":"margot_plot_slope_covariate(   data,   formula,   terms,   id_col = \"id\",   title = NULL,   y_label = NULL,   x_label = NULL,   y_limits = c(1, 7),   color_label = NULL,   include_title = TRUE,   include_timestamp = FALSE,   save_path = NULL,   prefix = NULL,   width = 12,   height = 8,   seed = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"data data frame containing variables model. formula formula specifying model fit. terms character vector specifying terms used predict_response. id_col Name column containing unique identifiers (default \"id\"). title optional title plot. NULL, automatic title generated. y_label optional label y-axis. NULL, response variable name used. x_label optional label x-axis. NULL, first term used. y_limits optional vector two numbers specifying y-axis limits. Default c(1, 7). color_label optional label color legend. NULL, second term used. include_title Logical, whether include plot title (default TRUE). include_timestamp Logical, whether include timestamp plot title filename (default FALSE). save_path optional path save plot. NULL, plot saved. prefix Optional prefix saved file name (default NULL). width width saved plot inches. Default 12. height height saved plot inches. Default 8. seed optional seed reproducibility. ... Additional arguments passed ggeffects::predict_response.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"ggplot2 object representing plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Slope Plot using ggeffects — margot_plot_slope_covariate","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage remains the same } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"function creates multiple ggplot2 visualizations using ggeffects calculate predicted responses models multiple outcome variables combines single plot using patchwork package. allows flexible specification models plotting options, including layout annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"","code":"margot_plot_slope_covariate_batch(   data,   outcome_vars,   exposure_formula,   terms,   label_mapping = NULL,   x_label = NULL,   color_label = NULL,   save_path = NULL,   file_prefix = \"plot_slope_covariate_batch\",   ncol = NULL,   nrow = NULL,   guides = \"collect\",   patchwork_params = list(),   plot_annotation_params = list(),   caption_size = 10,   include_individual_titles = FALSE,   width = 10,   height = 8,   dpi = 400,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"data data frame containing variables models. outcome_vars character vector specifying outcome variables modeled. exposure_formula formula specifying exposure variables (right-hand side model). terms character vector specifying terms used predict_response. label_mapping optional named list mapping outcome variables custom y-axis labels. x_label optional label x-axis. NULL, first term used. color_label optional label color legend. NULL, second term used. save_path optional path save combined plot. NULL, plot saved. file_prefix Optional prefix saved file name (default \"plot_slope_covariate_batch\"). ncol Number columns combined plot layout. nrow Number rows combined plot layout. guides combine legends. Default \"collect\". patchwork_params list additional parameters passed patchwork::plot_layout(). plot_annotation_params list parameters passed patchwork::plot_annotation(). include_individual_titles Logical, whether include titles individual plots (default FALSE). width Width combined plot inches. Default 12. height Height combined plot inches. Default 8. dpi Resolution saved plot. Default 400. ... Additional arguments passed margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"ggplot2 object representing combined plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_batch","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcome variables and label mapping outcome_vars <- c(\"var1\", \"var2\", \"var3\") label_mapping <- list(\"var1\" = \"Variable 1\", \"var2\" = \"Variable 2\", \"var3\" = \"Variable 3\")  # Create combined plot combined_plot <- margot_plot_slope_covariate_batch(   data = dat,   outcome_vars = outcome_vars,   exposure_formula = \"~ wave:covariate\",   terms = c(\"wave\", \"covariate\"),   label_mapping = label_mapping,   x_label = \"Time\",   color_label = \"Covariate\",   ncol = 2,   plot_annotation_params = list(     title = \"Combined Slope Plots\",     subtitle = \"Subtitle for the combined plot\"   ),   save_path = \"path/to/save/directory\",   width = 14,   height = 10 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"function creates multiple ggplot2 visualizations using ggeffects calculate predicted responses models multiple outcome variables combines single plot using patchwork package. allows flexible specification models plotting options, including layout annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"","code":"margot_plot_slope_covariate_combo(   data,   outcome_vars,   exposure_formula,   terms,   label_mapping = NULL,   x_label = NULL,   color_label = NULL,   save_path = NULL,   file_prefix = \"plot_slope_covariate_batch\",   ncol = NULL,   nrow = NULL,   guides = \"collect\",   patchwork_params = list(),   plot_annotation_params = list(),   caption_size = 10,   include_individual_titles = FALSE,   width = 12,   height = 8,   dpi = 400,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"data data frame containing variables models. outcome_vars character vector specifying outcome variables modeled. exposure_formula formula specifying exposure variables (right-hand side model). terms character vector specifying terms used predict_response. label_mapping optional named list mapping outcome variables custom y-axis labels. x_label optional label x-axis. NULL, first term used. color_label optional label color legend. NULL, second term used. save_path optional path save combined plot. NULL, plot saved. file_prefix Optional prefix saved file name (default \"plot_slope_covariate_batch\"). ncol Number columns combined plot layout. nrow Number rows combined plot layout. guides combine legends. Default \"collect\". patchwork_params list additional parameters passed patchwork::plot_layout(). plot_annotation_params list parameters passed patchwork::plot_annotation(). include_individual_titles Logical, whether include titles individual plots (default FALSE). width Width combined plot inches. Default 12. height Height combined plot inches. Default 8. dpi Resolution saved plot. Default 400. ... Additional arguments passed margot_plot_slope_covariate().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"ggplot2 object representing combined plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_slope_covariate_combo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Combined Slope Plot using ggeffects and patchwork — margot_plot_slope_covariate_combo","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcome variables and label mapping outcome_vars <- c(\"var1\", \"var2\", \"var3\") label_mapping <- list(\"var1\" = \"Variable 1\", \"var2\" = \"Variable 2\", \"var3\" = \"Variable 3\")  # Create combined plot combined_plot <- margot_plot_slope_covariate_combo(   data = dat,   outcome_vars = outcome_vars,   exposure_formula = \"~ wave:covariate\",   terms = c(\"wave\", \"covariate\"),   label_mapping = label_mapping,   x_label = \"Time\",   color_label = \"Covariate\",   ncol = 2,   plot_annotation_params = list(     title = \"Combined Slope Plots\",     subtitle = \"Subtitle for the combined plot\"   ),   save_path = \"path/to/save/directory\",   width = 14,   height = 10 ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"Process list multi-arm causal forest results: generate policy-tree decision-tree plots, Qini curves, difference-gain summaries, optionally saving disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"","code":"margot_policy(   result_outcomes,   policy_tree_args = list(),   decision_tree_args = list(),   dpi = 600,   width = 12,   height = 12,   save_plots = TRUE,   output_dir = here::here(push_mods),   spend = c(0.2, 0.5),   label_mapping = NULL,   original_df = NULL,   model_names = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"result_outcomes List returned margot_multi_arm_causal_forest(). policy_tree_args List args margot_plot_policy_tree(). Default: list(). decision_tree_args List args margot_plot_decision_tree(). Default: list(). dpi Resolution (dpi) saved plots. Default: 600. width Width (inches) saved plots. Default: 12. height Height (inches) saved plots. Default: 12. save_plots Logical; save plots disk? Default: TRUE. output_dir Directory saving plots. Default: ::(push_mods). spend Numeric vector spend levels difference-gain summaries. Default: c(0.2, 0.5). label_mapping Named list mapping variable names display labels. Default: NULL. original_df Optional data.frame untransformed variables axis annotations. Default: NULL. model_names Character vector model names process; NULL = . Default: NULL.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Processing of Policy Trees and Related Visualisations — margot_policy","text":"named list; element corresponds model contains: policy_tree_plot ggplot policy-tree plot policy_tree_interpretation character interpretation qini_plot ggplot Qini curve decision_tree_visualisation ggplot decision tree policy_combo_plot ggplot combined policy vs decision diff_gain_summaries list difference-gain summaries per spend","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","title":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","text":"function provides comprehensive analysis policy tree results causal forest multi-arm causal forest model. generates policy tree plot, interpretation policy tree, Qini curve plot, decision tree visualization, policy combo plot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","text":"","code":"margot_policy_tree(   mc_test,   model_name,   policy_tree_args = list(),   decision_tree_args = list() )"},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","text":"mc_test list containing results multi-arm causal forest model. model_name string specifying model's results analyze. policy_tree_args list arguments specifically margot_plot_policy_tree. decision_tree_args list arguments specifically margot_plot_decision_tree.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","text":"list containing five elements: policy_tree_plot ggplot object representing policy tree visualization. policy_tree_interpretation string containing interpretation policy tree. qini_plot ggplot object representing Qini curve. decision_tree_visualisation ggplot object representing decision tree structure. policy_combo_plot ggplot object representing policy combo visualisation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_policy_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Comprehensive Policy Tree Analysis — margot_policy_tree","text":"","code":"if (FALSE) { # \\dontrun{ results <- margot_policy_tree(mc_test, \"model_t2_log_hours_exercise_z\",                               policy_tree_args = list(point_alpha = 0.7),                               decision_tree_args = list(text_size = 4)) print(results$policy_tree_plot) cat(results$policy_tree_interpretation) print(results$qini_plot) print(results$decision_tree_visualisation) print(results$policy_combo_plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Binary Variables in a Data Frame — margot_process_binary_vars","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"function identifies binary variables (factors numeric), converts 0/1 format, renames . allows exceptions specified, ignores variables whose names already end specified suffix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"margot_process_binary_vars(data, exceptions = character(0), suffix = \"_binary\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data data frame process. exceptions character vector column names exclude processing. suffix string append renamed binary variables. Default \"_binary\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data frame processed binary variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"df <- data.frame(   a = factor(c(\"yes\", \"no\", \"yes\")),   b = c(1, 0, 1),   c = c(\"apple\", \"banana\", \"apple\"),   d = factor(c(\"true\", \"false\", \"true\")),   e_binary = c(0, 1, 0) ) processed_df <- margot_process_binary_vars(df, exceptions = \"c\") #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: cli #> Loading required package: knitr #>  #> ── Processing Binary Variables ───────────────────────────────────────────────── #> ℹ Ignoring variables with suffix '_binary': e_binary #>  #> ── Initial Data Summary ── #>  #> Total variables: 5 #> Total observations: 3 #> Exceptions specified: 1 #>  #> ── Binary Variables Identified ── #>  #> Total binary variables: 3 #> List of binary variables: #>  #>  #> |Variable | #> |:--------| #> |a        | #> |b        | #> |d        | #>  #> ── Variable Renaming ── #>  #>  #>  #> |Original |New      | #> |:--------|:--------| #> |a        |a_binary | #> |b        |b_binary | #> |d        |d_binary | #> ── Final Data Summary ── #>  #> Total variables: 5 #> Variables processed: 3 #> Variables excluded (exceptions and ignored): 2 #> ✔ Binary variable processing completed successfully! #> ────────────────────────────────────────────────────────────────────────────────"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"process longitudinal data for three waves — margot_process_longitudinal_data","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function processes longitudinal data exactly three waves (t0, t1, t2). handles attrition, scales baseline variables, optionally encodes ordinal variables. note: function currently implemented three waves .","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"","code":"margot_process_longitudinal_data(   df_wide,   ordinal_columns = NULL,   continuous_columns_keep = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"df_wide wide-format dataframe containing longitudinal data three waves. ordinal_columns character vector column names treated ordinal dummy-coded. continuous_columns_keep character vector continuous column names keep without scaling.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"processed dataframe suitable use longitudinal analyses three waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function performs following steps: 1. creates na conditions t0 t1 based missingness subsequent waves. 2. handles non-factor factor columns, applying attrition logic. 3. scales numeric baseline (t0) variables. 4. selects orders columns. 5. optionally encodes ordinal columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"function specifically designed datasets exactly three waves (t0, t1, t2). may work correctly datasets fewer waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process longitudinal data for three waves — margot_process_longitudinal_data","text":"","code":"# assuming df_wide is your wide-format dataframe with three waves processed_data <- margot_process_longitudinal_data(   df_wide,   ordinal_columns = c(\"education\", \"income_category\"),   continuous_columns_keep = c(\"age\", \"bmi\") ) #>  #> ── Longitudinal Data Processing ──────────────────────────────────────────────── #> ℹ Starting data processing for three waves (t0, t1, t2) #>  #> ── Step 1: Creating NA conditions ── #>  #> Error: object 'df_wide' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"function processes longitudinal data (wide format) across multiple waves, handling dyadic censoring: one partner dyad lost wave $t$, entire dyad set lost wave $t$. subsequent wave data set NA.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"","code":"margot_process_longitudinal_data_wider(   df_wide,   relationship_id = \"NULL\",   ordinal_columns = NULL,   continuous_columns_keep = NULL,   exposure_vars = NULL,   scale_exposure = FALSE,   scale_continuous = TRUE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = NULL,   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE,   censored_if_any_lost = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"df_wide wide-format dataframe containing longitudinal data. relationship_id string naming column identifies dyads. defaults \"NULL\". ordinal_columns character vector column names treated ordinal dummy-coded. continuous_columns_keep character vector continuous column names keep without scaling. exposure_vars character vector exposure variable names determine attrition. scale_exposure logical. TRUE, scales exposure variable(s). default FALSE. scale_continuous logical. TRUE, scales continuous variables. FALSE, variables scaled. default TRUE. not_lost_in_following_wave character string suffix \"lost\" indicator. default \"not_lost_following_wave\". lost_in_following_wave character string suffix \"lost\" indicator. NULL, 'lost' indicator created. remove_selected_columns logical. TRUE, removes selected columns encoding. default TRUE. time_point_prefixes character vector time point prefixes. NULL, inferred data. time_point_regex regex pattern identifying time points. used time_point_prefixes NULL. save_observed_y logical. TRUE, retains observed outcome values final wave even lost. default FALSE. censored_if_any_lost logical. TRUE, sets \"not_lost_in_following_wave\" = 0 data NA wave $t+1$.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"processed dataframe suitable longitudinal analyses.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"dyadic logic occurs computing wave's \"not_lost\" indicator. person dyad flagged lost (0), partners dyad also get flagged lost wave. function prints CLI messages summarising many dyads many participants lost wave, dyad IDs forced lost.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_longitudinal_data_wider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process longitudinal dyadic data for multiple waves — margot_process_longitudinal_data_wider","text":"","code":"# see the tests in previous examples, or adapt your own."},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of missing data at baseline — margot_prop_missing","title":"Proportion of missing data at baseline — margot_prop_missing","text":"function calculates proportion missing data baseline wave. wave column present, uses lowest number lowest factor level baseline. wave column found, issues warning uses entire dataset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of missing data at baseline — margot_prop_missing","text":"","code":"margot_prop_missing(data, wave_col = \"wave\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of missing data at baseline — margot_prop_missing","text":"data data frame containing dataset. wave_col character string. Name column indicates wave. default \"wave\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of missing data at baseline — margot_prop_missing","text":"numeric value representing proportion missing data baseline wave.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_prop_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion of missing data at baseline — margot_prop_missing","text":"","code":"# Example using a dataset with a wave column # assume dat_long_amelia_log has a column called wave margot_prop_missing(dat_long_amelia_log) #> Error: object 'dat_long_amelia_log' not found  # Example using a dataset without a wave column # assume some_data is a dataset with no wave column margot_prop_missing(some_data) #> Error: object 'some_data' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"function creates propensity score model using specified exposure variable baseline covariates. also generates associated plots diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"","code":"margot_propensity_model_and_plots(   df_propensity,   exposure_variable,   baseline_vars,   weights_var_name,   estimand = \"ATE\",   method = \"ebal\",   focal = NULL,   love_plot_options = list(),   bal_tab_options = list(),   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"df_propensity data frame containing variables propensity score model. exposure_variable character string specifying name exposure variable df_propensity. baseline_vars character vector specifying names baseline covariates df_propensity. weights_var_name character string specifying name weights variable df_propensity. estimand character string specifying estimand. Default \"ATE\" (Average Treatment Effect). method character string specifying method propensity score estimation. Default \"ebal\". focal binary treatments, value treatment considered \"focal\" (.e., intervention). Default NULL. love_plot_options list options passed cobalt::love.plot(). Default empty list. bal_tab_options list options passed cobalt::bal.tab(). Default empty list. verbose logical value indicating whether print progress messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"list containing following elements: match_propensity: propensity score model object. love_plot: love plot object created cobalt::love.plot(). summary: summary propensity score model. summary_plot: plot propensity score model summary. balance_table: balance table created cobalt::bal.tab(). diagnostics: list additional diagnostic information.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_propensity_model_and_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Propensity Score Model and Associated Plots — margot_propensity_model_and_plots","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_propensity is your dataset with appropriate variables results <- margot_propensity_model_and_plots(   df_propensity = df_propensity,   exposure_variable = \"treatment\",   baseline_vars = c(\"age\", \"sex\", \"bmi\"),   weights_var_name = \"sample_weights\",   love_plot_options = list(     thresholds = c(m = .05),     size = 4   ),   bal_tab_options = list(     thresholds = c(m = .1, v = 2.5)   ),   verbose = TRUE )  # Access the results print(results$summary) plot(results$love_plot) print(results$balance_table) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Format RATE results into readable tables, keeping raw model names — margot_rate","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"Assemble two tables summarise rank-average treatment effect (RATE) estimates causal-forest models two targeting operating characteristics (TOC): **AUTOC** **Qini**.  table retains raw model names maps human-readable outcome labels appends 95% Wald confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"","code":"margot_rate(   models,   label_mapping = NULL,   remove_tx_prefix = TRUE,   remove_z_suffix = TRUE,   use_title_case = TRUE,   remove_underscores = TRUE,   round_digits = 3,   highlight_significant = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"models list returned `margot_multi_arm_causal_forest()` contains element `results`, named list model fits. label_mapping Named character vector mapping raw variable names presentation labels. remove_tx_prefix Logical. Drop leading `t0_` variable names? remove_z_suffix Logical. Drop trailing `_z` variable names? use_title_case Logical. Convert labels title case? remove_underscores Logical. Replace underscores spaces? round_digits Integer. Decimal places keep (default = 3). highlight_significant Logical. Bold labels whose 95 % CI entirely zero.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"named list two data frames rate_autoc Data frame columns     model, outcome, RATE Estimate,     Std Error, 2.5%, 97.5%. rate_qini Identical structure, estimated Qini weights.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"Outcome labels created `transform_var_name()`. Setting `highlight_significant = TRUE` wraps outcome label **bold** Markdown 95 % confidence interval lies strictly zero, making easy emphasise robust results Quarto R Markdown documents.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format RATE results into readable tables, keeping raw model names — margot_rate","text":"","code":"if (FALSE) { # \\dontrun{ rate <- margot_rate(my_models) knitr::kable(rate$rate_autoc) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate Policy Trees with Flipped Double Robust Scores — margot_recalculate_policy_trees","title":"Recalculate Policy Trees with Flipped Double Robust Scores — margot_recalculate_policy_trees","text":"function recalculates policy trees using flipped double robust scores outcomes processed margot_flip_forests.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate Policy Trees with Flipped Double Robust Scores — margot_recalculate_policy_trees","text":"","code":"margot_recalculate_policy_trees(   model_results,   outcomes_to_recalculate = NULL,   model_prefix = \"model_\",   verbose = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recalculate Policy Trees with Flipped Double Robust Scores — margot_recalculate_policy_trees","text":"model_results list containing model results running margot_flip_forests(). outcomes_to_recalculate character vector outcome names recalculate policy trees . NULL, recalculates outcomes marked needing recalculation. model_prefix character string indicating prefix used model names. Default \"model_\". verbose Logical indicating whether display detailed messages. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_recalculate_policy_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recalculate Policy Trees with Flipped Double Robust Scores — margot_recalculate_policy_trees","text":"updated copy model_results recalculated policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"function runs multiple GRF models specified outcome variables, calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections, depth-2 policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"","code":"margot_run_models_grf(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 15.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. tau_hats list tau.hat estimates model. tau_hat_plots list ggplot objects tau.hat histograms. rate_results list RATE results (compute_rate TRUE). dr_scores list double robust scores model. policy_trees list policy trees depth 1 model. not_missing vector indices complete cases. variable_importance_rankings list top n variables importance model, n specified top_n_vars. best_linear_projections list best linear projection results using top n variables model, n specified top_n_vars. policy_trees_depth_2 list policy trees depth 2 using top n variables model, n specified top_n_vars. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot Plot as PNG — margot_save_png","title":"Save Margot Plot as PNG — margot_save_png","text":"function takes output either `margot_plot()` `margot_plot_multi_arm()` saves plot PNG image using `ggsave()`. function saves plot object PNG image, supporting multiple plotting systems including ggplot2, base R plots, plotting libraries.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot Plot as PNG — margot_save_png","text":"","code":"margot_save_png(   plot_output,   prefix = NULL,   base_filename = \"plot\",   save_path = here::here(push_mods),   width = 12,   height = 12,   dpi = 500 )  margot_save_png(   plot_output,   prefix = NULL,   base_filename = \"plot\",   save_path = here::here(push_mods),   width = 12,   height = 12,   dpi = 500 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot Plot as PNG — margot_save_png","text":"plot_output Either plot object directly, list containing plot element. Supported plot types include ggplot objects, base R plot objects, others. prefix Character string. prefix add filename. Default NULL. base_filename Character string. base name saved file. Default \"plot\". save_path Character string. directory path image saved. Default ::(\"push_mods\"). width Numeric. width saved image inches. Default 16. height Numeric. height saved image inches. Default 8. dpi Numeric. resolution saved image dots per inch. Default 500.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot Plot as PNG — margot_save_png","text":"Invisibly returns path saved file. Invisibly returns path saved file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Margot Plot as PNG — margot_save_png","text":"function uses `ggsave()` save Margot plot PNG image. save_path directory exist, created. final filename constructed : `prefix_base_filename.png`. function handles different types plot objects saves PNG images: - ggplot2 objects: Uses ggsave() - plot types: Uses png() dev.() final filename constructed : `prefix_base_filename.png`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_save_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Margot Plot as PNG — margot_save_png","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have already run margot_plot() or margot_plot_multi_arm() plot_result <- margot_plot(your_data, your_options)  # Save the plot as PNG margot_save_png(   plot_result,   prefix = \"study1\",   base_filename = \"treatment_effects\",   save_path = here::here(\"output\", \"plots\") ) } # }  if (FALSE) { # \\dontrun{ # For a ggplot object plot_result <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point() margot_save_png(plot_result, prefix = \"study1\", base_filename = \"scatter\")  # For a base R plot plot_result <- plot(mtcars$mpg, mtcars$wt) margot_save_png(plot_result, prefix = \"study1\", base_filename = \"scatter\")  # For a list containing a plot plot_list <- list(plot = ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()) margot_save_png(plot_list, prefix = \"study1\", base_filename = \"scatter\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the size of an R object in megabytes — margot_size","title":"Calculate the size of an R object in megabytes — margot_size","text":"function takes R object returns size megabytes (MB). useful understanding memory footprint large data structures complex objects R environment. now includes cli alerts improved user feedback.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the size of an R object in megabytes — margot_size","text":"","code":"margot_size(obj, name = \"Object\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the size of an R object in megabytes — margot_size","text":"obj R object whose size want measure name optional name object (default \"Object\")","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the size of an R object in megabytes — margot_size","text":"character string representing size object MB,         formatted two decimal places","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the size of an R object in megabytes — margot_size","text":"KEY MESSAGE: Monitoring object sizes crucial efficient memory       management, especially working large datasets complex       analyses. Use function keep track memory usage optimize       R code better performance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the size of an R object in megabytes — margot_size","text":"","code":"big_matrix <- matrix(rnorm(1e6), nrow = 1000) margot_size(big_matrix, \"Big Matrix\") #> ℹ Big Matrix size: 7.63 MB #> [1] \"7.63 MB\"  summary_tables <- list(table1 = data.frame(a = 1:1000, b = rnorm(1000))) margot_size(summary_tables, \"Summary Tables\") #> ℹ Summary Tables size: 0.01 MB #> [1] \"0.01 MB\""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process Subset Models for Causal Forests — margot_subset_batch","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"compared treatment effects across multiple subsets derived causal forest models (using grf package). subset, number participants, total sample size, corresponding percentage computed, describing composition targeted subpopulation. addition, subset plot, interpretation, transformed table generated summarise causal effect estimates. Note exploratory comparisons causal forest analyses interpreted caution, subsetting targeted subpopulations may yield unstable treatment effect estimates, typically indicated large standard errors wide confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"","code":"margot_subset_batch(   model_results,   X,   base_defaults = list(),   title = \"\",   label_mapping = NULL,   subsets,   debug = FALSE,   original_df = NULL,   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"model_results Results causal forest model. X Covariate matrix. base_defaults list default plotting options. title character string main title plots. label_mapping named vector mapping variable names labels. subsets named list subset definitions. element list containing: var character string specifying variable subset . value value used define subset. operator (Optional) comparison operator (default \"==\"). subset_condition (Optional) pre-computed logical vector defining subset. description character string describing subset. label (Optional) user-friendly label subset. missing, list name used. debug Logical; TRUE, prints debugging information. original_df Optional data frame containing original (non-transformed) data back-transformation. ... Additional arguments passed margot_plot().","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process Subset Models for Causal Forests — margot_subset_batch","text":"list following elements: results list subset results, containing plot, interpretation, transformed table along sample statistics. summary data frame summarising sample size, total sample size, percentage subset. explanation character string providing comprehensive explanation subsetting process results model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"function extracts combines evaluation tables specified outcome variables model results, handling binary categorical exposure models. provides enhanced functionality creating analyzing subsets based various conditions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"","code":"margot_subset_model(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\",   contrast = NULL,   X = NULL,   subset_var = NULL,   subset_value = 1,   subset_operator = \"==\",   subset_description = NULL,   debug = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"model_results list model results `model_causal_forest` similar functions. outcome_vars Optional. character vector outcome variable names. NULL, function use models input. subset_condition logical vector indicating subset data use. Default NULL. Can generated using subset_var, subset_value, subset_operator parameters. scale character string indicating scale use. Default \"RD\". contrast categorical exposures, single character string specifying contrast extract. X Optional. feature matrix used original models. Required using subset_var. subset_var Optional. name variable use subsetting. subset_value Optional. value compare subsetting. Default 1. subset_operator Optional. operator use comparison (\"==\", \">\", \">=\", \"<\", \"<=\", \"!=\"). Default \"==\". subset_description Optional. description subset reporting. NULL, one generated. debug Logical. TRUE, print debug information. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"list containing: results data frame combining custom evaluation tables specified outcomes contrast. subset_condition logical vector used subsetting. subset_description description subset. subset_info Additional information subset, available.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"function can used two ways: 1. providing pre-computed logical vector `subset_condition`. 2. providing variable name (`subset_var`), value (`subset_value`), operator (`subset_operator`)    generate subset condition automatically. categorical exposures, specify contrast parameter extract specific comparisons.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Model Results for Binary and Categorical Exposures — margot_subset_model","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Basic subsetting with a pre-computed condition subset_condition_conservative <- X[, \"t0_political_conservative_z\"] > 1 model_subset_conservative <- margot_subset_model(   model_results = models_binary,   subset_condition = subset_condition_conservative,   debug = FALSE )  # Example 2: Using the built-in subsetting functionality model_subset_religious <- margot_subset_model(   model_results = models_binary,   X = X,   subset_var = \"t0_religion_bigger_denominations_not_rel_binary\",   subset_value = 1,   subset_description = \"Effects among religious participants\",   debug = TRUE )  # Example 3: For categorical exposures with specific contrast model_subset_gen_z <- margot_subset_model(   model_results = models_cat,   X = X,   subset_var = \"t0_gen_cohort_gen_Z_binary\",   subset_value = 1,   contrast = \"[6.0,7.0] - [1.0,5.0)\",   scale = \"RD\",   debug = FALSE )  # Example 4: Multiple outcome variables model_subset_boomers <- margot_subset_model(   model_results = models_binary,   outcome_vars = c(\"t2_wellbeing_z\", \"t2_depression_z\"),   X = X,   subset_var = \"t0_gen_cohort_gen_Boomers_binary\",   subset_value = 1,   subset_operator = \"==\",   subset_description = \"Effects among Baby Boomer participants\",   debug = TRUE )  # Example 5: More complex subsetting (multiple conditions) # Define a complex condition directly complex_condition <- X[, \"t0_political_conservative_z\"] > 1 & X[, \"t0_age_z\"] > -2 model_subset_complex <- margot_subset_model(   model_results = models_binary,   subset_condition = complex_condition,   subset_description = \"Conservative (>1 SD) and not very young (>-2 SD in age)\",   debug = FALSE ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function calculates new evaluation tables specified outcome variables using subset condition, combines single data frame. uses models generated `margot_run_models_grf` create tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"margot_subset_table_grf(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"model_results list model results `margot_run_models_grf`. outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. subset_condition logical vector indicating subset data use. Default NULL. scale character string indicating scale use `margot_model_evalue`. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"data frame combining custom evaluation tables specified subset condition.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function uses `margot_model_evalue` calculate evaluation metrics model subset data specified `subset_condition`. outcome_vars provided, attempt use outcome_vars model_results input (assuming output margot_run_models_grf). neither available, use models input.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"Ensure `model_results` list contains results specified `outcome_vars`, otherwise outcomes may omitted final table.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"if (FALSE) { # Assuming result_psychological_well_being is your results object from margot_run_models_grf subset_condition <- X[, \"t0_self_esteem_z\"] < 1 combined_table_subset <- margot_subset_table_grf(   model_results = result_psychological_well_being,   outcome_vars = NULL,   subset_condition = subset_condition,   scale = \"RD\" ) print(combined_table_subset) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"function computes difference average gains integrated difference reference curve (maq object) comparison curve specified spend level. returns list formatted strings easy use Quarto markdown text.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"","code":"margot_summary_cate_difference_gain(   mc_result,   outcome_var,   reference_curve,   comparison_curve,   spend,   digits = 3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"mc_result list containing results margot_multi_arm_causal_forest(). outcome_var character string specifying name outcome variable. reference_curve character string specifying name reference Qini curve (e.g., \"baseline\"). comparison_curve character string specifying name comparison Qini curve (e.g., \"arm2\"). spend numeric value specifying spend level (0 1). digits integer specifying number decimal places round output. Default 3.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"list containing formatted strings use Quarto markdown text: diff_gain Formatted string difference gains int_diff Formatted string integrated difference summary summary sentence comparison","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_cate_difference_gain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Gains and Integrated Difference Between Reference and Comparison Curves — margot_summary_cate_difference_gain","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming mc_result is the result of margot_multi_arm_causal_forest() result <- margot_summary_cate_difference_gain(mc_result,                                  outcome_var = \"model_Y\",                                  reference_curve = \"baseline\",                                  comparison_curve = \"arm2\",                                  spend = 0.3) # Use in text glue::glue(\"The difference in gains is {result$diff_gain}. {result$summary}\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Panel for Margot Study — margot_summary_panel","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"function creates summary tables panel study, including unique IDs wave, participant wave summary, grouped participant wave summary.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"","code":"margot_summary_panel(   data,   output_format = \"html\",   group_waves_at = 3,   id_col = \"id\",   wave_col = \"wave\",   year_measured_col = \"year_measured\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"data data frame containing panel study data. output_format Character string specifying output format: \"html\" (default) \"markdown\". group_waves_at Numeric value specifying number waves start grouping (default 3). id_col Character string specifying name ID column (default \"id\"). wave_col Character string specifying name wave column (default \"wave\"). year_measured_col Character string specifying name year measured column (default \"year_measured\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"list containing three elements: unique_ids_by_wave, participant_wave_summary, participant_wave_summary_grouped.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Summary Panel for Margot Study — margot_summary_panel","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'dat' is your dataset results <- margot_summary_panel(dat)  # Custom settings custom_results <- margot_summary_panel(   data = dat,   output_format = \"markdown\",   group_waves_at = 4,   id_col = \"participant_id\",   wave_col = \"survey_wave\",   year_measured_col = \"measurement_year\" )  # View results results$unique_ids_by_wave results$participant_wave_summary results$participant_wave_summary_grouped  # For markdown output cat(custom_results$unique_ids_by_wave) cat(custom_results$participant_wave_summary) cat(custom_results$participant_wave_summary_grouped) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary tables and plots for longitudinal data — margot_summary_tables","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"Generate summary tables plots longitudinal data","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"","code":"margot_summary_tables(   data,   baseline_wave,   exposure_waves,   outcome_wave,   name_exposure,   name_exposure_cat = NULL,   baseline_vars = NULL,   outcome_vars = NULL,   extra_vars = c(\"id\", \"wave\", \"year_measured\", \"not_lost\", \"sample_weights\"),   baseline_labels = NULL,   exposure_labels = NULL,   outcome_labels = NULL,   create_plots = FALSE,   plot_type = \"boxplot\",   show_progress = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"data data frame containing longitudinal data baseline_wave wave number baseline measurements exposure_waves vector wave numbers exposure measurements outcome_wave wave number outcome measurements name_exposure name exposure variable name_exposure_cat name categorical exposure variable (optional) baseline_vars vector baseline variable names outcome_vars vector outcome variable names extra_vars vector additional variable names (default: c(\"id\", \"wave\", \"year_measured\", \"not_lost\", \"sample_weights\")) baseline_labels named vector labels baseline variables (optional) exposure_labels named vector labels exposure variables (optional) outcome_labels named vector labels outcome variables (optional) create_plots Logical, whether create plots (default: FALSE) plot_type type plot create (\"boxplot\" \"density\", default: \"boxplot\") show_progress Logical, whether show progress bar (default: TRUE)","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_summary_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary tables and plots for longitudinal data — margot_summary_tables","text":"list containing summary tables, information, optional plots","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"margot_tab_lmtp(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"# Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_tab_lmtp(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) #> Error in eval(expr, envir, enclos): object 'contrast_hours_charity_z_null' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"Reshapes long‑format transition frequency data frame wide‑format table totals, formats using markdown. Diagonal elements bolded highlight state stability.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"","code":"margot_transition_table(   data,   state_var,   id_var,   wave_var,   waves = NULL,   state_names = NULL,   observed_var = NULL,   observed_val = 1,   table_name = \"transition_table\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"data data frame containing id, state, wave, (optionally) observed indicator. state_var name column indicating state wave. id_var name column identifying participant. wave_var name column indicating wave (numeric factor). waves optional numeric vector waves include (defaults present data). state_names optional character vector labels state. observed_var optional name column marking participants still observed. observed_val value observed_var denotes “observed” (default 1). table_name name output object (default \"transition_table\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Transition Table with observed‑indicator filtering — margot_transition_table","text":"object class margot_transitions   tables, explanation, wave_info,   quarto_code helper.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with labels — margot_wide","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labelled included. handles multiple observations per subject across different waves, allows specification baseline variables, exposure variables, outcome variables. ensures specified variables included resulting wide-format data frame, columns prefixed time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with labels — margot_wide","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names included t0. exposure_var character vector exposure variable names tracked across time. outcome_vars character vector outcome variable names tracked across time.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"wide-format data frame subject's observations across time points         represented single row, variables prefixed respective         time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"# defining variables as per the function's documentation baseline_vars <- c(   \"male\", \"age\",  \"eth_cat\",   \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",   \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- c(\"forgiveness\")  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",   \"hlth_bmi\", \"hours_exercise\" )  # df_nz is a synthetic dataset included in this package # wide_data <- margot_wide(df_nz, baseline_vars, exposure_var, outcome_vars) # print(wide_data)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"function transforms longitudinal data wide format performs imputation baseline variables. leverages `mice` package imputation, ensuring missing baseline data appropriately handled. function arranges data participant id time, filters based time conditions, reshapes data wide format. Imputed data merged back, maintaining structure suitable analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":".data dataframe containing longitudinal data. baseline_vars character vector baseline variable names include impute necessary. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"# df_nz is a synthetic dataset included in this package data(df_nz, package = \"margot\")  df_nz <- data.frame(df_nz) wide_data_imputed <- margot_wide_impute_baseline(df_nz,   baseline_vars = c(\"age\", \"male\", \"religion_believe_god\"),   exposure_var = (\"forgiveness\"),   outcome_vars = (\"kessler_latent_anxiety\")   ) #>  #>  iter imp variable #>   1   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   2   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   3   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   4   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   5   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labeled included. handles multiple observations per subject across indefinite number waves, allows specification baseline variables, exposure variables, outcome variables, time-varying confounders.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":"","code":"margot_wide_machine(   .data,   id = \"id\",   wave = \"wave\",   baseline_vars,   exposure_var,   outcome_vars,   confounder_vars = NULL,   imputation_method = \"median\",   include_exposure_var_baseline = TRUE,   include_outcome_vars_baseline = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":".data data frame containing longitudinal data long format. id name ID column identifying subjects (default \"id\"). wave name wave/time column (default \"wave\"). baseline_vars character vector baseline variable names included t0. exposure_var character string specifying name exposure variable tracked across time. outcome_vars character vector outcome variable names tracked across time. confounder_vars optional character vector time-varying confounder variable names include without imputation (default NULL). imputation_method character string specifying imputation method use baseline variables. Options 'median' (default), 'mice', 'none'. include_exposure_var_baseline Logical indicating whether include exposure variable baseline (t0). include_outcome_vars_baseline Logical indicating whether include outcome variables baseline (t0).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":"wide-format data frame subject's observations across time points         represented single row. Baseline variables, exposure variables baseline,         outcome variables baseline (included) missing values imputed specified.         NA indicators created variables baseline missing values.         Exposure variables tracked across waves imputed beyond baseline.         Outcome variables included final wave         unless `include_outcome_vars_baseline` `TRUE`. Confounders () included without imputation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":"Key functionalities: - **Imputation Baseline**: Missing values imputed baseline (`t0`) :   - `baseline_vars`   - `exposure_var` (`include_exposure_var_baseline = TRUE`)   - `outcome_vars` (`include_outcome_vars_baseline = TRUE`)   - 'median': numeric variables, missing values imputed median.     categorical variables, missing values imputed mode.   - 'mice': Multiple Imputation Chained Equations used.     MICE fails, function falls back median/mode imputation.   - 'none': imputation performed. - **NA Indicators**: NA indicator variables created **** baseline variables   missing values. variable baseline corresponding   NA indicator suffix `_na`. - **Exposure Variables**: Tracked across waves never imputed beyond baseline. - **Outcome Variables**: Included final wave unless specified include baseline. - **Confounder Variables**: specified, included across waves without imputation.   Missing values remain `NA`. - **Variable Inclusion per Wave**:   - **Baseline (`t0`)**: Includes `baseline_vars`, exposure variables (included), outcome variables (included), NA indicators (necessary).   - **Waves `t1` `t(y_-2)`**: Include exposure variables (confounders specified).   - **Final Wave (`t(y_-1)`)**: Includes outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_machine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format with baseline imputation and NA indicators — margot_wide_machine","text":"","code":"# Define variables baseline_vars <- c(\"age\", \"education\", \"income\") exposure_var <- \"treatment\" outcome_vars <- c(\"health_score\", \"quality_of_life\") confounder_vars <- c(\"stress_level\", \"exercise_frequency\")  # Transform data to wide format with baseline imputation df_wide_impute <- margot_wide_machine(   data_long,   id = \"patient_id\",   wave = \"visit_time\",   baseline_vars = baseline_vars,   exposure_var = exposure_var,   outcome_vars = outcome_vars,   confounder_vars = confounder_vars,   imputation_method = \"mice\",   include_exposure_var_baseline = TRUE,   include_outcome_vars_baseline = TRUE ) #> ℹ starting data transformation... #> ℹ pre-processing data... #> Error: object 'data_long' not found"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":null,"dir":"Reference","previous_headings":"","what":"General Matching Function for Multiple Imputation Data — match_mi_general","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"function facilitates propensity score matching datasets, including generated multiple imputation, assess covariate balance across treatment groups. leverages WeightIt MatchThem packages calculate propensity scores apply matching techniques. Users referred packages detailed methodological specifications additional functionality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"match_mi_general(   data,   X,   baseline_vars,   estimand,   method,   subgroup = NULL,   focal = NULL,   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"data data frame 'mids' object containing data matching. X string naming treatment exposure variable within `data`. baseline_vars character vector naming covariates include propensity score model. estimand string specifying target estimand ('ATE', 'ATT', 'ATC'). method method estimating propensity scores, per WeightIt package's documentation. subgroup (Optional) string specifying variable subgroup data within-group matching. focal (Optional) Specifies focal treatment group, useful 'ATT' 'ATC' estimands. sample_weights (Optional) string indicating variable `data` representing sample weights. stabilize Logical. Indicates whether stabilize weights, defaulting TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"list matched datasets subgroup level (`subgroup` used)   single matched dataset. element typically data frame object   reflecting matched data structure, depending matching method applied.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"Detailed methodology additional options can found : - WeightIt package propensity score estimation. - MatchThem package matching within imputed datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"if (FALSE) { # \\dontrun{ # Assume `df` is a data frame with treatment, covariates, and sample weights matched_data <- match_mi_general(data = df,                                  X = \"treatment_var\",                                  baseline_vars = c(\"covariate1\", \"covariate2\"),                                  estimand = \"ATE\",                                  method = \"nearest\",                                  stabilize = TRUE) } # }"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"plot_rank_average_treatment_effect(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for Margot plot — prepare_margot_plot_data","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"Prepare data Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"","code":"prepare_margot_plot_data(   .data,   type,   order,   options,   label_mapping,   original_df )"},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":".data Input data frame type Type effect (RD RR) order Ordering method options Options list label_mapping Label mapping list original_df Original data frame back-transformation","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_margot_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for Margot plot — prepare_margot_plot_data","text":"Prepared data frame","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"function prepares panel data timeline visualization across multiple waves.","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"","code":"prepare_panel_data(   dat,   wave_col = \"wave\",   tscore_col = \"tscore\",   id_col = \"id\",   base_date = as.Date(\"1970-01-01\"),   wave_breaks = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"dat data frame containing panel data. Must include columns wave, time score, participant ID. wave_col name column containing wave information. Default \"wave\". tscore_col name column containing time score information. Default \"tscore\". id_col name column containing participant IDs. Default \"id\". base_date base date calculating timeline. Default \"1970-01-01\". wave_breaks named list date ranges wave. NULL, waves categorized.","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"list containing two elements: df_timeline data frame processed timeline data n_total_participants total number unique participants dataset","code":""},{"path":"https://go-bayes.github.io/margot/reference/prepare_panel_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Panel Data for Timeline Visualization — prepare_panel_data","text":"","code":"if (FALSE) { # \\dontrun{ dat <- read.csv(\"panel_data.csv\") wave_breaks <- list(   \"wave 1\" = c(as.Date(\"2010-01-01\"), as.Date(\"2010-12-31\")),   \"wave 2\" = c(as.Date(\"2011-01-01\"), as.Date(\"2011-12-31\")) ) prepared_data <- prepare_panel_data(dat, wave_col = \"Wave\", tscore_col = \"TimeScore\",                                     id_col = \"ParticipantID\", base_date = \"2010-01-01\",                                     wave_breaks = wave_breaks) } # }"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numbers with Commas — pretty_number","title":"Format Numbers with Commas — pretty_number","text":"function takes numeric vector formats inserting commas thousands separators, making large numbers easier read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numbers with Commas — pretty_number","text":"","code":"pretty_number(x)"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numbers with Commas — pretty_number","text":"x numeric vector want format.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numbers with Commas — pretty_number","text":"character vector number formatted commas thousands separators.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numbers with Commas — pretty_number","text":"","code":"numbers <- c(1000, 50000, 1234567) pretty_number(numbers) #> [1] \"1,000\"     \"50,000\"    \"1,234,567\""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Multiple Images from a Folder — read_multiple_images","title":"Read Multiple Images from a Folder — read_multiple_images","text":"function reads multiple images specified folder returns list magick image objects. uses `` package path handling, `magick` image reading, `stringr` string manipulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Multiple Images from a Folder — read_multiple_images","text":"","code":"read_multiple_images(path_multi_plots, pattern = \"policy_tree_plot\\\\.png$\")"},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Multiple Images from a Folder — read_multiple_images","text":"path_multi_plots Character string specifying path folder containing images, relative project root. pattern Character string specifying pattern match filenames. Default \"policy_tree_plot\\.png$\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Multiple Images from a Folder — read_multiple_images","text":"named list magick image objects.","code":""},{"path":"https://go-bayes.github.io/margot/reference/read_multiple_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Multiple Images from a Folder — read_multiple_images","text":"","code":"if (FALSE) { # \\dontrun{ path_multi_plots <- \"plots\" policy_tree_plots <- read_multiple_images(path_multi_plots, \"policy_tree_plot\\\\.png$\") qini_plots <- read_multiple_images(path_multi_plots, \"qini_plot\\\\.png$\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Regression with Covariates — regress_with_covariates","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"unitility function performs generalized linear regression specified dataset using outcome variable, exposure variable, set baseline covariates. default, function uses Gaussian family (linear regression), allows specifying families generalized linear models (GLM).","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"regress_with_covariates(   data,   outcome,   exposure,   baseline_vars,   family = gaussian(),   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"data data frame containing variables analysis. outcome character string specifying name outcome variable data frame. exposure character string specifying name main exposure variable data frame. baseline_vars character vector specifying names baseline covariates include model addition exposure variable. family family object character string naming family (default gaussian(), performs linear regression). parameter determines error distribution link function used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"object class glm representing fitted model, includes coefficients, residuals, model diagnostics. object can analyzed using standard methods GLM objects, summary() model summaries anova() analysis variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"function constructs model formula using outcome, exposure, baseline variables. fits generalized linear model using formula. baseline variables filtered exclude outcome exposure variables model fitting. function prints formula used regression analysis verification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"if (FALSE) { # \\dontrun{ # using `df_nz` is your data frame with \"income\" as the continuous outcome variable, # \"age\" as an exposure variable, and other covariates outcome_var <- \"income\" exposure_var <- \"age\" baseline_vars <- c(\"age\", \"education\", \"partner\") model <- regress_with_covariates(df_nz, outcome_var, exposure_var, baseline_vars, family =  gaussian()) summary(model) } # }"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"Iterates column provided data frame. column numeric attributes, function removes attributes converting column basic numeric vector. particularly useful cleaning data frames operations may add undesired attributes numeric columns, aggregations merges.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"remove_numeric_attributes(df)"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"df `data.frame` object attributes numeric columns removed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"`data.frame` attributes removed numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"df <- data.frame(a = I(1:3), b = c(\"x\", \"y\", \"z\"), c = I(rnorm(3))) cleaned_df <- remove_numeric_attributes(df) str(cleaned_df) #> 'data.frame':\t3 obs. of  3 variables: #>  $ a: 'AsIs' int  1 2 3 #>  $ b: chr  \"x\" \"y\" \"z\" #>  $ c: 'AsIs' num  0.034706.... -0.15608.... 0.773227...."},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Simulations for Estimating ATE — run_simulations","title":"Run Simulations for Estimating ATE — run_simulations","text":"function simulates data estimates Average Treatment Effect (ATE) using different methods specified causal model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Simulations for Estimating ATE — run_simulations","text":"","code":"run_simulations(   num_simulations,   N,   prob_L1,   A_on_Y,   L_on_A,   L_on_Y,   method = \"ps\" )"},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Simulations for Estimating ATE — run_simulations","text":"num_simulations Integer, number simulations run. N Integer, sample size simulation. prob_L1 Double, probability parameter generating L1. A_on_Y Double, effect size Y. L_on_A Double, effect size L . L_on_Y Double, effect size L Y. method Character, method IPTW DR adjustment (\"ps\" ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Simulations for Estimating ATE — run_simulations","text":"tibble containing estimated ATEs confidence intervals method.","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Margot plot output — save_margot_output","title":"Save Margot plot output — save_margot_output","text":"Save Margot plot output","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Margot plot output — save_margot_output","text":"","code":"save_margot_output(output, use_timestamp, base_filename, prefix, save_path)"},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Margot plot output — save_margot_output","text":"output Complete output save use_timestamp Whether include timestamp filename base_filename Base filename prefix Optional filename prefix save_path Directory save ","code":""},{"path":"https://go-bayes.github.io/margot/reference/save_margot_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Margot plot output — save_margot_output","text":"return value","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Rename Columns Based on Criteria — select_and_rename_cols","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"Selects columns base set match specified baseline variables renames outcome variable changing prefix. Useful longitudinal data time-point prefixes need standardised adjusted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"select_and_rename_cols(   names_base,   baseline_vars,   outcome,   from_prefix = \"t2\",   to_prefix = \"t0\" )"},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"names_base character vector column names select. baseline_vars character vector baseline variables match `names_base`. outcome name outcome variable whose prefix replaced. from_prefix original prefix outcome variable replaced, defaulting \"t2\". prefix include character immediately preceding numeric value underscore, e.g., \"t2_\". to_prefix new prefix replace original prefix outcome variable, defaulting \"t0\". prefix format `from_prefix`, including character immediately preceding numeric value underscore, e.g., \"t0_\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"character vector selected column names outcome variable name   modified reflect new prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"names_base <- c(\"t0_age\", \"t0_weight\", \"t0_height\", \"t0_outcome\") baseline_vars <- c(\"age\", \"weight\") outcome_var <- \"t2_outcome\"  final_columns <- select_and_rename_cols(names_base, baseline_vars, outcome_var, \"t2\", \"t0\") print(final_columns) #> [1] \"t0_age\"     \"t0_weight\"  \"t0_outcome\""},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup options for Margot plot — setup_margot_plot_options","title":"Setup options for Margot plot — setup_margot_plot_options","text":"Setup options Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup options for Margot plot — setup_margot_plot_options","text":"","code":"setup_margot_plot_options(options, ...)"},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup options for Margot plot — setup_margot_plot_options","text":"options User-provided options list ... Additional parameters included options","code":""},{"path":"https://go-bayes.github.io/margot/reference/setup_margot_plot_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup options for Margot plot — setup_margot_plot_options","text":"Merged options list","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"Generates simulated data sample population study average treatment effects (ATE), considering presence effect modifier. function simulates differences distribution effect modifiers sample population without altering treatment effect effect-modification. Weights calculated adjust distribution differences effect modifier sample population.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 1e+05,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   beta_az = 0.5,   noise_sd = 0.5,   seed = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"n_sample Integer, size sample. Default 10000. n_population Integer, size population. Default 100000. p_z_sample Numeric, probability effect modifier sample. Default 0.1. p_z_population Numeric, probability effect modifier population. Default 0.5. beta_a Numeric, treatment effect. Default 1. beta_z Numeric, coefficient effect modifier. Default 2.5. beta_az Numeric, interaction term representing effect modification treatment effect modifier. Default 0.5. noise_sd Numeric, standard deviation noise outcome variable. Default 0.5. seed Optional. integer value setting seed ensure reproducibility. Default `NULL`, set seed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"list containing two data frames: `sample_data` `population_data`, comprising outcome variable `y`, treatment variable ``, effect modifier `z`. `sample_data` data frame also includes calculated weights observation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"data <- simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 100000,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   noise_sd = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"function processes wide-format longitudinal data multiple time points. wrapper around internal function `.strict_exposure_outcome_censoring`. See internal function documentation details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"","code":"strict_exposure_outcome_censoring(   df_wide,   exposure_vars,   ordinal_columns = NULL,   continuous_columns_keep = NULL,   scale_exposure = FALSE,   not_lost_in_following_wave = \"not_lost_following_wave\",   lost_in_following_wave = \"lost_following_wave\",   remove_selected_columns = TRUE,   time_point_prefixes = NULL,   time_point_regex = NULL,   save_observed_y = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"df_wide wide-format dataframe columns like t0_X, t1_X, t2_X, etc. exposure_vars Character vector exposure names (e.g. c(\"aaron_antagonism\", \"aaron_disinhibition\", ...)). ordinal_columns Character vector ordinal (factor) variables dummy-coded. continuous_columns_keep Numeric columns want scale (e.g. must remain original units). scale_exposure FALSE, scale exposures; TRUE, exposures also scaled. not_lost_in_following_wave Name \"lost\" indicator (default \"not_lost_following_wave\"). lost_in_following_wave Name \"lost\" indicator (default \"lost_following_wave\"). remove_selected_columns TRUE, remove original columns dummy-coding ordinal columns. time_point_prefixes Optional vector wave prefixes (like c(\"t0\",\"t1\",\"t2\")); NULL, auto-detect via regex. time_point_regex Regex used detect wave prefixes `time_point_prefixes` NULL. save_observed_y FALSE, set missing final-wave outcomes NA. TRUE, keep partial final-wave outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/strict_exposure_outcome_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strict All-or-Nothing Censoring for Longitudinal Data — strict_exposure_outcome_censoring","text":"processed dataframe, strict --nothing censoring","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"function processes simulation results tabulate marginal effects along E-values, providing summary suited reporting. supports risk difference (RD) risk ratio (RR) types estimates handles continuous categorical treatment variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"tab_engine_marginal(   x,   new_name,   delta = 1,   sd = 1,   type = c(\"RD\", \"RR\"),   continuous_X = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"x data frame matrix containing simulation results processed. new_name new name assign output row, typically describing variable model. delta assumed smallest worthwhile effect, used E-value calculations. sd standard deviation effect estimate, used E-value calculations. type Character vector specifying scale effect size, either \"RD\" \"RR\". parameter determines effects calculated presented. continuous_X Logical indicating whether treatment variable X continuous. TRUE, adjusts row names based type parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"data frame specified new_name row name. data frame includes         effect estimates, confidence intervals, E-values, relevant statistics formatted         easy reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"# Assuming you have results from a simulation or model in `results_df` tabulated_results <- tab_engine_marginal(x = results_df,                                          new_name = \"Treatment Effect\",                                          delta = 1,                                          sd = 0.2,                                          type = \"RD\")  # Corrected 'scale' to 'type' #> Error in tab_engine_marginal(x = results_df, new_name = \"Treatment Effect\",     delta = 1, sd = 0.2, type = \"RD\"): could not find function \"tab_engine_marginal\""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Table Row Names with CLI Feedback — transform_table_rownames","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"function transforms row names data frame based specified criteria provides CLI feedback changes made.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"","code":"transform_table_rownames(df, label_mapping = NULL, options = list())"},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"df data frame whose row names transformed. remove_tx_prefix Logical. TRUE, removes 't' followed numbers underscore start row names. remove_z_suffix Logical. TRUE, removes '_z' end row names. use_title_case Logical. TRUE, converts row names title case. remove_underscores Logical. TRUE, replaces underscores spaces row names.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"data frame transformed row names.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"function applies following transformations order: 1. Removes 't' followed numbers underscore start (remove_tx_prefix TRUE) 2. Removes '_z' end (remove_z_suffix TRUE) 3. Replaces underscores spaces (remove_underscores TRUE) 4. Converts title case (use_title_case TRUE) function provides CLI feedback change made summary transformation process.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_table_rownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Table Row Names with CLI Feedback — transform_table_rownames","text":"","code":"df <- data.frame(x = 1:3, row.names = c(\"t1_variable_z\", \"t2_another_var\", \"last_variable\")) transformed_df <- transform_table_rownames(df) #> Error in transform_table_rownames(df): could not find function \"transform_table_rownames\""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Z-Score Results to Original Scale — transform_to_original_scale","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"function takes dataframe z-score results transforms back original scale using standard deviations original dataset. particularly useful interpreting causal contrasts calculated z-transformed data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"","code":"transform_to_original_scale(results_df, original_df, label_mapping = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"results_df dataframe containing z-score results. original_df dataframe containing original (non-transformed) data. Column names match results_df mappable via label_mapping. label_mapping optional named list mapping row names results_df column names original_df. Use names match exactly.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transform_to_original_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Z-Score Results to Original Scale — transform_to_original_scale","text":"dataframe similar results_df, additional columns back-transformed   estimates confidence intervals (suffixed \"_original\").","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Table — transition_table","title":"Transition Table — transition_table","text":"Generates transition table describes movements stability states one observation next. formats output markdown table, highlighting number entities remaining state (diagonal) transitioning different states (-diagonal).","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Table — transition_table","text":"","code":"transition_table(   trans_df,   state_names = NULL,   wave_info = NULL,   table_name = \"transition_table\" )  transition_table(   trans_df,   state_names = NULL,   wave_info = NULL,   table_name = \"transition_table\" )"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Table — transition_table","text":"state_names Optional; vector state names replace default state labels. NULL, states labeled \"State 1\", \"State 2\", etc., based unique values `` `` columns. data data frame columns `` `` indicating initial subsequent states entities, respectively, `Freq` column indicating frequency transitions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Table — transition_table","text":"list two elements: `explanation`, character string explaining table, `table`, markdown-formatted table transitions. diagonal entries (bold) represent count entities remained initial state, -diagonal entries show count transitions different states.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Transition Table — transition_table","text":"transition_table(): helper format single transition data frame","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate input for Margot plot — validate_margot_plot_input","title":"Validate input for Margot plot — validate_margot_plot_input","text":"Validate input Margot plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate input for Margot plot — validate_margot_plot_input","text":"","code":"validate_margot_plot_input(.data)"},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate input for Margot plot — validate_margot_plot_input","text":".data Input data frame","code":""},{"path":"https://go-bayes.github.io/margot/reference/validate_margot_plot_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate input for Margot plot — validate_margot_plot_input","text":"return, throws error invalid","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-21","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-29] margot 1.0.21","text":"margot_plot_rate_batch() user can pass specific model names margot_rate_comparision() outputs correct model names (never statistically significant negative results.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-20","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-28] margot 1.0.20","text":"margot_rate(), margot_rate_interpret() now output model names reliable result estimates.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-19","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.19","text":"margot_bind_table() flexibly modify column names margot_plot() - added options transform colname estimand “ATE”, also E_value colnames. margot_interpret_marginal() group_tab() now return order consistent plot margot_interpret_rate() better language, margot_interpret_rate_comparison() now helper (exported). margot_plot_policy_tree() margot_policy now defaults shading regions interest.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-18","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.18","text":"margot_log_transform_vars() handles edge cases better (1) requiring numeric input (2) requiring NAs.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-18-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-21] margot 1.0.18","text":"margot_plot_categorical() robust wider range data values","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-17","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-20] margot 1.0.17","text":"margot_lmtp_tab() – fixes breaking change introduced lmtp v1.50","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-16","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-20] margot 1.0.16","text":"margot_transition_table() – allows filtering observation/censoring variable, can useful data entirely missing certain waves. margot_bind_tables() – correct output retaining outcome names margot_impute_carry_forward() – better error handling/ observation seen year, may impute forward.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-19] margot 1.0.15","text":"margot_interpret_marginal() - clearer wording, outcomes listed rather dull sentences.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-19] margot 1.0.14","text":"margot_bind_tables() additional parameter, sort_E_val_bound = c(\"none\", \"asc\", \"desc\"), allows users order multiple tables E_value thresholds. fixed multiple functions get assending order margot_plot(), margot_plot(), group_tab(), margot_interpret_marginal() transform_label(), transform_table_rownames() – removing stray transform_label() label functions various functions. transform_table_rownames() now internal.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-10] margot 1.0.13","text":"margot_bind_tables() streamlined function focusing markdown LaTeX outputs. reduced dependencies eliminating reliance dplyr, stringr, cli packages. enhanced markdown output bold variable names better readability, improved LaTeX output better multi-page support alternating row colors, maintained core functionality. margot_omnibus_hetero_test() - considerably improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-10] margot 1.0.12","text":"margot_bind_models() now bolds reliable results markdown margot_interpret_rate() margot_interpret_rate_comparison() accurate reporting deal edge cases (RATE reliable) better.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-1-0-11","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-04-09] margot 1.0.11","text":"margot_bind_models() - bind model outputs (currently implemented batch caual forest models) margot_interprete_rate_comparison() compare qini auto RATE estimates, also called margot_interpret_rate() margot_bind_tables() - better markdown","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-09] margot 1.0.11","text":"margot_interpret_rate() combines qini rate estimates. margot_rate() output better worded, still reate “rate_result” backward compatibility; table highlight “significant” RATE positive. margot_interpret_qini() - better outputs","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.10","text":"margot_causal_forest() consistent use training proportion rather mixing training/test.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.9","text":"margot_causal_forest() reverted –enhancements failing","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.8","text":"margot_causal_forest() added checks","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.7","text":"margot_plot_decision_tree(), margot_plot_policy_tree() – enhancements","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-7-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-07] margot 1.0.7","text":"margot_interpret_qini() language improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.6","text":"margot_interpret_policy_tree() language improved clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.5","text":"margot_interpret_qini() margot_interpret_rate() margot_interpret_qini() aggressive error handlings","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.4","text":"margot_interpret_qini() margot_interpret_rate() even better LaTeX.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.3","text":"margot_interpret_qini() margot_interpret_rate() play better LaTeX. Use “statistically reliable” place statistically significant.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-06] margot 1.0.2","text":"margot_interpret_qini() margot_interpret_rate() improved warnings negative estimates","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-1-0-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2025-04-06] margot 1.0.1","text":"restored accidentally deleted helpers margot_omnibus_hetero_test() now works ","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-1-0-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-04-05] margot 1.0.0","text":"now using semantic versioning. margot_omnibus_hetero_test now label mapping","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-26] margot 0.3.3.3","text":"margot_censor() - explicit call ‘cli’ avoid conflict crayon create_ordered_variable() - removed crayon margot_summary_tables_cat() - deleted experimental table margot_log_transform_vars() removed crayon, made function calls explicit, removed require packages. margot_summary_tables() - remove require explicit function calls now. causal_contrast_engine() - refactored - removes require margot_wide_machine() - removes require margot_wide() - removes require","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-26] margot 0.3.3.2","text":"margot_causal_forest(): now default honest splitting computing qini curves. margot_plot_categorical(): fixed error handling binary variables. margot_bind_tables() - nicer printout, user can change column names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-22] margot 0.3.3.1","text":"margot_causal_forest()- correct calculation qini ate (reverted older function)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-3-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.3.0","text":"margot_causal_forest()- refactored save qini_data qini_objects model. (working ). margot_multi_arm_causal_forest() - refactored.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.9","text":"margot_causal_forest() now passes doubly robust scores policy decision trees. now compute policy trees using doubly robust (DR) scores  rather previous IPW-based approach. DR scores combine outcome propensity estimates, yielding improved statistical power efficient estimation treatment effects. change backward compatible – modifications user code required – note printed execution indicating DR scores used.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.8","text":"margot_interpret_qini() prints economical explanation, giving explanations reliable results.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-21] margot 0.3.2.7","text":"margot_bind_tables(): binds results multiple -comewide studies one table","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-21] margot 0.3.2.6","text":"margot_planned_subgroups_batch() – batch batched analysis planned subgroups analysis causal forests (time-saver). backtransform_log_z() utility function backtranform scores logged values original data values.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.6","text":"margot_subset_batch() now working complex conditions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-21] margot 0.3.2.5","text":"margot_process_binary(): variable already ends “_binary” processed binary. Also removed dependency color package. coloured_histogram_shift()… deprecated functions longer exported maintained. margot_plot_shift() - improved print mean value also show +/- sd distribution margot_causal_forest() - default parameter 0.5 training.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.4","text":"margot_subset_batch() - now correctly passes parameters required margot_plot(). margot_plot() - default now: interpret_all_E_gt1 = TRUE (results non-null Evalues reported).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.3","text":"margot_subset_batch() - now exports plots explanations submodels models (causal forests).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-19] margot 0.3.2.2","text":"margot_subset_batch() batch process subsetted models (causal forests) margot_plot_rate_batch() replaces margot_plot_batch_rate(), deprecated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.2","text":"margot_subset_model() - streamlined","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.1","text":"group_tab() now helper functions margot_plot() reverted remove errors. margot_compare_groups(), margot_interpret_qini() removed redundant function.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-2-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-19] margot 0.3.2.0","text":"added .strict_exposure_outcome_censoring() helper function strict dyadic censoring – now encompassed margot_process_longitudinal_data_wider() added backward compatibility.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-2-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-19] margot 0.3.2.0","text":"coloured_histogram(), margot_impute_carry_forward(), margot_process_longitudinal_data_wider(), margot_lmtp_evalue(),margot_plot_batch_rate(), margot_plot_boxplot(), margot_plot_boxplot_covariate(), margot_plot_discontinuity(), margot_plot_histogram(), margot_plot_slope_covariate_batch(), margot_plot_slope_covariate_combo(), margot_plot_slope_covariate(), margot_plot_slope(), margot_plot_individual_responses(), margot_wide_machine(), margot_process_longitudinal_data(), margot_count_dyads(), margot_count_ids() correct package calls, explicit namespace calls. group_tab() function re-factored margot_interpret_marginal() corrected order & small improvements margot_plot() function refactored clarity.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-18] margot 0.3.1.9","text":"here_save() removed call base R here_read() removed call base R margot_combine_results() - made helper function margot_summary_panel() - specified functions required margot_censor() - specified functions required data.table (#’ @importFrom data.table .data.table copy set get uniqueN) read_multiple_images() - made internal margot_wide_machine() - stated explicit functions dependencies (removed zoo) margot_interpret_qini() - improved reporting margot_policy() - now allows subsetting specific models margot_interpret_policy_batch() - now allows subsetting specific models margot_causal_forest() - added roxygen code (forgotten last update).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-1-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-17] margot 0.3.1.8","text":"margot_rate() produce table RATE estimates batched processed causal forests. margot_flip_forests() interpreting effect benefitial may need invert outcomes. function already processed models. margot_interpret_rate() provides automated reporting rate outputs, allowing users specify whether AUTOC QINI targeted.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-17] margot 0.3.1.8","text":"margot_causal_forest() - now also computes RATE targeting QINI selected.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-15] margot 0.3.1.7","text":"create_ordered_variable() appends “_binary” binary variables made margot_transition_table() user may specify table name. margot_process_longitudinal_wider() new parameters continuous vars scaled","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-14] margot 0.3.1.6","text":"margot_interpret_marginal() made robust units given input model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-13] margot 0.3.1.5","text":"margot_compute_gender_weights_by_wave() actually added (omitted accident 0.3.1.4).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-12] margot 0.3.1.4","text":"margot_compute_gender_weights_by_wave() correctly assigns weights target population, specified target_wave parameters.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-03-12] margot 0.3.1.3","text":"margot_censor(): censoring conditional condition wave: 𝚌𝚎𝚗𝚜𝚘𝚛_𝚏𝚒𝚗𝚊𝚕_𝚠𝚊𝚟𝚎 = 𝙵𝙰𝙻𝚂𝙴\\texttt{censor_final_wave = FALSE} rows final wave (determined 𝚖𝚊𝚡(𝚍𝚝[[𝚠𝚊𝚟𝚎_𝚟𝚊𝚛]])\\texttt{max(dt[[wave_var]])}) preserved (default behaviour). allows estimating per-protocal effect changing censoring condition part causal effect intervention population baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-1-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-03-05] margot 0.3.1.2","text":"margot_transition_table() replaces transition_table() create_transition_matrix() print state change multiple waves. Useful longitudinal modified treatment policies. (Old functions soft deprecated helper functions.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-02-06] margot 0.3.1.1","text":"margot_plot margot_interpret_marginal now reporting coefficients E-value 1 (instead 1.1, default threshold). margot_censor now deletes values variable censoring indicator set 1 (year_measured == 0), instead merely changing indicator. can helpful downstream function handling dyadic data.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-1-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-02-05] margot 0.3.1.0","text":"margot_process_longitudinal_data_wider can now handle dyadic data, agent’s partner censored, agent also censored.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-9","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-01-18] margot 0.3.0.9","text":"margot_combine_results Takes multiple results tables margot_plot objects combines single formatted table using kableExtra, optional group headers section.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-01-18] margot 0.3.0.9","text":"-margot_plot option standardize_label display Standardised, Standardized, remove altogether (“none”). - Risk Ratios (type = “RR”), code always omits word shows label “Effect (Risk Ratio Scale)”. - Risk Differences (type = “RD”), standardize_label = “NZ” get “Standardised Effect (Difference Scale)”; standardize_label = “US” get “Standardized Effect (Difference Scale)”; standardize_label = “none”, get “Effect (Difference Scale)”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-01-17] margot 0.3.0.8","text":"margot_plot new parameter include_coefficients set TRUE remove coefficients graph. makes easier view results. minor fix margot_save_png defaults output folder set push_mods","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-12-29] margot 0.3.0.7","text":"margot_impute_carry_forward() - prevents imputing variables end study included time-varying variables.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-3-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-12-29] margot 0.3.0.6","text":"margot_impute_carry_forward() efficient. Can carry forward one-wave future observation made ‘require_one_observed’ set “TRUE”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-5","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-12-08] margot 0.3.0.5","text":"re-factored margot_make_tables() work table1 package, extending flexibility tables (esp latex.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-12-07] margot 0.3.0.4","text":"margot_prop_missing() - utility function get propoportion missing data baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-3","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-26] margot 0.3.0.3","text":"margot_amelia_to_mice() - fixed unconstrained previous workflow.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-2","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-11] margot 0.3.0.2","text":"margot_plot() label now reads “causal difference” rather “causal risk difference”.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-1","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-11-09] margot 0.3.0.1","text":"-margot_impute_carry_forward - carry forward last observed value (handling ‘prodigal’ id’s lost found).","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-3-0-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-11-09] margot 0.3.0.1","text":"margot_wide_machine - removed functionality now handled margot_impute_carry_forward","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-3-0-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-11-06] margot 0.3.0.0","text":"margot_make_table() - flexible longitudinal tables margot_amelia_to_mice() - converts Amelia output mice output.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-80","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-10-30] margot 0.2.3.80","text":"margot_count_ids() - track cumulative counts participants, returning participants,","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-80","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.80","text":"margot_count_dyads() - informative information.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-70","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.70","text":"margot_interpret_marginal clean appearance","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-70-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-30] margot 0.2.3.70","text":"margot_plot margot_interpret_marginal functions overhauled focus compact reporting.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-60","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.60","text":"margot_plot margot_interpret_marginal functions overhauled focus compact reporting.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-10-29-margot-02350","dir":"Changelog","previous_headings":"","what":"[2024-10-29] margot 0.2.3.50","title":"[2024-10-29] margot 0.2.3.50","text":"margot_plot margot_interpret_marginal functions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-40","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.40","text":"margot_plot work new margot_interpret_marginal function","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-16","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-29] margot 0.2.3.16","text":"margot_interpret_marginal removed cli formatting compatibility quarto documents","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-28] margot 0.2.3.15","text":"margot_wide_impute - small bug fix, na indicators automatically created (functionality lost previous iteration)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-27] margot 0.2.3.14","text":"margot_process_longitudinal_data_wider - robust. margot_wide_impute - small bug fix.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-13","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-10-26] margot 0.2.3.13","text":"margot_censor create censoring indictors correct handling lost--follow-conditions met, includes clustering variable (useful romantic dyads)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-26] margot 0.2.3.13","text":"margot_wide_machine now correctly handling multiple time points.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-26] margot 0.2.3.12","text":"margot_wide_machine() correctly handles NA values baseline, prints message","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-23] margot 0.2.3.11","text":"margot_save_png() better defaults margot_plot() enhancements, improved documentation","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-23] margot 0.2.3.10","text":"margot_save_png() flexibly handles plot object, merely ggplot2 objects.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-10-22] margot 0.2.3.9","text":"margot_interpret_marginal() gives correct interpretation ‘strong’ evidence using Evalues.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-10-02-margot-0238","dir":"Changelog","previous_headings":"","what":"[2024-10-02] margot 0.2.3.8","title":"[2024-10-02] margot 0.2.3.8","text":"margot_process_longitudinal_data_wider() performance enhancement. Users can save outcome variable even previous exposures missing. Useful lmtp survival models","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-27] margot 0.2.3.7 :)!","text":"margot_process_longitudinal_data_wider() performance enhancement margot_wide_machine() simplified. now time-varying treatment workflow place!","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-27] margot 0.2.3.6","text":"margot_wide_machine() converts wide data long data using indicators missing observations, allows non-parametric stacked learning lmtp without multiple-imputation assumptions. Also handles three time-points. Optional imputation_method = 'mice allows users impute, also creating NA dummy variables non-parametric learning. margot_process_longitudinal_data_wider() extends flexibility margot_process_longitudinal_data() three waves, allows users specify variable names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-5","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-26] margot 0.2.3.5","text":"helper function back_transform_estimates() unique marginal plots marginal interpretation, avoid confusions back-transforming helpers split-points policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-26] margot 0.2.3.5","text":"margot_plot(), margot_interpret_marginal() produce interpretable results. Fixed issue margot_plot() risk ratios selected, colours plotted.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-25] margot 0.2.3.4","text":"margot_plot_slope_covariate_combo() - batch multiple margot_plot_slope_covariate() plots onto one graph using patchwork.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-4","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.4","text":"margot_plot_slope_covariate() improved flexibility","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.3","text":"margot_plot_histogram() now take optional vertical_facets parameter, allowing interpretable time-series graphs. placed internal function helpers.R R directory, avoid clutter.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-25] margot 0.2.3.2","text":"margot_plot() margot_interpret_marginal() now back transform values data scale.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-24] margot 0.2.3.1","text":"margot_plot_policy_tree(), margot_plot_decision_tree(), margot_interpret_policy_tree(), margot_plot_qini_tree() use global function names. New helper functions back-transform logged values (well z-transformed values) get interpretations data scale variables log-transformed. aids interpretation.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-3-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-20] margot 0.2.3.0","text":"Refactored causal tree graphs interpretations flexible labelling providing standardised results (relevant), results data scale. Makes interpretation policies easier understand. margot_count_dyads() counts dyads longitudinal dataset. margot_summary_panel() summaries participants panel wave; counts unique participants wave, … margot_interpret_policy_batch() interprets policytree results.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-3-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-20] margot 0.2.3.0","text":"margot_summary_tables() - now pass multiple tables, better exposure plots. margot_interpret_policy_tree() - refactored: now returns results data scale, better labels. margot_plot_policy_tree() - refactored: now returns results data scale, better labels.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-3-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-09-20] margot 0.2.3.0","text":"margot_batch_policy()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-64","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-19] margot 0.2.1.64","text":"margot_plot(),margot_interpret_marginal(), group_tab() overhauled now get reporting back-tranformed standardised effects effects data scale – greatly benefiting interpretations. transform_to_original_scale() new helper introduced back-transform estimates.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-18-margot-02163","dir":"Changelog","previous_headings":"","what":"[2024-09-18] margot 0.2.1.63","title":"[2024-09-18] margot 0.2.1.63","text":"margot_save_png() replaces margot_plot_save_png() consistent function labelling, spare burden remembering function names.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-17-margot-02162","dir":"Changelog","previous_headings":"","what":"[2024-09-17] margot 0.2.1.62","title":"[2024-09-17] margot 0.2.1.62","text":"margot_compare_groups() added bold formatting alert readers reliable group differences","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-62","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.62","text":"margot_interpret_qini() - now formats tables alert readers prioritising results reliably worse better none.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.60","text":"margot_plot_create_options() updated work improve plotting workflow","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-09-17] margot 0.2.1.60","text":"compute_difference() now use general margot_compare_groups() workflow.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-0-2-1-60","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2024-09-17] margot 0.2.1.60","text":"boilerplate_measures boilerplate_methods_additional_sections boilerplate_methods boilerplate_methods_causal_interventions boilerplate_methods_confounding_control boilerplate_methods_eligibility_criteria boilerplate_methods_identification_assumptions boilerplate_methods_missing_data boilerplate_methods_sample boilerplate_methods_statistical_estimator boilerplate_methods_target_population boilerplate_methods_variables create_ordered_variable_custom margot_compute_gender_weights margot_create_bibliography margot_create_database margot_grf_subset_table margot_merge_databases manager_boilerplate_measures compute_difference()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-59","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-17] margot 0.2.1.59","text":"margot_plot_save_png() saves margot_plot output graph png, user can change width, heigh, dpi, specify path…","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-59","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-17] margot 0.2.1.59","text":"margot_plot() automatic saving output optional timestamps margot_plot_multi_arm() modified work new improved margot_plot()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-58","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-16] margot 0.2.1.58","text":"margot_compare_groups() compare treatment effects groups evaluate evidence differences","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-57","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-16] margot 0.2.1.57","text":"margot_plot_multi_arm() wrapper margot_plot enables plots/tables multi arm treatment models","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-57","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-16] margot 0.2.1.57","text":"reporting multi arm treatment models margot_plot_qini() easier follow. margot_lmtp() now automatic saving models optional prefix label optional time-stamping. Also actually saves table computing contrasts null model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-56","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-16] margot 0.2.1.56","text":"margot_interpet_qini() robust binary multi-arm treatments. margot_plot_qini() correct label binarhy treatments margot_batch_policy_tree() correctly modified function added: commputes multiple ‘spends’","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-55","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-15] margot 0.2.1.55","text":"margot_interpet_qini() interprets results qini curves pre-specified levels.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-55","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-15] margot 0.2.1.55","text":"extract_qini_data() improved handling margot_multi_arm_causal_forest() numerous plot functions enhanced produce “NZ” instead “Nz”","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-54","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.54","text":"margot_summary_cate_difference_gain() computes difference average gains integrated difference reference curve (maq object) comparison curve specified spend level – see support CATEs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-54","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.54","text":"compute_qini_curves_multi_arm() - modified can now get quantitative estimates support CATEs margot_multi_arm_causal_forest() - enhanced several ways, example support margot_summary_cate_differences() margot_causal_forest() - likewise enhanced. margot_batch_policy() now outputs `margot_summary_cate_difference_gain() models default","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-53","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.53","text":"margot_summary_tables() plots take upper case letters, remove ’_’ margot_adjust_weights() censored individuals assigned zero weights, uncensored individuals contribute final analysis.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-52","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.52","text":"Fixed margot_plot_response_timeline() print dates, optionally save ’png` image.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-51","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.51","text":"margot_plot_discontinuity() margot_plot_slope() correct end years (+1 final wave, waves overlap years)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-50","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.50","text":"margot_plot_boxplot_covariate() descriptive trends groups","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-50","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.50","text":"margot_plot_slope_covariate() automatic title, save png, optional time stamp margot_plot_individual_responses() fixed missingness","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-49","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.49","text":"reverted compute_qini_curves (works binary vars) margot_causal_forest() now working ","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-48","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-12] margot 0.2.1.48","text":"margot_multi_arm_causal_forest() extract_qini_data() improved work margot_multi_arm_causal_forest()","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-48","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-12] margot 0.2.1.48","text":"compute_qini_curves_multi_arm() internal function support margot_multi_arm_causal_forest()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-47","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.47","text":"Coordinated following functions play well margot_multi_arm_causal_forest() margot_plot_qini() `extract_qini_data()`` compute_qini_curves()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-46","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.46","text":"hear_read require .rds file passed. extract_qini_data made robust","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-45","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-11] margot 0.2.1.45","text":"build_formula_str - helper function now documented. Used causal_contrast_engine causal_contraset_marginal","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-45","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-11] margot 0.2.1.45","text":"causal_contrast_marginal causal_contrast_marginal modified accommated breaking change WeigthIt package. double_robust_marginal checks object winmids object.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-44","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.44","text":"margot_plot_individual_responses() now plotting cases default. Default random_draws 100.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-43","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.43","text":"margot_plot_histogram(), optional coloured mean/sd lines.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-42","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.42","text":"margot_plot_individual_responses(). Now handles factors, robust missing waves. margot_plot_boxplot() different colours boxplots single variable passed multiple waves.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-0-2-1-41","dir":"Changelog","previous_headings":"","what":"New features","title":"[2024-09-02] margot 0.2.1.41","text":"margot_plot_individual_responses(). New function allow random plotting responses subset sample, useful investigating individual trajectories change. margot_plot_boxplot() Now user supplies wave values, allowing flexible precise plotting intervals. optional prefixes. coordinates graph may optionally flipped.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-features-0-2-1-40","dir":"Changelog","previous_headings":"","what":"New features","title":"[2024-09-02] margot 0.2.1.40","text":"margot_plot_categorical() visualising categorical data distributions. margot_plot_shift() visualising shifts data distributions highlighted ranges.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-40","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-09-02] margot 0.2.1.40","text":"following functions deprecated favor new functions: margot_plot_hist() deprecated. Use margot_plot_histogram() instead. coloured_histogram() deprecated. Use margot_plot_histogram() instead. coloured_histogram_shift() deprecated. Use margot_plot_shift() instead. coloured_histogram_quantiles() deprecated. Use margot_plot_categorical() instead. deprecated functions continue work issue warnings. removed future version package.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-39","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.39","text":"margot_plot_slope() allows faceting","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-38","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-02] margot 0.2.1.38","text":"margot_plot_histogram() new histogram ’s informative robust previous attempts. Can used multiple variables multiple waves.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-38","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.38","text":"margot_plot_boxplot() made robust single outcome single wave.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-09-02-margot-02137","dir":"Changelog","previous_headings":"","what":"[2024-09-02] margot 0.2.1.37","title":"[2024-09-02] margot 0.2.1.37","text":"margot_plot_discontinuity(), margot_plot_slope(), margot_plot_slope_covariate() automatically print number unique participants unique number observations title, title passed.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-36","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-02] margot 0.2.1.36","text":"margot_plot_discontinuity() now read namespace.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-35","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-01] margot 0.2.1.35","text":"margot_plot_slope() descriptive trends continuous variables time; user may pass historical events denoted dashed vertical lines plot. margot_plot_slope_covariate() descriptive trends covariates time. margot_plot_bloxplot() descriptive trends using boxplots + facets. prepare_panel_data()helper function get panel data shape plotting response timelines repeated measures studies. margot_response_timeline() plot histogram response timelines repeated measures studies.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-35","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-01] margot 0.2.1.35","text":"here_save_qs() here_read_qs() report object saved large . here_save()here_read(), ditto, also ask users specify directory path, defaulting push_mods none supplied","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-34","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-09-01] margot 0.2.1.34","text":"margot_plot_discontinuity() create longitudinal graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-34","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-09-01] margot 0.2.1.34","text":"margot_size() cli alerts","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-33","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-30] margot 0.2.1.33","text":"read_multiple_images() utility function read batchs images, presentations, articles etc.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-32","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-30] margot 0.2.1.32","text":"margot_plot_batch_rate, creates save rate plots multiple causal forests outputs..","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-31","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-29] margot 0.2.1.31","text":"margot_batch_policy() allows user save plots automatically, different sizes resolutions.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-30","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-29] margot 0.2.1.30","text":"margot_subset_model() returns subset results user requests.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-29","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-29] margot 0.2.1.29","text":"margot_subset_model() subsets causal forests categorial binary exposures.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecated-0-2-1-29","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"[2024-08-29] margot 0.2.1.29","text":"margot_grf_subset_table(), functions replaced margot_subset_model(), use new function instead.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-28","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-28] margot 0.2.1.28","text":"margot_qini_plot() better labels binary models.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-28","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-28] margot 0.2.1.28","text":"margot_plot_exposure() - utility plot change exposure variable baseline. margot_size() - utility check size object","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-28-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-28] margot 0.2.1.28","text":"margot_summary_table() - now provides optional graphs show densities/distributions exposure outcomes baseline, exposure waves, end study.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-26","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-27] margot 0.2.1.26","text":"margot_plot() - consistent names results table modified using new label_mapping option. here_save_qs() here_read_qs() minor tweaks.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"id_2024-08-27-margot-02125","dir":"Changelog","previous_headings":"","what":"[2024-08-27] margot 0.2.1.25","title":"[2024-08-27] margot 0.2.1.25","text":"margot_plot() margot_plot_create_options() now allow custom labels, flexibly combine defaults.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-24","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-27] margot 0.2.1.24","text":"robust reporting/error handling margot_causal_forest(), helper funciton compute_qini_curves()","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-23","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-26] margot 0.2.1.23","text":"boilerplate_measures() deprecated. Use boilerplate::boilerplate_report_variables() instead. boilerplate_methods_causal_interventions() deprecated. Use boilerplate::boilerplate_report_causal_interventions() instead. boilerplate_methods_confounding_control() deprecated. Use boilerplate::boilerplate_report_confounding_control() instead. boilerplate_methods() deprecated. Use boilerplate::boilerplate_report_methods() instead. boilerplate_methods_eligibility_criteria() deprecated. Use boilerplate::boilerplate_report_eligibility_criteria() instead. boilerplate_methods_identification_assumptions() deprecated. Use boilerplate::boilerplate_report_identification_assumptions() instead. boilerplate_methods_missing_data() deprecated. Use boilerplate::boilerplate_report_missing_data() instead. boilerplate_methods_sample() deprecated. Use boilerplate::boilerplate_report_sample() instead. boilerplate_methods_statistical_estimator() deprecated. Use boilerplate::boilerplate_report_statistical_estimator() instead. boilerplate_methods_target_population() deprecated. Use boilerplate::boilerplate_report_target_population() instead. boilerplate_methods_variables() deprecated. Use boilerplate::boilerplate_report_variables() instead. margot_create_database() deprecated. Use boilerplate::boilerplate_manage_measures() instead. manager_boilerplate_measures() deprecated. Use boilerplate::boilerplate_manage_measures() instead. margot_create_bibliography() deprecated. Use boilerplate::boilerplate_report_measures() instead. margot_merge_databases() deprecated. Use boilerplate::boilerplate_merge_databases() instead. (Note plural ‘databases’ new function name.) obtain new functions, use devtools::install_github(\"go-bayes/boilerplate\")","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-22","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-22] margot 0.2.1.22","text":"margot_create_bibliography now prints binary tags correctly. Improved presentation items, measures first. boilerplate_methods_variables now accepts margot_create_bibliography.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-21","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-22] margot 0.2.1.21","text":"margot_create_database improved: deleted unnecessary prompts, back_up function place.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-20","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.20","text":"boilerplate_measures margot_create_bibliography better printout. However, , must develop package specifically boilerplates.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-19","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.19","text":"margot_create_database made robust, menus work better, can copy information citations. (’s clear need separate package,… expect move track)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-18","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.18","text":"margot_lmtp informative reporting progress bars using cli","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-17","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.17","text":"margot_plot_decision_tree - user may remove ’Action” labels cleaner graph, desired (default remove .)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-16","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-21] margot 0.2.1.16","text":"margot_plot_create_options helper function automate graph production.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-15","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.15","text":"margot_plot_policy_tree(), margot_plot_qini, margot_plot_decision_tree defaults nice labels, informative messages.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-14","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-21] margot 0.2.1.14","text":"margot_interpret_marginal consistent syntax margot_plot. transform_table_rownames allow nicer tables clear labels. overhauled margot_plot function produces nice labels, also generates interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-14","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-21] margot 0.2.1.14","text":"margot_create_bibliography markdown output improved cli considerably decluttered output boilerplate_methods","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-14","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-21] margot 0.2.1.14","text":"margot_interpret_table replaced margot_interpret_marginal","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-13","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-20] margot 0.2.1.13","text":"informative cli messages create_ordered_variable, margot_process_binary_vars, margot_summary_tables, margot_log_transform_vars, margot_propensity_model_and_plots, margot_process_longitudinal_data, margot_causal_forest, margot_multiarm_causal_forest, margot_batch_policy","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-12","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.12","text":"integrated cli messages user experience, margot_create_database, margot_merge_databases, boilerplate_methods (follow.)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-11","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-19] margot 0.2.1.11","text":"margot_create_database: allows creation bibliography databases. margot_merge_databases: allows merging bibliography databases. margot_create_bibliography: purpose-build appendices measures reported.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-11","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.11","text":"restored coloured_histogram package (still useful)","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-1-11","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-19] margot 0.2.1.11","text":"manager_biolerplate_measures surpassed margot_create_database","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-10","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.10","text":"boilerplate_measures overhauled allow bibliography sections (outcomewide studies) considerably improved reporting boilerplate_methods, including: selective sections report. overhauled boilerplate_methods simple clear reporting simplified biolerplate_methods_variables act mostly wrapper boilerplate_measures","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-9","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-19] margot 0.2.1.9","text":"boilerplate_methods_additional_sections","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-9","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-19] margot 0.2.1.9","text":"baseline_missing_data_proportion passed boilerplate_methods_missing_data. boilerplate functions now accessible package (just internal), allowing better selective use. allow selective printing boilerplate_methods","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-18] margot 0.2.1.8","text":"boilerplate_methods function allows first pass automated reporting. helper functions include: boilerplate_methods_sample, boilerplate_methods_eligibility_criteria, boilerplate_methods_identification_assumptions, boilerplate_methods_statistical_estimator, boilerplate_methods_confounding_control, boilerplate_methods_missing_data, boilerplate_methods_causal_interventions implemented","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-18] margot 0.2.1.8","text":"manager_boilerplate_measures now flexibly handles strings references ‘string_is …’ used reference category manager_boilerplate_measures creates. manager_boilerplate_measures streamlined.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-17] margot 0.2.1.7","text":"added batch_edit_measures within manager_boilerplate_measures allow batch editing measures database.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-17] margot 0.2.1.7","text":"manager_boilerplate_measures improved allowing user-friendly navigation forward backward, sensible defaults. requires rlang.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-6","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-16] margot 0.2.1.6","text":"boilerplate_measures produces appendix measures items uses variable inputs (Quarto manuscripts). manager_boilerplate_measures allows add / modify existing database.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-16] margot 0.2.1.6","text":"margot_plot consistent syntax: user specifies save_plot TRUE FALSE (default = TRUE).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-15] margot 0.2.1.5","text":"margot_plot auto-save numerous small improvements.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-14] margot 0.2.1.4","text":"margot_adjust_weights streamline creating inverse probability censoring weights longitudinally, allowing sample_weights baseline.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-3","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-14] margot 0.2.1.3","text":"margot_propensity_model_and_plots one stop shop evaluating balance treatment: plots & diagnostics generated.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"restored-0-2-1-3","dir":"Changelog","previous_headings":"","what":"Restored","title":"[2024-08-14] margot 0.2.1.3","text":"coloured_histogram() back popular demand.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-3","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-14] margot 0.2.1.3","text":"tweaks defaults plots make legible small computer screens.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-2","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-13] margot 0.2.1.2","text":"margot_plot_policy_combo, margot_policy_tree, margot_batch_policy now accepts arguments margot_plot_decision_tree margot_plot_policy_tree, leading customisable policy visualisations. Bigger defaults x y axis text margot_plot_policy_tree legibility.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-1","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-12] margot 0.2.1.1","text":"margot_batch_policy runs margot_policy_tree outcomes model.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-1-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-11] margot 0.2.1.0","text":"margot_plot_policy_combo: creates combination plot margot_plot_decision_tree margot_plot_policy_tree(), easing burden interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-1-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-11] margot 0.2.1.0","text":"margot_plot_decision_tree: policy action leafs different colours (user may specify palette). Defaults ggokabeito::scale_fill_okabe_ito() match margot_plot_policy_tree() margot_policy_tree outputs margot_plot_policy_combo addition otuputs.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-1-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-11] margot 0.2.1.0","text":"removed split_vars margot_causal_forest margot_mulit_arm_causal_forest margot_plot_decision_tree correct tree arrangement","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-9","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-11] margot 0.2.0.9","text":"margot_plot_policy_tree correctly renders decision tree, allows individual plots decision leafs, collects guides. error rendering margot_plot_decision_tree, fixed: function now includes internal tests. removed split_vars margot_causal_forest margot_mulit_arm_causal_forest","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"removed-0-2-0-9","dir":"Changelog","previous_headings":"","what":"Removed","title":"[2024-08-11] margot 0.2.0.9","text":"debug_node_data_with_positions, internal function - utility now included margot_plot_decision_tree","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-8","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-10] margot 0.2.0.8","text":"margot_plot_decision_tree creates policy tree decision rule graphs ggplot2 format, graph may combined margot_plot_policy effectively communicate decision rules policy makers. debug_node_data_with_positions internal margot_plot_decision_tree works properly","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-8","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-10] margot 0.2.0.8","text":"margot_plot_decision_tree requires debug_node_data_with_positions","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-8","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-10] margot 0.2.0.8","text":"Enhanced margot_plot_policy produces margot_plot_decision_tree graph, well previous outputs.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-7","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-9] margot 0.2.0.7","text":"margot_interpret_policy_tree interprets policy_tree outputs outputs either markdown formats. margot_policy_tree wraps margot_interpret_policy_tree, margot_plot_policy_tree, margot_qini_plot decision tree visualisation within one function.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-7","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-9] margot 0.2.0.7","text":"margot_plot now work even title subtitle passed. margot_plot_policy_tree: focus simply plotting, rather plotting interpreting. margot_interpret_table: longer requires specification estimate. General explanation printed separately (used ).","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-6","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-8] margot 0.2.0.6","text":"Greatly enhanced functionality margot_plot_policy_tree explains result.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-6","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-8] margot 0.2.0.6","text":"broken indexing changed margot_causal_forest margot_multi_arm_causal_forest use outcome names, rather model names.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"improved-0-2-0-5","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2024-08-8] margot 0.2.0.5","text":"margot_causal_forest margot_multi_arm_causal_forest now use outcome names, rather model names, name outcomes","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.4","text":"margot_process_longitudinal_data orders correctly lmtp models updating censoring column not_lost handles missing responses well attrition. function additionally automatically dummy codes ordinal variables standardises continuous variables. Presently implemented three waves, future expanded handle arbitrarily many.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"fixed-0-2-0-4","dir":"Changelog","previous_headings":"","what":"Fixed","title":"[2024-08-7] margot 0.2.0.4","text":"Functions compute_qini_curves extract_qini_data work binary interventions","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-3","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.3","text":"margot_summary_tables creates summary tables baseline variables, exposure(s), outcome(s) using gtsummary package.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-0-3","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-7] margot 0.2.0.3","text":"margot_compute_gender_weights deprecated. Now use margot_compute_gender_weights_by_wave.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-0-2","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"[2024-08-7] margot 0.2.0.2","text":"coloured_histogram() coloured_histogram_quantile() deprecated. Now use new margot_plot_hist() instead. create_ordered_variable_custom deprecated. Now use created_ordered_variablefunction custom_breaks = c(..) obtain custom breaks.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-2","dir":"Changelog","previous_headings":"","what":"New","title":"[2024-08-7] margot 0.2.0.2","text":"margot_plot_hist() plotting distributions exposure variable","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0201","dir":"Changelog","previous_headings":"","what":"margot 0.2.0.1","title":"margot 0.2.0.1","text":"new table plot functions grf outputs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-020","dir":"Changelog","previous_headings":"","what":"margot 0.2.0","title":"margot 0.2.0","text":"improved subgroup comparison function deprecated compare_group_means function, compare_groupallowing contrasts causal difference relative risk scales. new wrapper functions functions grf plus visualising results.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0121","dir":"Changelog","previous_headings":"","what":"margot 0.1.2.1","title":"margot 0.1.2.1","text":"group_tab now works hood margot_plot, need specify explicitly group_tab now allows custom order plot, just decreasing effect size numerous small enhancements older parametric model options new logo","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-012","dir":"Changelog","previous_headings":"","what":"margot 0.1.2","title":"margot 0.1.2","text":"minor fixes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-011","dir":"Changelog","previous_headings":"","what":"margot 0.1.1","title":"margot 0.1.1","text":"functions interpret outputs lmtp models functions create tables functions create graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0101","dir":"Changelog","previous_headings":"","what":"margot 0.1.0.1","title":"margot 0.1.0.1","text":"Minor bug fixes performance improvements.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-010","dir":"Changelog","previous_headings":"","what":"margot 0.1.0","title":"margot 0.1.0","text":"Initial release: includes data exploration, model preparation, utility functions.","code":""}]
