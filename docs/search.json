[{"path":"https://go-bayes.github.io/margot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). margot: MARGinal Observational Treatment-effects. R package version 0.1.0. License: CC 4.0. Helper functions obtain MARGinal Observational Treatment-effects observational data., https://go-bayes.github.io/margot/.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 0.1.0. License: CC BY 4.0. Helper functions to obtain MARGinal Observational Treatment-effects from observational data.},   url = {https://go-bayes.github.io/margot/}, }"},{"path":"https://go-bayes.github.io/margot/index.html","id":"margot","dir":"","previous_headings":"","what":"MARGinal Observational Treatment-effects","title":"MARGinal Observational Treatment-effects","text":"MARGinal Observational Treatment-effects.1 Causal inference requires balance across treatments compared. observational studies, balance guaranteed. goal margot enhance accessibility causal inference. primary audience includes psychological scientists, although may benefit social scientists. package offers functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses streamlining estimation (Marginal) Average Treatment Effects, also supports workflows Conditional Average Treatment Effects, Heterogeneous Treatment Effects, Modified Treatment Policies. version package work progress experimental.","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MARGinal Observational Treatment-effects","text":"can install development version margot like :","code":"if (!require(devtools, quietly = TRUE)) {   install.packages(\"devtools\")   library(devtools) }  devtools::install_github(\"go-bayes/margot\")"},{"path":"https://go-bayes.github.io/margot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"MARGinal Observational Treatment-effects","text":"","code":"library(\"margot\")  # create transition table to evaluate the positivity assumption transition_matrix <- create_transition_matrix(df_nz, \"religion_believe_god\", \"id\")  # create table and table explanation table_change_belief <- transition_table(transition_matrix) table_change_belief"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Back-transform Log-transformed Mean — back_transform_logmean","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"Back-transforms log-transformed mean (using log(x + 1) transformation) original scale. utility function useful interpreting results original data transformed using log(x + 1) handle zero values normalize distribution data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"back_transform_logmean(log_mean)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"log_mean mean log scale, original data transformed using log(x + 1).","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"list containing mean original scale (`mean_original`). standard deviation back-transformed function due complexity introduced log(x + 1) transformation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"log_mean = 1.098612 # true mean is 2. We add + 1 to the log to handle zero: log(2+1) = log(3) back_transformed_result <- back_transform_logmean(log_mean) print(back_transformed_result) #> $mean_original #> [1] 1.999999 #>"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Scale — back_transform_zscore","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"function takes z-score transforms back original scale using specified mean standard deviation original data. Often, standardization applied original scale values needed interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"back_transform_zscore(z, mean, sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"z numeric value vector z-scores transformed back original scale. mean mean original dataset z-score calculated. sd standard deviation original dataset z-score calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"# Given a dataset with mean = 100 and sd = 15 original_value <- back_transform_zscore(z = 1.5, mean = 100, sd = 15) print(original_value) #> [1] 122.5"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"function generates histogram specific ranges highlighted indicate highest /lowest values within unit specified limits. allows customization bin width range highlighted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"","code":"coloured_histogram(   df,   col_name,   binwidth = 1,   scale_min = NULL,   scale_max = NULL,   highlight_range = \"highest\" )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"df dataframe containing data plotted. col_name name column histogram generated. binwidth width bins histogram; defaults 1. scale_min minimum value used scaling histogram. `NULL`, minimum value `col_name` used. scale_max maximum value used scaling histogram. `NULL`, maximum value `col_name` used. highlight_range Specifies range highlight: \"lowest\", \"highest\", \"\". Defaults \"highest\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"ggplot object histogram highlighted ranges specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram Highlighting Specific Ranges — coloured_histogram","text":"","code":"# Assuming df_19 is your dataframe and contains the column 'forgiveness' graph <- coloured_histogram(   df = df_19,   col_name = \"forgiveness\",   scale_min = 1,   scale_max = 7,   highlight_range = \"highest\",   binwidth = .1 # Adjust binwidth as needed ) #> Error in eval(expr, envir, enclos): object 'df_19' not found print(graph) #> Error in eval(expr, envir, enclos): object 'graph' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"function creates histogram specified column dataframe, highlighting mean one standard deviation mean. draws vertical lines mean (black) plus/minus one standard deviation (blue gold, respectively), arrows mean standard deviation marker. title plot includes capitalized column name, achieved using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"coloured_histogram_sd(df, col_name, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"ggplot object representing histogram highlights mean   standard deviations. plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"# Assuming `df_nz` is a dataframe with a numeric column 'forgiveness' # and a factor or integer column 'wave' for subsetting: df_19 <- dplyr::filter(df_nz, wave == 2019)  graph_density_of_exposure <- coloured_histogram_sd(   df = df_19,   col_name = \"forgiveness\",   binwidth = 0.5 # Adjust binwidth as needed ) #> Error in ggplot(df, aes(x = !!rlang::sym(col_name))): could not find function \"ggplot\"  print(graph_density_of_exposure) #> Error in eval(expr, envir, enclos): object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"function creates histogram highlights specified range values visualize shifts data distributions. highlighted range can indicate areas interest, shifts distribution. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"coloured_histogram_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"df dataframe containing variable interest. col_name name column `df` visualized histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data create meaningful visualization. range_highlight numeric vector length 2 specifying start end range highlight. `NULL`, range highlighted. shift character string indicating direction shift, \"\" highlighting gold \"\" highlighting dodger blue. default \"\". show_avg_line logical value indicating whether display vertical line representing average value specified column using red dashed line. Default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"`ggplot` object representing histogram specified highlights. object can printed modified using `ggplot2` functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"# Assuming df_nz is your dataframe and it includes a numeric variable 'forgiveness' # Filter to a specific subset, for example, wave 2019 df_19 <- dplyr::filter(df_nz, wave == 2019)  # Create and print the histogram graph_density_of_exposure <- coloured_histogram_shift(   df = df_19,   shift = \"down\",   col_name = \"forgiveness\",   binwidth = .5, # Adjust binwidth for your data   range_highlight = c(3.9, 10) ) #> Error in ggplot(df, aes(x = !!col_name_sym, fill = fill_color)): could not find function \"ggplot\" print(graph_density_of_exposure) #> Error in eval(expr, envir, enclos): object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transition matrix for state transitions — create_transition_matrix","title":"Create transition matrix for state transitions — create_transition_matrix","text":"satisify positivity assumption causal inference, must ensure exposure occurs data. function computes transition matrix given state variable across subjects, tracking changes consecutive observations. function handles numeric factor state variables, excluding NA values transition count.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"create_transition_matrix(data, state_var, id_var)"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transition matrix for state transitions — create_transition_matrix","text":"data data frame containing observations. state_var name state variable column `data` string. variable tracks state changes analyzed. id_var name identifier variable column `data` string. variable distinguishes different subjects entities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transition matrix for state transitions — create_transition_matrix","text":"matrix indicating number transitions states. rows represent initial state (''), columns represent subsequent state (''). Diagonal entries indicate number times state change, -diagonal entries indicate transitions one state another.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create transition matrix for state transitions — create_transition_matrix","text":"function explicitly excludes NA values transition matrix calculation. treats numeric state variables converting factors, ensuring consistent analysis approach numeric factor types.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") print(transition_matrix) #>     to #> from 0 1 #>    0 0 2 #>    1 1 0"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from RDS File in a Specified Directory — here_read","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"Reads RDS file specified `name` directory defined `push_mods`, returning data frame stored within. function uses `` package resolve path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"here_read(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"name Character string specifying name RDS file read (without \".rds\" extension).","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"data frame specific R object stored RDS file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"`push_mods` variable must defined user's environment within package, pointing directory files read. presumed `push_mods` correctly set point existing directory path. function validate existence file throw error file exist.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved an RDS file named \"my_saved_dataframe.rds\" in that directory my_df <- here_read(\"my_df\") #> Error in here_read(\"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"Reads parquet file specified `name` directory defined `push_mods`, returning data frame stored within. function uses `arrow` `` packages efficiently read parquet files construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"","code":"here_read_arrow(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"name Character string specifying name Parquet file read (without \".parquet\" extension).","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"data frame representing data stored specified Parquet file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"`push_mods` must defined user's environment within package, indicating directory files read. assumed `push_mods` properly set point existing directory path. function throw error specified file exist read Parquet file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from Parquet File in a Specified Directory — here_read_arrow","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved a Parquet file named \"my_dataset.parquet\" in that directory my_df <- here_read_arrow(\"my_df\") #> Error in here_read_arrow(\"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame as RDS File in a Specified Directory — here_save","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Saves provided data frame RDS file using specified name, within directory defined `push_mods`. function uses `` package construct path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"here_save(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"df Data frame saved. object want persist disk. name Character string specifying base name file. \".rds\" extension automatically appended name.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Invisible NULL. primary effect function side effect saving RDS file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"`push_mods` variable defined user's environment within package point directory files saved. assumed `push_mods` correctly set point valid directory path. function create directories; assumes specified directory exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"# assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save(my_df, \"my_df\") #> Error in here_save(my_df, \"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"Saves provided data frame parquet file using specified name, within directory defined `push_mods`. function leverages `arrow` `` packages write data frames parquet format construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"","code":"here_save_arrow(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"df Data frame saved. object want persist disk Parquet format. name Character string specifying base name file (without \".parquet\" extension).","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"Invisible NULL. primary effect function side effect writing parquet file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"`push_mods` variable must defined user's environment within package, pointing directory files saved. presumed `push_mods` properly set point existing directory path. function create directories; assumes specified directory already exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Parquet File in a Specified Directory — here_save_arrow","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_arrow(my_df, \"my_saved_dataframe\") #> Error in here_save_arrow(my_df, \"my_saved_dataframe\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with labels — margot_wide","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labelled included. handles multiple observations per subject across different waves, allows specification baseline variables, exposure variables, outcome variables. ensures specified variables included resulting wide-format data frame, columns prefixed time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with labels — margot_wide","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names included t0. exposure_var character vector exposure variable names tracked across time. outcome_vars character vector outcome variable names tracked across time.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"wide-format data frame subject's observations across time points         represented single row, variables prefixed respective         time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"# Defining variables as per the function's documentation baseline_vars <- c(   \"male\", \"age\",  \"eth_cat\",   \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",   \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- c(\"forgiveness\")  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",   \"hlth_bmi\", \"hours_exercise\" )  # df_nz is a synthetic dataset included in this package # wide_data <- margot_wide(df_nz, baseline_vars, exposure_var, outcome_vars) # print(wide_data)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"function transforms longitudinal data wide format performs imputation baseline variables. leverages `mice` package imputation, ensuring missing baseline data appropriately handled. function arranges data participant id time, filters based time conditions, reshapes data wide format. Imputed data merged back, maintaining structure suitable analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":".data dataframe containing longitudinal data. baseline_vars character vector baseline variable names include impute necessary. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"# df_nz is a synthetic dataset included in this package data(df_nz, package = \"margot\")  df_nz <- data.frame(df_nz) wide_data_imputed <- margot_wide_impute_baseline(df_nz,   baseline_vars = c(\"age\", \"male\", \"religion_believe_god\"),   exposure_var = (\"forgiveness\"),   outcome_vars = (\"kessler_latent_anxiety\")   ) #>  #>  iter imp variable #>   1   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   2   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   3   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   4   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   5   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Regression with Covariates — regress_with_covariates","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"unitility function performs generalized linear regression specified dataset using outcome variable, exposure variable, set baseline covariates. default, function uses Gaussian family (linear regression), allows specifying families generalized linear models (GLM).","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"regress_with_covariates(   data,   outcome,   exposure,   baseline_vars,   family = gaussian() )"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"data data frame containing variables analysis. outcome character string specifying name outcome variable data frame. exposure character string specifying name main exposure variable data frame. baseline_vars character vector specifying names baseline covariates include model addition exposure variable. family family object character string naming family (default gaussian(), performs linear regression). parameter determines error distribution link function used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"object class glm representing fitted model, includes coefficients, residuals, model diagnostics. object can analyzed using standard methods GLM objects, summary() model summaries anova() analysis variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"function constructs model formula using outcome, exposure, baseline variables. fits generalized linear model using formula. baseline variables filtered exclude outcome exposure variables model fitting. function prints formula used regression analysis verification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"# using `df_nz` is your data frame with \"income\" as the continuous outcome variable, # \"age\" as an exposure variable, and other covariates outcome_var <- \"income\" exposure_var <- \"age\" baseline_vars <- c(\"age\", \"education\", \"partner\") model <- regress_with_covariates(df_nz, outcome_var, exposure_var, baseline_vars, family =  gaussian()) #> income ~ age + education + partner #> <environment: 0x10be7c918> #> Error in eval(predvars, data, env): object 'income' not found summary(model) #> Error in eval(expr, envir, enclos): object 'model' not found"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"Iterates column provided data frame. column numeric attributes, function removes attributes converting column basic numeric vector. particularly useful cleaning data frames operations may add undesired attributes numeric columns, aggregations merges.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"remove_numeric_attributes(df)"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"df `data.frame` object attributes numeric columns removed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"`data.frame` attributes removed numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"df <- data.frame(a = I(1:3), b = c(\"x\", \"y\", \"z\"), c = I(rnorm(3))) cleaned_df <- remove_numeric_attributes(df) str(cleaned_df) #> 'data.frame':\t3 obs. of  3 variables: #>  $ a: 'AsIs' int  1 2 3 #>  $ b: chr  \"x\" \"y\" \"z\" #>  $ c: 'AsIs' num  0.249794.... -1.34097.... -1.33980...."},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Rename Columns Based on Criteria — select_and_rename_cols","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"Selects columns base set match specified baseline variables renames outcome variable changing prefix. Useful longitudinal data time-point prefixes need standardized adjusted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"select_and_rename_cols(   names_base,   baseline_vars,   outcome,   from_prefix = \"t2\",   to_prefix = \"t0\" )"},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"names_base character vector column names select. baseline_vars character vector baseline variables match `names_base`. outcome name outcome variable whose prefix replaced. from_prefix original prefix outcome variable replaced, defaulting \"t2\". prefix include character immediately preceding numeric value underscore, e.g., \"t2_\". to_prefix new prefix replace original prefix outcome variable, defaulting \"t0\". prefix format `from_prefix`, including character immediately preceding numeric value underscore, e.g., \"t0_\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"character vector selected column names outcome variable name   modified reflect new prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"names_base <- c(\"t1_age\", \"t2_weight\", \"t3_height\", \"t2_outcome\") baseline_vars <- c(\"age\", \"weight\") outcome_var <- \"t2_outcome\"  final_columns <- select_and_rename_cols(names_base, baseline_vars, outcome_var, \"t2\", \"t0\") print(final_columns) #> [1] \"t1_age\"     \"t2_weight\"  \"t0_outcome\""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Table — transition_table","title":"Transition Table — transition_table","text":"Generates transition table describes movements stability states one observation next. formats output markdown table, highlighting number entities remaining state (diagonal) transitioning different states (-diagonal).","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Table — transition_table","text":"","code":"transition_table(data, state_names = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Table — transition_table","text":"data data frame columns `` `` indicating initial subsequent states entities, respectively, `Freq` column indicating frequency transitions. state_names Optional; vector state names replace default state labels. NULL, states labeled \"State 1\", \"State 2\", etc., based unique values `` `` columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Table — transition_table","text":"list two elements: `explanation`, character string explaining table, `table`, markdown-formatted table transitions. diagonal entries (bold) represent count entities remained initial state, -diagonal entries show count transitions different states.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Table — transition_table","text":"","code":"df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") # Assuming `transition_matrix` is a table with the transition counts between states # First, convert `transition_matrix` to a dataframe suitable for `transition_table` df_transition <- as.data.frame.matrix(transition_matrix) df_transition$from <- rownames(df_transition) long_df_transition <- tidyr::pivot_longer(df_transition, cols = -from, names_to = \"to\", values_to = \"Freq\")  transition_table_data <- transition_table(long_df_transition) #> Error in dplyr::mutate(data %>% tidyr::pivot_wider(names_from = to, values_from = Freq,     values_fill = list(Freq = 0)), from = factor(from, levels = sort(unique(from)))) %>%     dplyr::arrange(from): could not find function \"%>%\" cat(transition_table_data$explanation) #> Error in eval(expr, envir, enclos): object 'transition_table_data' not found cat(\"\\n\") #>  print(transition_table_data$table) #> Error in eval(expr, envir, enclos): object 'transition_table_data' not found"}]
