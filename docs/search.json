[{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":null,"dir":"","previous_headings":"","what":"Data License","title":"Data License","text":"© 2024, Curators Margot Package simulated dataset, df_nz, copyrighted curators Margot Package. rights reserved. free : - Share — copy redistribute material medium format following terms: - Attribution — must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. - NonCommercial — may use material commercial purposes. - NoDerivatives — remix, transform, build upon material, may distribute modified material. information, see https://creativecommons.org/licenses/-nc-nd/4.0/ =======================================================================","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE-data.html","id":"creative-commons-attribution-noncommercial-noderivatives-40-international-public-license","dir":"","previous_headings":"","what":"Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","title":"Data License","text":"exercising Licensed Rights (defined ), accept agree bound terms conditions Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License (“Public License”). extent Public License may interpreted contract, granted Licensed Rights consideration acceptance terms conditions, Licensor grants rights consideration benefits Licensor receives making Licensed Material available terms conditions. Click full text Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"data-license","dir":"","previous_headings":"","what":"Data License","title":"Licensing Information","text":"dataset “df_nz” contained package licensed following terms:","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"custom-data-license","dir":"","previous_headings":"Data License","what":"Custom Data License","title":"Licensing Information","text":"Non-Commercial Use: may use data non-commercial purposes . Commercial use strictly prohibited. Attribution: must give appropriate credit, provide link license, indicate changes made. may reasonable manner, way suggests licensor endorses use. Redistribution: Redistribution data form, including modified versions, permitted. includes, limited , sharing data public repositories, distributing packaged software, providing third parties. Derivatives: may distribute modified versions data. details, contact authors package.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"code-license","dir":"","previous_headings":"","what":"Code License","title":"Licensing Information","text":"code package licensed GNU General Public License (GPL) v3.0. Permissions strong copyleft license conditioned making available complete source code licensed works modifications, include larger works using licensed work, license. Copyright license notices must preserved. Contributors provide express grant patent rights.","code":""},{"path":"https://go-bayes.github.io/margot/LICENSE.html","id":"gnu-general-public-license","dir":"","previous_headings":"Code License","what":"GNU General Public License","title":"Licensing Information","text":"Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed. GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow. Definitions. “License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion. Source Code. “source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work. Basic Permissions. rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary. Protecting Users’ Legal Rights Anti-Circumvention Law. covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures. Conveying Verbatim Copies. may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee. Conveying Modified Source Versions. may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate. Conveying Non-Source Forms. may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying. Additional Terms. “Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way. Termination. may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10. Acceptance Required Copies. required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License . Automatic Licensing Downstream Recipients. time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion . Patents. “contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law. Surrender Others’ Freedom. conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program. Use GNU Affero General Public License. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination . Revised Versions License. Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version. Disclaimer Warranty. WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. Limitation Liability. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. Interpretation Sections 15 16. disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w' andshow c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see http://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read http://www.gnu.org/philosophy/--lgpl.html.","code":"GNU GENERAL PUBLIC LICENSE                    Version 3, 29 June 2007 Preamble TERMS AND CONDITIONS a) The work must carry prominent notices stating that you modified it, and giving a relevant date.  b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7.  This requirement modifies the requirement in section 4 to \"keep intact all notices\".  c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy.  This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged.  This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.  d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.  b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.  c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source.  This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.  d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge.  You need not require recipients to copy the Corresponding Source along with the object code.  If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source.  Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.  e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or  b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or  c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or  d) Limiting the use for publicity purposes of names of licensors or authors of the material; or  e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or  f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. END OF TERMS AND CONDITIONS          How to Apply These Terms to Your New Programs {one line to give the program's name and a brief idea of what it does.} Copyright (C) {year}  {name of author}  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. {project}  Copyright (C) {year}  {fullname} This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details."},{"path":"https://go-bayes.github.io/margot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/margot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). margot: MARGinal Observational Treatment-effects. doi:10.5281/zenodo.10907724, R package version 0.2.0.2. GNU General Public License v3.0. Functions obtain MARGinal Observational Treatment-effects observational data., https://go-bayes.github.io/margot/.","code":"@Manual{,   title = {margot: MARGinal Observational Treatment-effects},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 0.2.0.2. GNU General Public License v3.0. Functions to obtain MARGinal Observational Treatment-effects from observational data.},   url = {https://go-bayes.github.io/margot/},   doi = {10.5281/zenodo.10907724}, }"},{"path":"https://go-bayes.github.io/margot/index.html","id":"margot","dir":"","previous_headings":"","what":"MARGinal Observational Treatment-effects","title":"MARGinal Observational Treatment-effects","text":"MARGinal Observational Treatment-effects.1 Causal inference requires balance across treatments compared. observational studies, balance guaranteed; quantifying causality therefore requires careful, multi-step workflows. goal margot enhance accessibility workflows causal inference. primary audience includes psychological scientists, although may benefit social scientists. package offers functions : evaluating causal assumptions modelling time-series data reporting results performing sensitivity analyses margot focuses streamlining estimation (Marginal) Average Treatment Effects, also supports workflows Conditional Average Treatment Effects, Heterogeneous Treatment Effects, Modified Treatment Policies. version package work progress experimental.","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MARGinal Observational Treatment-effects","text":"can install development version margot like :","code":"if (!require(devtools, quietly = TRUE)) {   install.packages(\"devtools\")   library(devtools) }  devtools::install_github(\"go-bayes/margot\")"},{"path":"https://go-bayes.github.io/margot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"MARGinal Observational Treatment-effects","text":"","code":"library(\"margot\")  # create transition table to evaluate the positivity assumption transition_matrix <- create_transition_matrix(df_nz, \"religion_believe_god\", \"id\")  # create table and table explanation table_change_belief <- transition_table(transition_matrix) table_change_belief"},{"path":"https://go-bayes.github.io/margot/index.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"MARGinal Observational Treatment-effects","text":"Go :https://github.com/go-bayes/margot","code":""},{"path":"https://go-bayes.github.io/margot/index.html","id":"code-1","dir":"","previous_headings":"Code","what":"Code","title":"MARGinal Observational Treatment-effects","text":"code package licensed GNU General Public License (GPL) v3.0. can redistribute /modify terms GPL published Free Software Foundation. information, see GPL v3.0. margot package distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See th GNU General Public License details.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Back-transform Log-transformed Mean — back_transform_logmean","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"Back-transforms log-transformed mean (using log(x + 1) transformation) original scale. utility function useful interpreting results original data transformed using log(x + 1) handle zero values normalize distribution data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"back_transform_logmean(log_mean)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"log_mean mean log scale, original data transformed using log(x + 1).","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"list containing mean original scale (`mean_original`). standard deviation back-transformed function due complexity introduced log(x + 1) transformation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back-transform Log-transformed Mean — back_transform_logmean","text":"","code":"log_mean = 1.098612 # true mean is 2. We add + 1 to the log to handle zero: log(2+1) = log(3) back_transformed_result <- back_transform_logmean(log_mean) print(back_transformed_result) #> $mean_original #> [1] 1.999999 #>"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Z-Score to Original Scale — back_transform_zscore","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"function takes z-score transforms back original scale using specified mean standard deviation original data. Often, standardization applied original scale values needed interpretation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"back_transform_zscore(z, mean, sd)"},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"z numeric value vector z-scores transformed back original scale. mean mean original dataset z-score calculated. sd standard deviation original dataset z-score calculated.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"Returns numeric value vector original scale values corresponding input z-scores.","code":""},{"path":"https://go-bayes.github.io/margot/reference/back_transform_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Transform Z-Score to Original Scale — back_transform_zscore","text":"","code":"# Given a dataset with mean = 100 and sd = 15 original_value <- back_transform_zscore(z = 1.5, mean = 100, sd = 15) print(original_value) #> [1] 122.5"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Causal Contrasts — causal_contrast_engine","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Estimates causal contrasts using generalized linear models different types treatment effects (ATE, ATT) outcomes (RR, RD). Supports handling multiply imputed datasets allows flexibility model specification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Causal Contrasts — causal_contrast_engine","text":"","code":"causal_contrast_engine(   df,   Y,   X,   baseline_vars = baseline_vars,   treat_0 = treat_0,   treat_1 = treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Causal Contrasts — causal_contrast_engine","text":"df Data frame `mids` object containing data. Y Response variable name string. X Treatment exposure variable name string. baseline_vars Vector baseline covariate names. treat_0 Reference level treatment variable. treat_1 Treatment level interest comparison. estimand Type causal estimand (\"ATE\", \"ATT\"); defaults . type Type effect size (\"RR\" Risk Ratio, \"RD\" Risk Difference); defaults . nsims Number simulations bootstrap; defaults 200. cores Number cores parallel processing; uses available cores default. family Model family string family object; defaults \"gaussian\". weights name weights variable data frame, NULL weights used. continuous_X Whether X continuous variable; defaults FALSE. splines Whether apply spline transformation X; defaults FALSE. vcov Type variance-covariance matrix standard error estimation; defaults \"HC2\". verbose Whether print detailed output; defaults FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Causal Contrasts — causal_contrast_engine","text":"Depending configuration, returns summary object containing estimated causal contrasts, confidence intervals, potentially diagnostics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"function estimates average treatment effect (ATE) average treatment effect treated (ATT) using generalized linear models (GLMs). supports handling continuous categorical treatments, optional use spline transformations, adjustments multiple imputation datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"causal_contrast_marginal(   df,   Y,   X,   baseline_vars = \"1\",   treat_0,   treat_1,   estimand = c(\"ATE\", \"ATT\"),   type = c(\"RR\", \"RD\"),   nsims = 200,   cores = parallel::detectCores(),   family = \"gaussian\",   weights = NULL,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"df Data frame containing data. Y response variable data frame. X treatment exposure variable data frame. baseline_vars vector names baseline covariates adjust model. treat_0 reference level treatment variable, corresponding treatment control condition. treat_1 active level treatment variable, corresponding receiving treatment. estimand character vector specifying estimand; \"ATE\" Average Treatment Effect \"ATT\" Average Treatment Effect Treated. type character vector specifying type effect size; \"RD\" Risk Difference \"RR\" Risk Ratio. nsims Number simulations perform, relevant handling multiple imputation datasets. cores Number cores use parallel processing. family family GLM used (e.g., \"gaussian\" linear models). weights name weights variable data frame, NULL weights used. continuous_X Logical indicating whether treatment variable X continuous. splines Logical indicating whether use spline transformations treatment variable X. vcov method use variance-covariance matrix estimation. verbose Logical indicating whether display detailed output model fitting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"Depending 'type' specified, returns summary object containing either risk differences risk ratios along additional statistics like confidence intervals.","code":""},{"path":"https://go-bayes.github.io/margot/reference/causal_contrast_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Causal Contrast Marginal Effects Estimation — causal_contrast_marginal","text":"","code":"# Assume that df is your dataset with variables 'outcome', 'treatment', 'age', and 'gender' result <- causal_contrast_marginal(df = df, Y = \"outcome\", X = \"treatment\",                                    baseline_vars = c(\"age\", \"gender\"),                                    treat_0 = \"control\", treat_1 = \"exposed\",                                    estimand = \"ATE\", type = \"RD\", nsims = 100,                                    cores = 2, family = \"gaussian\", weights = \"weight_var\",                                    continuous_X = FALSE, splines = FALSE,                                    vcov = \"HC3\", verbose = TRUE) #> Error in model.frame.default(formula = as.formula(formula_str), data = df,  :  #>   'data' must be a data.frame, environment, or list #> Error in UseMethod(\"conditionMessage\"): no applicable method for 'conditionMessage' applied to an object of class \"try-error\""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","title":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","text":"function generates histogram specific ranges highlighted indicate highest /lowest values within unit specified limits. allows customization bin width, unit change highlighting, range highlighted. useful settings modified treatment policies #' clarifying part distribution shifted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","text":"","code":"coloured_histogram(   df,   col_name,   binwidth = 1,   unit_of_change = 1,   scale_min = NULL,   scale_max = NULL,   highlight_range = \"highest\" )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","text":"df dataframe containing data plotted. col_name name column histogram generated. binwidth width bins histogram; defaults 1. unit_of_change unit change used define highlight range. subtitle mention unit. also adjusts calculation highlight thresholds slightly less unit go range data. Defaults 1. scale_min minimum value used scaling histogram. `NULL`, minimum value `col_name` used. scale_max maximum value used scaling histogram. `NULL`, maximum value `col_name` used. highlight_range Specifies range highlight: \"lowest\", \"highest\", \"\". Defaults \"highest\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","text":"ggplot object histogram highlighted ranges specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Coloured Histogram Highlighting Specific Ranges (deprecated, use `margot_plot_hist`) — coloured_histogram","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_19 is your dataframe and contains the column 'forgiveness' graph <- coloured_histogram(   df = df_19,   col_name = \"forgiveness\",   scale_min = 1,   scale_max = 7,   highlight_range = \"highest\",   binwidth = .1, # Adjust binwidth as needed   unit_of_change = 1 # Specify the unit of change ) print(graph) } # }"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"visualise distribution with automatically calculated quantile highlights (deprecated, use `margot_plot_hist`) — coloured_histogram_quantiles","title":"visualise distribution with automatically calculated quantile highlights (deprecated, use `margot_plot_hist`) — coloured_histogram_quantiles","text":"visualise distribution automatically calculated quantile highlights (deprecated, use `margot_plot_hist`)","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualise distribution with automatically calculated quantile highlights (deprecated, use `margot_plot_hist`) — coloured_histogram_quantiles","text":"","code":"coloured_histogram_quantiles(   df,   col_name,   n_divisions = NULL,   breaks = NULL,   binwidth = NULL,   n_bins = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colours = NULL,   hist_fill = \"lightgray\",   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualise distribution with automatically calculated quantile highlights (deprecated, use `margot_plot_hist`) — coloured_histogram_quantiles","text":"df dataframe containing data visualised col_name name column create histogram n_divisions number divisions create. null, user must provide breaks breaks optional. numeric vector specifying custom breakpoints binwidth width bins histogram n_bins optional. number bins histogram. overrides binwidth specified cutpoint_inclusive character string specifying whether cutpoints included lower upper category. must either \"lower\" \"upper\". default \"upper\" ties.method character string specifying ties handled colours optional. vector colours quantile lines hist_fill colour histogram fill. default \"lightgray\" hist_colour colour histogram outline. default \"black\" line_type line type quantile lines. default \"solid\" line_width line width quantile lines. default 0.75 title custom title plot. null, default title used subtitle custom subtitle plot. null, default subtitle used x_lab custom x-axis label. null, column name used y_lab custom y-axis label. default \"count\" theme_choice ggplot2 theme use. default theme_classic() text_size base text size plot. default 12 axis_text_angle angle x-axis text. default 45 add_density logical. true, adds density curve plot add_rug logical. true, adds rug plot x-axis facet_var optional. name variable use faceting x_scale_transform optional. transformation x-axis (e.g., \"log10\") y_scale_transform optional. transformation y-axis (e.g., \"log10\") additional_layers optional list additional ggplot2 layers add plot","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualise distribution with automatically calculated quantile highlights (deprecated, use `margot_plot_hist`) — coloured_histogram_quantiles","text":"ggplot object representing histogram highlighted quantiles","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"function creates histogram specified column dataframe, highlighting mean one standard deviation mean. draws vertical lines mean (black) plus/minus one standard deviation (blue gold, respectively), arrows mean standard deviation marker. title plot includes capitalized column name, achieved using tools::toTitleCase().","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"coloured_histogram_sd(df, col_name, binwidth = 1)"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"df Dataframe containing data visualized. col_name Name column create histogram . column contain numeric data. binwidth Width bins histogram. Can adjusted finer coarser resolution distribution. Default 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"ggplot object representing histogram highlights mean   standard deviations. plot can printed modified .","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Distribution with Mean and Standard Deviation Highlights — coloured_histogram_sd","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `df_nz` is a dataframe with a numeric column 'forgiveness' # and a factor or integer column 'wave' for subsetting: df_19 <- dplyr::filter(df_nz, wave == 2019)  graph_density_of_exposure <- coloured_histogram_sd(   df = df_19,   col_name = \"forgiveness\",   binwidth = 0.5 # Adjust binwidth as needed ) } # } print(graph_density_of_exposure) #> Error in eval(expr, envir, enclos): object 'graph_density_of_exposure' not found"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"function creates histogram highlights specified range values visualize shifts data distributions. highlighted range can indicate areas interest, shifts distribution. visualization useful understanding implications causal contrasts, modified treatment policies. fill colour histogram dynamically adjusted based specified direction shift.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"coloured_histogram_shift(   df,   col_name,   binwidth = 1,   range_highlight = NULL,   shift = \"up\",   show_avg_line = TRUE )"},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"df dataframe containing variable interest. col_name name column `df` visualized histogram. numeric variable. binwidth width bins histogram. Default 1. Adjust based distribution scale data create meaningful visualization. range_highlight numeric vector length 2 specifying start end range highlight. `NULL`, range highlighted. shift character string indicating direction shift, \"\" highlighting gold \"\" highlighting dodger blue. default \"\". show_avg_line logical value indicating whether display vertical line representing average value specified column using red dashed line. Default `TRUE`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"`ggplot` object representing histogram specified highlights. object can printed modified using `ggplot2` functions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/coloured_histogram_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Shifts in Data Distributions with Highlighted Ranges — coloured_histogram_shift","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming df_nz is your dataframe and it includes a numeric variable 'forgiveness' # Filter to a specific subset, for example, wave 2019 df_19 <- dplyr::filter(df_nz, wave == 2019)  # Create and print the histogram graph_density_of_exposure <- coloured_histogram_shift(   df = df_19,   shift = \"down\",   col_name = \"forgiveness\",   binwidth = .5, # Adjust binwidth for your data   range_highlight = c(3.9, 10) ) print(graph_density_of_exposure) } # }"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"function calculates either difference average treatment effects (ATE) relative risk ratio (RRR) two independent subgroups. subgroup represented list includes estimated effect (theta) standard error (std.error) effect. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc. subgroups expected outputs `lmtp::lmtp_contrast()` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"","code":"compute_difference(group1, group2, type = \"RD\")"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"group1 list containing estimated effect standard error subgroup 1. Expected structure: list(vals = data.frame(theta = x, std.error = y)). group2 list containing estimated effect standard error subgroup 2. Expected structure: list(vals = data.frame(theta = x, std.error = y)). type character string specifying type calculation. \"RD\" risk difference (default), \"RR\" relative risk ratio.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high` type \"RD\",           `rrr`, `std_error_log`, `conf_low`, `conf_high` type \"RR\", rounded 4 decimal places.           Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Average Treatment Effects or Relative Risk Ratio Between Two Subgroups — compute_difference","text":"","code":"group1 <- list(vals = data.frame(theta = 100, std.error = 10)) group2 <- list(vals = data.frame(theta = 90, std.error = 5)) output_rd <- compute_difference(group1, group2) #> Error in glue(\"the difference in average treatment effects is {results$mean_difference} with a standard error of {results$std_error} and a 95% ci of [{results$conf_low}, {results$conf_high}].\"): could not find function \"glue\" cat(output_rd$interpretation)  # Print the interpretation for risk difference #> Error in eval(expr, envir, enclos): object 'output_rd' not found  group1 <- list(vals = data.frame(theta = 3.19, std.error = 0.393)) group2 <- list(vals = data.frame(theta = 1.23, std.error = 0.228)) output_rr <- compute_difference(group1, group2, type = \"RR\") #> Error in glue(\"the difference in the relative risk ratio between the focal group and the reference group is {results$rrr} with a standard error of {results$std_error_log} and a 95% ci of [{results$conf_low}, {results$conf_high}].\"): could not find function \"glue\" cat(output_rr$interpretation)  # Print the interpretation for relative risk ratio #> Error in eval(expr, envir, enclos): object 'output_rr' not found"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"function calculates difference means, standard error difference, 95 list includes mean (theta) standard error (std.error) group. result includes data frame interpretation string formatted easy use `glue::glue` Quarto documents etc","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"compute_difference_means(group1, group2)"},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"group1 list containing mean standard error group 1. Expected structure: list(vals = list(theta = x, std.error = y)). group2 list containing mean standard error group 2. Expected structure: list(vals = list(theta = x, std.error = y)).","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"list containing:         - `results`: data frame columns `mean_difference`, `std_error`, `conf_low`, `conf_high`,           rounded 4 decimal places. Suitable direct use reporting.         - `interpretation`: string providing formatted interpretation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_difference_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Difference in Means, Standard Error, and Confidence Intervals Between Two Groups — compute_difference_means","text":"","code":"group1 <- list(vals = list(theta = 100, std.error = 10)) group2 <- list(vals = list(theta = 90, std.error = 5)) output <- compute_difference_means(group1, group2) cat(output$interpretation)  # Print the interpretation #> The difference in means is 10 with a standard error of 11.1803 and a 95% CI of [-11.9135, 31.9135]."},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Qini Curves for Causal Forest and Multi-Arm Causal Forest — compute_qini_curves","title":"Compute Qini Curves for Causal Forest and Multi-Arm Causal Forest — compute_qini_curves","text":"Computes Qini curves causal forest multi-arm causal forest using maq package.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Qini Curves for Causal Forest and Multi-Arm Causal Forest — compute_qini_curves","text":"","code":"compute_qini_curves(tau_hat, Y, W = NULL, W_multi = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Qini Curves for Causal Forest and Multi-Arm Causal Forest — compute_qini_curves","text":"tau_hat Matrix vector estimated treatment effects. Y Vector observed outcomes. W Vector treatment assignments binary treatment. W_multi Factor treatment assignments multi-arm treatment.","code":""},{"path":"https://go-bayes.github.io/margot/reference/compute_qini_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Qini Curves for Causal Forest and Multi-Arm Causal Forest — compute_qini_curves","text":"data frame containing Qini curve data plotting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Formula for Regression Models — construct_formula","title":"Construct a Formula for Regression Models — construct_formula","text":"function dynamically constructs regression formula based provided parameters. supports incorporating splines continuous variables can handle interaction terms, including subclass variable. function ensures subclass variable redundantly included baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"construct_formula(   Y,   X = 1,   baseline_vars,   continuous_X = FALSE,   splines = FALSE,   subclass = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Formula for Regression Models — construct_formula","text":"Y string specifying dependent variable model. X string specifying independent treatment exposure variable; defaults 1 (intercept model). baseline_vars character vector baseline covariate names include model. continuous_X logical indicating whether `X` continuous variable; TRUE `splines` TRUE, applies spline transformation `X`. splines logical indicating whether apply spline transformations treatment variable `X`. subclass optional string specifying subclass variable interaction `X` baseline covariates.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Formula for Regression Models — construct_formula","text":"string representing constructed formula use regression modeling functions like `glm`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/construct_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Formula for Regression Models — construct_formula","text":"","code":"# Example with basic interaction terms without subclass: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), FALSE, FALSE) #> [1] \"health_outcome ~ treatment * ( age+sex )\"  # Example with spline transformation for a continuous treatment: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\"), TRUE, TRUE) #> [1] \"health_outcome ~ bs( treatment ) * ( age+sex )\"  # Example including a subclass variable: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), FALSE, FALSE, \"region\") #> [1] \"health_outcome ~ region * ( treatment * ( age+sex+income ) )\"  # Example with continuous treatment, splines, and subclass interaction: construct_formula(\"health_outcome\", \"treatment\", c(\"age\", \"sex\", \"income\"), TRUE, TRUE, \"region\") #> [1] \"health_outcome ~ region * ( bs( treatment ) * ( age+sex+income ) )\""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"function processes wide format dataframe filter create list dataframes based levels specified factor exposure variable. separates dataframes based level factor variable, one present. continuous variables specified, returns dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"create_filtered_wide_dataframes(dat_wide, exposure_vars)"},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"dat_wide wide format dataframe contains exposure variables. exposure_vars character vector listing names exposure variables. vector must include least one valid variable name dataframe.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"list dataframes, corresponding level factor exposure variable         factor present; otherwise, single dataframe arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_filtered_wide_dataframes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Filtered Wide Dataframes Based on Exposure Variables — create_filtered_wide_dataframes","text":"","code":"# Assuming wide_data is a dataframe and \"exposure_var\" includes factor or continuous variables: list_filtered_df <- create_filtered_wide_dataframes(wide_data, c(\"exposure_var1\", \"exposure_var2\")) #> Error in eval(expr, envir, enclos): object 'wide_data' not found # Access individual filtered dataframe if factor variables present: q1_df <- list_filtered_df[[\"tile_1\"]]  # For factor level \"tile_1\" #> Error in eval(expr, envir, enclos): object 'list_filtered_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"function divides numeric variable categories based either quantile breaks custom-specified breaks, creates ordered factor variable informative labels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"","code":"create_ordered_variable(   df,   var_name,   n_divisions = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   custom_breaks = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"df data frame containing variable divided categories. var_name name variable within data frame divide categories. n_divisions number quantile divisions create. Required custom_breaks provided. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". ties.method character string specifying ties handled calculating quantiles. Must one \"first\", \"last\", \"random\", \"ordered\", \"average\". NULL (default), set \"last\" cutpoint_inclusive \"upper\", \"first\" cutpoint_inclusive \"lower\". custom_breaks numeric vector break points use categorization. provided, overrides quantile-based division specified n_divisions.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"input data frame additional column representing ordered factor variable.         new column name original variable name \"_cat\" appended.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"function creates categories based either quantile breaks custom-specified breaks. categorizes values breaks, creating ordered factor variable. using quantile breaks (custom_breaks NULL): - function creates quantile breaks based specified number divisions. - number unique values variable less requested number divisions,   function adjust number divisions issue warning. using custom breaks: - lowest highest values data included custom breaks,   automatically added warning issued. - Custom breaks sorted de-duplicated use. `cutpoint_inclusive` parameter determines whether cutpoint values included lower upper category. example, cutpoint 40: - \"lower\", interval [40, 50) - \"upper\", interval (30, 40] `ties.method` parameter specifies handle tied values calculating quantiles. recommended use method consistent `cutpoint_inclusive`: - Use \"first\" \"last\" ensure consistency \"lower\" \"upper\" respectively. - \"average\" recommended may lead inconsistent results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"- Using \"average\" `ties.method` generate warning due potential inconsistencies. - using custom breaks, ensure breaks cover entire range data   avoid unexpected behavior.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Ordered Variable Based on Quantile Breaks or Custom Breaks with Informative Labels — create_ordered_variable","text":"","code":"df <- data.frame(x = rnorm(100))  # Using quantile breaks result1 <- create_ordered_variable(df, \"x\", n_divisions = 4) #> Summary of x_cat : #>  #> [-2.6,-0.4]  (-0.4,0.1]   (0.1,0.6]   (0.6,2.8]  #>          25          25          25          25   # Using custom breaks result2 <- create_ordered_variable(df, \"x\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Warning: Lowest break is higher than the minimum value. Adding minimum value to breaks. #> Warning: Highest break is lower than the maximum value. Adding maximum value to breaks. #> Summary of x_cat : #>  #> [-2.6,-2.0] (-2.0,-1.0]  (-1.0,0.0]   (0.0,1.0]   (1.0,2.0]   (2.0,2.8]  #>           3          11          32          35          16           3   # Explicitly setting cutpoint_inclusive and ties.method result3 <- create_ordered_variable(df, \"x\", n_divisions = 3,                                    cutpoint_inclusive = \"lower\",                                    ties.method = \"first\") #> Summary of x_cat : #>  #> [-2.6,-0.2)  [-0.2,0.5)   [0.5,2.8]  #>          33          33          34"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"function deprecated. Please use `create_ordered_variable()` instead. Create Ordered Variable Custom Breaks Auto-generated Labels function creates ordered categorical variable dataframe based user-specified breaks. automatically generates labels reflecting break points handles various edge cases.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"create_ordered_variable_custom(   df,   var_name,   breaks,   include_lowest = TRUE,   right = TRUE,   cutpoint_inclusive = \"upper\",   inf_label = \"Inf\",   neg_inf_label = \"-Inf\" )"},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"df data frame containing variable transformed. var_name name numeric variable within data frame converted ordered factor. variable ideally continuous. breaks numeric vector specifying breakpoints intervals. breakpoints cover entire range variable. include_lowest Logical, lowest value included first interval? Default TRUE. right Logical, intervals closed right (open left)? Default TRUE. cutpoint_inclusive character string specifying whether cutpoints included lower upper category. Must either \"lower\" \"upper\". Default \"upper\". inf_label string use infinity labels. Default \"Inf\". neg_inf_label string use negative infinity labels. Default \"-Inf\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"Returns data frame additional column representing ordered factor variable.         new column named combining original variable name suffix \"_cat\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_ordered_variable_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_ordered_variable_custom (Deprecated) — create_ordered_variable_custom","text":"","code":"df <- data.frame(x = runif(100, 0, 10)) df_updated <- create_ordered_variable_custom(df, \"x\", c(0, 2, 5, 10)) #> Warning: `create_ordered_variable_custom()` was deprecated in margot 1.0.0. #> ℹ Please use `create_ordered_variable()` instead. #> Summary of x_cat : #>  #>  [0.0,2.0)  [2.0,5.0) [5.0,10.0]  #>         20         24         56"},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Tau Hat Plot — create_tau_hat_plot","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"Creates histogram plot tau hat values treatment comparison.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"","code":"create_tau_hat_plot(tau_hat, outcome)"},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"tau_hat matrix estimated treatment effects. outcome character string specifying name outcome variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_tau_hat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Tau Hat Plot — create_tau_hat_plot","text":"ggplot object representing distribution tau hat values.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transition matrix for state transitions — create_transition_matrix","title":"Create transition matrix for state transitions — create_transition_matrix","text":"satisify positivity assumption causal inference, must ensure exposure occurs data. function computes transition matrix given state variable across subjects, tracking changes consecutive observations. function handles numeric factor state variables, excluding NA values transition count.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"create_transition_matrix(data, state_var, id_var)"},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transition matrix for state transitions — create_transition_matrix","text":"data data frame containing observations. state_var name state variable column `data` string. variable tracks state changes analyzed. id_var name identifier variable column `data` string. variable distinguishes different subjects entities.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transition matrix for state transitions — create_transition_matrix","text":"matrix indicating number transitions states. rows represent initial state (''), columns represent subsequent state (''). Diagonal entries indicate number times state change, -diagonal entries indicate transitions one state another.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create transition matrix for state transitions — create_transition_matrix","text":"function explicitly excludes NA values transition matrix calculation. treats numeric state variables converting factors, ensuring consistent analysis approach numeric factor types.","code":""},{"path":"https://go-bayes.github.io/margot/reference/create_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transition matrix for state transitions — create_transition_matrix","text":"","code":"df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") print(transition_matrix) #>     to #> from 0 1 #>    0 0 2 #>    1 1 0"},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":null,"dir":"Reference","previous_headings":"","what":"df_nz: Example Data Frame — df_nz","title":"df_nz: Example Data Frame — df_nz","text":"dataset contains simulated data New Zealand Attitudes Values Study.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df_nz: Example Data Frame — df_nz","text":"","code":"data(df_nz)"},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df_nz: Example Data Frame — df_nz","text":"data frame X rows Y variables: age participant age years agreeableness Score agreeableness scale. Includes items : . sympathize others' feelings. ii. interested people's problems. (reversed) iii. feel others' emotions. iv. really interested others. (reversed)  ... variables","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df_nz: Example Data Frame — df_nz","text":"Simulated data. Copyright (c) 2024 margot package contributors.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"df_nz: Example Data Frame — df_nz","text":"dataset licensed custom license. may use data non-commercial purposes appropriate credit, redistribution data form, including modified versions, permitted protect privacy. code margot package licensed GNU General Public License (GPL) v3.0. can redistribute /modify terms GPL published Free Software Foundation. See <http://www.gnu.org/licenses/>.","code":""},{"path":"https://go-bayes.github.io/margot/reference/df_nz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"df_nz: Example Data Frame — df_nz","text":"","code":"data(df_nz) head(df_nz) #>   id wave      age agreeableness alcohol_frequency alcohol_intensity #> 1  1 2018 40.31341      6.235760          4.031045         6.0138428 #> 2  1 2019 41.33449      6.216993          3.964873        10.0320085 #> 3  1 2020 42.24450      6.539885          3.950068         9.9997619 #> 4  2 2018 43.85094      6.790531          4.024855         1.0030336 #> 5  2 2019       NA            NA                NA                NA #> 6  2 2020 45.80632      5.484677          3.985040         0.9976499 #>   alert_level_combined_lead   belong belong_accept belong_beliefs #> 1                  no_alert 4.958810      7.000000       4.964069 #> 2                  no_alert 6.039168      6.954222       5.985981 #> 3                  no_alert 5.382137      6.017268       2.950767 #> 4                      <NA> 6.311607      5.976047       6.018113 #> 5                  no_alert       NA            NA             NA #> 6                      <NA> 5.991122      6.015296       5.985946 #>   belong_routside_reversed  bodysat born_nz charity_donate conscientiousness #> 1                 2.978316 1.969601       1     0.00000000          5.781907 #> 2                 5.046594 3.039433       1     0.01373293          6.004211 #> 3                 7.000000 6.042476       1   399.96241829          4.719577 #> 4                 6.980109 5.958325       1   199.96546646          5.238591 #> 5                       NA       NA       1             NA                NA #> 6                 5.972425 6.030989       1   200.03938746          6.467995 #>   edu emotion_regulation_change_thinking_to_calm #> 1   8                                   6.999934 #> 2   8                                   6.979494 #> 3   8                                   6.981677 #> 4   7                                   4.963946 #> 5   7                                         NA #> 6   7                                   2.003005 #>   emotion_regulation_hide_neg_emotions emotion_regulation_out_control #> 1                             6.044651                       2.028738 #> 2                             6.984203                       1.984919 #> 3                             6.043920                       2.018791 #> 4                             5.024856                       1.000000 #> 5                                   NA                             NA #> 6                             4.995746                       1.000000 #>   emp_job_sat emp_job_secure emp_job_valued employed eth_cat extraversion #> 1    5.971694       7.000000       6.023997        1    euro     4.740896 #> 2    6.019789       6.967036       6.022545        1    euro     4.737648 #> 3    7.000000       6.974346       6.006828        1    euro     4.724690 #> 4    5.987723       6.976047       7.000000        1    euro     3.960051 #> 5          NA             NA             NA       NA    euro           NA #> 6    6.032520       6.961107       5.986527        1    euro     2.764532 #>   forgiveness gen_cohort gratitude hlth_bmi hlth_fatigue hlth_height #> 1    4.020353      gen_X  6.986113 34.61469    0.9535594    1.856696 #> 2    4.969327      gen_X  7.000000 34.05344    2.0103681    1.826995 #> 3    5.366853      gen_X  6.999204 35.19452    2.9981118    1.786924 #> 4    5.618090      gen_X  6.367532 19.84119    0.9943821    1.620493 #> 5          NA      gen_X        NA       NA           NA          NA #> 6    5.315945      gen_X  6.683664 19.87911    0.9742263    1.614109 #>   hlth_sleep_hours hlth_weight home_owner honesty_humility hours_charity #> 1         8.546112   115.99149          1         5.954770   0.008159268 #> 2         8.019429   113.99033         NA         3.970874   0.000000000 #> 3         7.995631   117.95184          1         4.988354   0.028743272 #> 4         7.004173    54.01207          1         6.969159   6.011909720 #> 5               NA          NA         NA               NA            NA #> 6         8.018394    53.95457          1         7.000000   0.000000000 #>   hours_exercise household_inc impermeability_group kessler_depressed #> 1     0.51959112        200000             2.012835        0.00000000 #> 2     0.01974342        200000             4.964448        0.00000000 #> 3     0.00000000        140000             2.030814        0.00000000 #> 4     1.98318873        200000             4.994408        0.00000000 #> 5             NA            NA                   NA                NA #> 6     7.02405270        160000             2.008591        0.02017855 #>   kessler_effort kessler_hopeless kessler_latent_anxiety #> 1      0.9546004       0.00000000              0.9685371 #> 2      0.9633998       0.02006575              0.9830208 #> 3      1.9808154       0.04983561              1.7149373 #> 4      1.0289347       1.04402955              0.9997136 #> 5             NA               NA                    NaN #> 6      0.9598355       0.00000000              0.6297783 #>   kessler_latent_depression kessler_nervous kessler_restless kessler_worthless #> 1               0.037011885      0.98849863        0.9815225       0.046843363 #> 2               0.000000000      0.95881162        0.9716739       0.021033094 #> 3               0.006337577      3.03015091        0.0000000       0.009060714 #> 4               0.377568407      0.99305306        0.9758989       0.026907402 #> 5                       NaN              NA               NA                NA #> 6               0.003030027      0.02515866        1.0125775       0.000000000 #>   kessler6_sum lifemeaning  lifesat lifesat_ideal lifesat_satlife male #> 1     3.044502    6.468932 6.004578      5.970138        6.018526    1 #> 2     2.960963    5.978561 5.996101      6.018253        5.978932    1 #> 3     5.005375    5.549235 5.969862      5.961114        6.015522    1 #> 4     4.008829    5.971437 6.472409      6.000709        7.000000    0 #> 5           NA          NA       NA            NA              NA    0 #> 6     2.007682    5.954844 6.045588      5.016755        7.000000    0 #>   meaning_purpose meaning_sense  modesty neighbourhood_community neuroticism #> 1        6.012352      7.000000 6.786189                6.951882    2.543777 #> 2        5.975751      6.044783 6.002267                6.005449    3.049655 #> 3        4.956256      5.997665 5.702049                5.986452    2.960180 #> 4        6.024632      6.043560 6.955113                3.012109    4.224377 #> 5              NA            NA       NA                      NA          NA #> 6        5.979999      5.952246 6.977462                2.010986    4.456901 #>        nwi nz_dep2018 nzsei_13_l openness parent partner perfectionism #> 1 8.020139   5.953996         48 6.502722      1       1      4.303349 #> 2 6.668893   6.023145         65 6.469405      1       1      3.670650 #> 3 4.618780   6.024971         65 6.237941      1       1      3.337095 #> 4 7.627521   3.048911         69 2.031197      1       1      2.363609 #> 5       NA   2.967774         69       NA     NA      NA            NA #> 6 5.640812   3.036816         72 3.473353      1       1      2.953873 #>   permeability_individual pers_agreeable_feel_others_emotions #> 1                7.000000                            6.038855 #> 2                7.000000                            6.005890 #> 3                6.964188                            6.010749 #> 4                5.027991                            7.000000 #> 5                      NA                                  NA #> 6                5.021921                            7.000000 #>   pers_agreeable_no_interest_others pers_agreeable_no_interest_others_probs #> 1                          6.028096                                6.017042 #> 2                          5.956827                                6.025382 #> 3                          7.000000                                7.000000 #> 4                          6.983117                                6.037968 #> 5                                NA                                      NA #> 6                          6.037822                                2.013026 #>   pers_agreeable_sympathise_others pers_conscientious_chores_done #> 1                         7.000000                       5.003450 #> 2                         7.000000                       5.978509 #> 3                         5.951258                       2.976528 #> 4                         7.000000                       7.000000 #> 5                               NA                             NA #> 6                         6.960945                       5.998471 #>   pers_conscientious_forget_putback pers_conscientious_like_order #> 1                          6.035918                      5.972150 #> 2                          6.048918                      5.988758 #> 3                          2.951705                      5.991320 #> 4                          1.003034                      6.969415 #> 5                                NA                            NA #> 6                          7.000000                      6.977218 #>   pers_conscientious_make_mess pers_extraversion_dont_talkalot #> 1                     5.955233                        6.040438 #> 2                     6.045258                        3.985668 #> 3                     6.990426                        4.970881 #> 4                     5.961425                        6.012815 #> 5                           NA                              NA #> 6                     6.045320                        3.036480 #>   pers_extraversion_keepbackground pers_extraversion_life_party #> 1                         3.998360                     6.039570 #> 2                         5.020996                     4.998691 #> 3                         4.991396                     6.031292 #> 4                         4.995249                     2.963147 #> 5                               NA                           NA #> 6                         2.957594                     3.014112 #>   pers_extraversion_talk_peopleparties pers_honestyhumility_deserve_more #> 1                             3.006411                          5.986706 #> 2                             5.025187                          3.976311 #> 3                             2.966148                          5.973563 #> 4                             1.976786                          7.000000 #> 5                                   NA                                NA #> 6                             2.009894                          7.000000 #>   pers_honestyhumility_feel_entitled #> 1                           7.000000 #> 2                           6.950590 #> 3                           6.038719 #> 4                           7.000000 #> 5                                 NA #> 6                           7.000000 #>   pers_honestyhumility_pleasure_expensivegoods #> 1                                     5.022716 #> 2                                     1.984692 #> 3                                     2.023260 #> 4                                     6.993182 #> 5                                           NA #> 6                                     6.952615 #>   pers_honestyhumility_seen_expensivecar pers_neuroticism_mood_swings #> 1                               5.955832                     1.994415 #> 2                               3.020957                     6.033852 #> 3                               6.048881                     2.045891 #> 4                               7.000000                     5.032754 #> 5                                     NA                           NA #> 6                               7.000000                     6.043157 #>   pers_neuroticism_mostly_relaxed pers_neuroticism_seldom_blue #> 1                        2.027604                     4.953003 #> 2                        1.977769                     2.038987 #> 3                        2.993304                     4.964138 #> 4                        4.966090                     1.964646 #> 5                              NA                           NA #> 6                        1.997013                     5.952084 #>   pers_neuroticism_upset_easily pers_openness_difficult_abstraction #> 1                      1.000000                            6.022979 #> 2                      2.021009                            4.962520 #> 3                      2.031607                            4.954873 #> 4                      5.002216                            2.012435 #> 5                            NA                                  NA #> 6                      3.993217                            4.987355 #>   pers_openness_good_imagination pers_openness_interested_abstraction #> 1                       7.000000                             6.014076 #> 2                       6.978520                             7.000000 #> 3                       6.995509                             6.048047 #> 4                       2.955771                             1.000000 #> 5                             NA                                   NA #> 6                       4.989866                             1.000000 #>   pers_openness_vivid_imagination pol_wing political_conservative #> 1                        7.000000 1.020237               1.000000 #> 2                        6.989238 1.000000               1.022343 #> 3                        6.960658 1.000000               1.042282 #> 4                        2.033375 4.014205               4.960227 #> 5                              NA       NA                     NA #> 6                        2.960342 3.969545               4.954690 #>   power_no_control_composite power_no_control_composite_reversed #> 1                   1.519361                            6.537026 #> 2                   3.457300                            4.531562 #> 3                   1.501127                            6.545508 #> 4                   1.011948                            7.000000 #> 5                        NaN                                 NaN #> 6                   1.000000                            7.000000 #>   power_others_control power_self_nocontrol pwb_standard_living #> 1             1.000000             2.025217            7.042358 #> 2             4.954861             1.999267            8.981462 #> 3             1.976260             1.035171            6.960540 #> 4             1.002600             1.000000            9.993654 #> 5                   NA                   NA                  NA #> 6             1.000000             1.037436            9.969491 #>   pwb_your_future_security pwb_your_health pwb_your_relationships regc_2022_l #> 1                 8.973228        7.023662               9.961455           2 #> 2                 7.963623        1.970227               9.038338           2 #> 3                 8.993340        7.984213               9.964077           2 #> 4                10.000000        9.954387              10.000000          13 #> 5                       NA              NA                     NA          13 #> 6                10.000000        9.986748               9.032489          13 #>   religion_believe_god religion_believe_spirit religion_bigger_denominations #> 1                    0                       1                       not_rel #> 2                    0                       0                       not_rel #> 3                    0                       1                       not_rel #> 4                    0                       0                       not_rel #> 5                   NA                      NA                          <NA> #> 6                    0                       1                       not_rel #>   religion_identification_level religion_perceive_religious_discrim #> 1                             1                            1.000000 #> 2                             1                            1.035010 #> 3                             1                            1.000000 #> 4                             1                            1.020197 #> 5                            NA                                  NA #> 6                             1                            1.000000 #>   religion_religious rumination rural_gch_2018_l sample_frame #> 1                  0 0.03677838                1          1.1 #> 2                  0 0.01604958                1          1.1 #> 3                  0 0.00000000                1          1.1 #> 4                  0 0.04074371                1          1.1 #> 5                 NA         NA                1          1.1 #> 6                  0 0.00000000                1          1.1 #>   sample_frame_opt_in sample_weights self_control_have_lots #> 1                   0      0.6495057               4.987928 #> 2                   0      0.7789180               3.001922 #> 3                   0      0.8119713               5.026771 #> 4                   0      0.4022481               5.033600 #> 5                   0             NA                     NA #> 6                   0      0.4794723               7.000000 #>   self_control_wish_more_reversed self_esteem selfesteem_failure_reversed #> 1                        2.024191    5.983263                    5.049517 #> 2                        2.035422    6.024637                    6.010825 #> 3                        2.027122    6.016682                    5.038861 #> 4                        2.962663    6.697360                    7.000000 #> 5                              NA          NA                          NA #> 6                        2.983433    6.285690                    7.000000 #>   selfesteem_postiveself selfesteem_satself sexual_satisfaction sfhealth #> 1               5.959428           6.976774            5.963785 2.370515 #> 2               5.995463           6.045321            5.031907 3.692035 #> 3               5.979329           6.956274            6.030893 5.708331 #> 4               5.959445           7.000000            6.047659 7.000000 #> 5                     NA                 NA                  NA       NA #> 6               6.020617           5.990747            3.965026 6.035785 #>   sfhealth_expect_worse_health_reversed sfhealth_get_sick_easier_reversed #> 1                              1.000000                          3.048580 #> 2                              1.000000                          7.000000 #> 3                              6.005024                          6.006699 #> 4                              7.000000                          6.961256 #> 5                                    NA                                NA #> 6                              3.991105                          7.000000 #>   sfhealth_your_health smoker  support support_help support_noguidance_reversed #> 1             3.047783      0 7.000000     6.972380                    6.999528 #> 2             3.014775      0 6.959343     7.000000                    6.997369 #> 3             5.022465      0 6.967418     7.000000                    7.000000 #> 4             6.977021      0 7.000000     7.000000                    7.000000 #> 5                   NA     NA       NA           NA                          NA #> 6             7.000000      0 7.000000     6.984364                    6.975150 #>   support_turnto vengeful_rumin year_measured #> 1       6.959850       3.975229             1 #> 2       7.000000       3.014252             1 #> 3       7.000000       2.626865             1 #> 4       6.994214       2.363377             1 #> 5             NA             NA             0 #> 6       7.000000       2.678659             1"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"function provides double robust approach estimating causal effects. first computes marginal effects using `causal_contrast_marginal` function, processes tabulates results using `tab_engine_marginal`. function handles continuous categorical variables, allows specification type effect measure causal estimation tabulation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"double_robust_marginal(   df,   Y,   X,   baseline_vars,   treat_0,   treat_1,   nsims,   cores,   family,   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   vcov = \"HC2\",   verbose = FALSE,   delta = 1,   sd = 1,   new_name,   estimand = c(\"ATE\", \"ATT\"),   type_causal = c(\"RR\", \"RD\"),   type_tab = c(\"RR\", \"RD\") )"},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"df data frame containing dataset analysis. Y name outcome variable string. X name treatment exposure variable string. baseline_vars vector covariate names included model. treat_0 reference level treatment variable. treat_1 treatment level treatment variable. nsims number simulations run, used bootstrap Monte Carlo methods. cores number processor cores use parallel computation. family description error distribution link function used model. weights name weights variable data frame, NULL weights used. continuous_X Logical, indicating whether treatment variable X continuous. splines Logical, indicating whether use spline functions continuous variables. vcov method use variance-covariance estimation. verbose Logical, indicating whether print detailed output computation. delta assumed smallest worthwhile effect, used E-value calculations tabulation. sd standard deviation effect estimate, used E-value calculations. new_name new name assign tabulated output, typically describing variable model. estimand Specifies target causal inference, \"ATE\" (Average Treatment Effect) \"ATT\" (Average Treatment Treated). type_causal type effect size (e.g., \"RR\" Risk Ratio \"RD\" Risk Difference) computed causal analysis. type_tab type effect size used tabulation results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"list containing two elements: `causal_results` results causal analysis,         `tab_results` tabulated results including E-values statistics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/double_robust_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Robust Marginal Estimation and Tabulation — double_robust_marginal","text":"","code":"# Assuming you have a dataset `df_ate` and necessary variables defined results <- double_robust_marginal(   df = df_ate,   Y = \"t2_kessler_latent_anxiety_z\",   X = \"treatment_var\",   baseline_vars = c(\"age\", \"gender\"),   treat_1 = \"intervention\",   treat_0 = \"control\",   nsims = 200,   cores = 4,   family = \"gaussian\",   weights = TRUE,   continuous_X = FALSE,   splines = FALSE,   estimand = \"ATE\",   type_causal = \"RD\",   type_tab = \"RD\",   vcov = \"HC2\",   new_name = \"Test Model Effect\",   delta = 1,   sd = 1 ) #> Error in eval(expr, envir, enclos): object 'df_ate' not found"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Qini Data for Plotting — extract_qini_data","title":"Extract Qini Data for Plotting — extract_qini_data","text":"Extracts Qini curve data Qini object prepares plotting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Qini Data for Plotting — extract_qini_data","text":"","code":"extract_qini_data(qini_obj, arm_name, max_index)"},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Qini Data for Plotting — extract_qini_data","text":"qini_obj Qini object. arm_name Name treatment arm. max_index Maximum index extend curve .","code":""},{"path":"https://go-bayes.github.io/margot/reference/extract_qini_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Qini Data for Plotting — extract_qini_data","text":"data frame extracted Qini data.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Results by Comparison — group_results_by_comparison","title":"Group Results by Comparison — group_results_by_comparison","text":"Groups results multi-arm causal forest analysis comparison levels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Results by Comparison — group_results_by_comparison","text":"","code":"group_results_by_comparison(results_list)"},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Results by Comparison — group_results_by_comparison","text":"results_list list results margot_multi_arm_causal_forest.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_results_by_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Results by Comparison — group_results_by_comparison","text":"list grouped results comparison levels.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Annotate Treatment Effect Estimates — group_tab","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"function arranges annotates data frame based specified types treatment effect estimates (RR RD). supports different sorting options including default descending, alphabetical, custom order.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"group_tab(   df,   type = c(\"RR\", \"RD\"),   order = c(\"default\", \"alphabetical\", \"custom\"),   custom_order = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"df Data frame containing variables interest. type Type treatment effect analyze. Expected values 'RR' Risk Ratio 'RD' Risk Difference. Defaults 'RR'. order Specifies order outcomes arranged. Can 'default' descending order estimate, 'alphabetical' alphabetical order outcome, 'custom' user-defined order. Default 'default'. custom_order vector custom ordering outcomes, applicable `order` set 'custom'. vector containing outcomes desired order.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"data frame arranged based specified order annotated treatment effect estimates, estimate labels, evidence value annotations.","code":""},{"path":"https://go-bayes.github.io/margot/reference/group_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and Annotate Treatment Effect Estimates — group_tab","text":"","code":"# Example using Risk Ratio (RR) and default sorting result_df <- group_tab(df = analysis_df, type = 'RR') #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Error in eval(expr, envir, enclos): object 'analysis_df' not found  # Example using Risk Difference (RD) with alphabetical sorting result_df <- group_tab(df = analysis_df, type = 'RD', order = 'alphabetical') #> Error in eval(expr, envir, enclos): object 'analysis_df' not found  # Example using custom sorting order custom_order <- c(\"Outcome3\", \"Outcome1\", \"Outcome2\") result_df <- group_tab(df = analysis_df, type = 'RR', order = 'custom', custom_order = custom_order) #> Error in eval(expr, envir, enclos): object 'analysis_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from RDS File in a Specified Directory — here_read","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"Reads RDS file specified `name` directory defined `push_mods`, returning data frame stored within. function uses `` package resolve path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"here_read(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"name Character string specifying name RDS file read (without \".rds\" extension).","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"data frame specific R object stored RDS file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"`push_mods` variable must defined user's environment within package, pointing directory files read. presumed `push_mods` correctly set point existing directory path. function validate existence file throw error file exist.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from RDS File in a Specified Directory — here_read","text":"","code":"# Assuming `push_mods` is set in your environment to \"~/mydata\" # and you have previously saved an RDS file named \"my_saved_dataframe.rds\" in that directory my_df <- here_read(\"my_df\") #> Error in here_read(\"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"function deprecated removed future releases. reading data frames, consider using `here_read_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"here_read_arrow(name)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"name Character string specifying name Parquet file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from Parquet File in a Specified Directory (Deprecated) — here_read_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- here_read_arrow(\"my_dataset\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame from qs File in a Specified Directory — here_read_qs","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"Reads `.qs` file specified `name` directory defined `dir_path`, returning data frame stored within. function uses `qs` package efficiently read `.qs` files `` package construct file path consistent, platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"","code":"here_read_qs(name, dir_path)"},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"name Character string specifying name `.qs` file read (without \".qs\" extension). dir_path Character string specifying directory path file read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"data frame representing data stored specified `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"`dir_path` argument must point existing directory. function throw error specified file exist read `.qs` file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_read_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data Frame from qs File in a Specified Directory — here_read_qs","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have a directory path \"~/mydata\" # and you have previously saved a `.qs` file named \"my_dataset.qs\" in that directory my_df <- here_read_qs(\"my_dataset\", \"~/mydata\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame as RDS File in a Specified Directory — here_save","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Saves provided data frame RDS file using specified name, within directory defined `push_mods`. function uses `` package construct path, ensuring file paths built consistent platform-independent manner.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"here_save(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"df Data frame saved. object want persist disk. name Character string specifying base name file. \".rds\" extension automatically appended name.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"Invisible NULL. primary effect function side effect saving RDS file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"`push_mods` variable defined user's environment within package point directory files saved. assumed `push_mods` correctly set point valid directory path. function create directories; assumes specified directory exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame as RDS File in a Specified Directory — here_save","text":"","code":"# assuming `push_mods` is set in your environment to \"~/mydata\" my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save(my_df, \"my_df\") #> Error in here_save(my_df, \"my_df\"): object 'push_mods' not found"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"function deprecated removed future releases. saving data frames, consider using `here_save_qs` function.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"here_save_arrow(df, name)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"df Data frame saved. name Character string specifying base name file.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Parquet File in a Specified Directory (Deprecated) — here_save_arrow","text":"","code":"if (FALSE) { # \\dontrun{ my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_arrow(my_df, \"my_saved_dataframe\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to qs File in a Specified Directory — here_save_qs","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"Saves provided data frame `.qs` file using specified name, within directory defined `dir_path`. function leverages `qs` package write data frames `.qs` format efficient storage quick access R.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"","code":"here_save_qs(df, name, dir_path)"},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"df Data frame saved. object want persist disk `.qs` format. name Character string specifying base name file (without \".qs\" extension). dir_path Character string specifying directory path file saved.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"Invisible NULL. primary effect function side effect writing `.qs` file disk.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"`dir_path` argument must point existing directory. function create directories; assumes specified directory already exists.","code":""},{"path":"https://go-bayes.github.io/margot/reference/here_save_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to qs File in a Specified Directory — here_save_qs","text":"","code":"my_df <- data.frame(x = 1:5, y = letters[1:5]) here_save_qs(my_df, \"my_saved_dataframe\", \"~/mydata\") #> Error in qs::qsave(df, here::here(dir_path, paste0(name, \".qs\"))): For file ~/mydata/my_saved_dataframe.qs: Failed to open for writing. Does the directory exist? Do you have file permissions? Is the file name long? (>255 chars)"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"function takes list data frames, performs multiple imputation fill missing values using 'mice' package, combines imputed datasets single dataset. imputations performed separately data frame list, results combined 'mids' object, cleaned returned.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"impute_and_combine(   list_df,   m = 10,   exclude_vars = c(\"t0_sample_frame\", \"id\", \"t0_sample_origin_names_combined\") )"},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"list_df list containing data frames perform multiple imputation. m number multiple imputations perform data frame. exclude_vars vector variable names excluded imputation model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"data frame combines imputed datasets, unnecessary columns removed         row names reset.","code":""},{"path":"https://go-bayes.github.io/margot/reference/impute_and_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform multiple imputation on a list of data frames and combine the results — impute_and_combine","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming list_df is a list of data frames with missing values   imputed_data <- impute_and_combine(list_df, m = 5)   print(imputed_data) } # }"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate E-values for LMTP Output — lmtp_evalue_tab","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"function takes output `margot_tab_lmtp()`, contains estimates treatment effects, calculates E-values assess robustness estimates potential unmeasured confounding. E-values quantify minimum strength association, risk ratio scale, unmeasured confounder need treatment outcome, fully explain away observed association. function supports risk differences (RD) risk ratios (RR) scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"lmtp_evalue_tab(x, delta = 1, sd = 1, scale = c(\"RD\", \"RR\"))"},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"x data frame output `margot_tab_lmtp()` containing estimates interest. delta hypothesized increase outcome, used `scale` \"RD\". Default 1. sd standard deviation outcome, used `scale` \"RD\". Default 1. scale character string indicating scale estimate: \"RD\" risk difference, \"RR\" risk ratio. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"data frame similar `x`, additional columns E-Value lower bound, excluding   'standard_error' column.","code":""},{"path":"https://go-bayes.github.io/margot/reference/lmtp_evalue_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate E-values for LMTP Output — lmtp_evalue_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'tab_contrast_hours_charity_z_null' is a data frame output from `margot_lmtp_tab()` lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RD\") lmtp_evalue_tab(tab_contrast_hours_charity_z_null, scale = \"RR\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_causal_forest","text":"function wrapper grf::causal_forest runs multiple GRF causal forest models specified outcome variables. calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections, Qini curves. also prepares data policy tree visualization, using specified proportion data training.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_causal_forest","text":"","code":"margot_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10,   save_models = FALSE,   train_proportion = 0.8 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W vector binary treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.8.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_causal_forest","text":"list containing: results list model results, one outcome variable. model result includes: ateAverage treatment effect test_calibrationCalibration test results custom_tableCustom evaluation table tau_hatIndividual treatment effect estimates rate_resultRank Average Treatment Effect (compute_rate TRUE) dr_scoresDouble robust scores policy_tree_depth_1Policy tree depth 1 top_varsTop variables importance blp_topBest linear projection results top variables policy_tree_depth_2Policy tree depth 2, trained train_proportion non-missing data split_variablesNames variables used splits policy_tree_depth_2 plot_dataData prepared policy tree visualization, using remaining proportion non-missing data qini_dataData frame containing Qini curve data plotting  combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"function computes sample weights based gender achieve target gender balance population. assumes binary gender classification 1 represents male 0 represents female.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"","code":"margot_compute_gender_weights(data, male_col = \"male\", target_male_prop = 0.5)"},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"data data frame containing gender information. male_col Character string specifying name column `data` indicates male gender (1 male, 0 female). Default \"male\". target_male_prop Numeric value 0 1 specifying target proportion males population. Default 0.5 (50% male).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"numeric vector sample weights. weight corresponds row input data frame.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"function calculates weights , applied, adjust sample match specified target gender proportion. upweights underrepresented gender downweights overrepresented gender.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_compute_gender_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gender-Based Sample Weights — margot_compute_gender_weights","text":"","code":"# Create a sample dataset dat <- data.frame(id = 1:100, male = sample(c(0, 1), 100, replace = TRUE, prob = c(0.7, 0.3)))  # Compute weights weights <- margot_compute_gender_weights(dat, male_col = \"male\", target_male_prop = 0.5)  # Check weight distribution table(round(weights, 3)) #>  #> 0.833  1.25  #>    60    40"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Based on Exposure Variables — margot_filter","title":"Filter Data Based on Exposure Variables — margot_filter","text":"function filters dataframe based levels single factor variable arranges dataframe identifier continuous variables present.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Based on Exposure Variables — margot_filter","text":"","code":"margot_filter(dat_wide, exposure_vars, sort_var = \"id\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Based on Exposure Variables — margot_filter","text":"dat_wide Dataframe filter. exposure_vars Vector names exposure variables consider. sort_var Optional; variable sort dataframes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Based on Exposure Variables — margot_filter","text":"list dataframes filtered levels factor variable arranged identifier.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"function wrapper grf::causal_forest runs multiple GRF causal forest models specified outcome variables. calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"","code":"margot_grf_causal_forest(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10,   save_models = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Causal Forest Models with Enhanced Features — margot_grf_causal_forest","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"function calculates new evaluation tables specified outcome variables using subset condition, combines single data frame. uses models generated `model_grf_causal_forest` similar functions create tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"","code":"margot_grf_subset_table(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\",   debug = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"model_results list model results `model_causal_forest` similar functions. Note functions called `save_models = TRUE`. outcome_vars Optional. character vector outcome variable names. NULL, function use models input. subset_condition logical vector indicating subset data use. Default NULL. scale character string indicating scale use `margot_model_evalue`. Default \"RD\". debug Logical. TRUE, print debug information. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"data frame combining custom evaluation tables specified subset condition.         full models available, returns NULL prints reminder set save_models = TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"function uses `margot_model_evalue` calculate evaluation metrics model subset data specified `subset_condition`. outcome_vars provided, use models input. function can handle models without \"model_\" prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"Ensure `model_results` list contains full model objects specified `outcome_vars`. requires setting `save_models = TRUE` calling original GRF model function.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_grf_subset_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_grf_subset_table","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming result_outcomes_social_test is your results object from model_grf_causal_forest subset_condition <- X_toy[, \"t0_self_esteem_z\"] < 0 result_subset <- margot_grf_subset_table(   model_results = result_outcomes_social_test,   outcome_vars = outcomes_social,   subset_condition = subset_condition,   scale = \"RD\" ) print(result_subset) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"function interprets output causal effect analysis, providing textual descriptions causal effect estimates. categorises strength evidence causality based E-values confidence intervals, generates detailed interpretation effect estimates according specified causal scales (.e., \"causal_difference\" \"risk_ratio\") estimands. function now supports interpreting results causal difference risk ratio scales.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"","code":"margot_interpret_table(df, causal_scale, estimand, order = \"default\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"df Data frame containing causal effect estimates, expected include columns outcome names, effect estimates (either differences ratios), confidence intervals, E-values, summary estimate label. structure `df` align specified `causal_scale`. causal_scale Character string specifying causal scale used analysis. Currently supports \"causal_difference\" differences means medians, \"risk_ratio\" comparing ratios probabilities risks. estimand Character string indicating type causal estimand interpreted: \"PATE\" (Population Average Treatment Effect), \"ATE\" (Average Treatment Effect), \"ATT\" (Average Treatment Effect Treated), \"CATE\" (Conditional Average Treatment Effect).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"character vector containing detailed interpretation outcome `df`, including type estimand, causal contrast, E-values, strength evidence causality. interpretation includes whether evidence causality based E-value confidence interval, tailored specified causal scale.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_interpret_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret and Describe Causal Effect Estimates Using E-values — margot_interpret_table","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `group_tab_output` is the result from a causal analysis margot_interpret_table(group_tab_output, \"causal_difference\", \"ATE\") margot_interpret_table(group_tab_output, \"risk_ratio\", \"PATE\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process LMTP Models — margot_lmtp","title":"Batch Process LMTP Models — margot_lmtp","text":"function runs multiple Longitudinal Modified Treatment Policy (LMTP) models specified outcome variables, calculates contrasts, creates evaluation tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"margot_lmtp(   data,   outcome_vars,   trt,   shift_functions = list(),   include_null_shift = TRUE,   lmtp_model_type = lmtp::lmtp_tmle,   contrast_type = c(\"pairwise\", \"null\"),   contrast_scale = c(\"additive\", \"rr\", \"or\"),   lmtp_defaults = list(),   n_cores = parallel::detectCores() - 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process LMTP Models — margot_lmtp","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. trt character string specifying treatment variable. shift_functions list shift functions applied. function take `data` `trt` arguments. include_null_shift Logical, whether include null shift. Default TRUE. lmtp_model_type LMTP model function use. Default lmtp_tmle. contrast_type Type contrasts compute: \"pairwise\" \"null\". Default \"pairwise\". contrast_scale Scale contrasts: \"additive\", \"rr\", \"\". Default \"additive\". lmtp_defaults list default parameters LMTP models. n_cores Number cores use parallel processing. Default detectCores() - 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process LMTP Models — margot_lmtp","text":"list containing: models list LMTP models outcome shift function. contrasts list contrasts computed outcome. individual_tables list individual tables contrast outcome. combined_tables list combined tables contrast type across outcomes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process LMTP Models — margot_lmtp","text":"","code":"if (FALSE) { # \\dontrun{ fit <- margot_lmtp(   data = my_data,   outcome_vars = c(\"outcome1\", \"outcome2\"),   trt = \"treatment\",   shift_functions = list(gain = gain_function, loss = loss_function),   lmtp_defaults = list(baseline = c(\"confounder1\", \"confounder2\"),                        mtp = TRUE,                        folds = 10,                        outcome_type = \"continuous\") ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"function first creates summary table output `lmtp::lmtp_contrast()` using `margot_tab_lmtp`, specifying desired scale (RD RR) new name row. calculates E-values estimates table assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"margot_lmtp_evalue(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"lmtp_output output `lmtp::lmtp_contrast()`, summarized analyzed E-values. scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". new_name Character string name row output summary table, representing treatment contrast. name applied first row summary table. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"data frame original estimates E-values. table includes columns estimate (either RD RR), E-Value, E-Value lower bound, excluding 'standard_error' column.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine LMTP Summary and E-Value Calculation — margot_lmtp_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `contrast_output` is the result from `lmtp::lmtp_contrast()` summary_evalues <- margot_lmtp_evalue(   lmtp_output = contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" ) print(summary_evalues) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"margot_lmtp_tab(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_lmtp_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_lmtp_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_lmtp_tab(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" )  print(group_tab_all_perceived_support) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-transform Variables in a Data Frame — margot_log_transform_vars","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"function applies log(x + 1) transformation specified variables data frame. handles NA values, allows exceptions, can applied variables specific prefixes.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"","code":"margot_log_transform_vars(   data,   vars,   exceptions = character(0),   prefix = \"log_\",   keep_original = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data data frame process. vars character vector variable names tidyselect helper (e.g., starts_with(\"hours_\")). exceptions character vector variable names exclude transformation. prefix string prepend names transformed variables. Default \"log_\". keep_original Logical. TRUE, keeps original transformed variables. FALSE, replaces original variables. Default TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"data frame log-transformed variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_log_transform_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-transform Variables in a Data Frame — margot_log_transform_vars","text":"","code":"df <- data.frame(   hours_work = c(0, 1, 5, NA),   hours_sleep = c(6, 7, 8, 9),   income = c(1000, 2000, 3000, 4000) ) transformed_df <- log_transform_vars(df,                                      vars = c(starts_with(\"hours_\"), \"income\"),                                      exceptions = \"hours_work\") #> Error in log_transform_vars(df, vars = c(starts_with(\"hours_\"), \"income\"),     exceptions = \"hours_work\"): could not find function \"log_transform_vars\""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"function creates summary table output various causal models, including `lmtp::lmtp_contrast()`, `grf::causal_forest()`, `grf::multi_arm_causal_forest()`. calculates E-values estimates assess potential impact unmeasured confounding, appending values summary table.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"margot_model_evalue(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\",   delta = 1,   sd = 1,   subset = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"model_output output supported causal model. Supported types include: Output `lmtp::lmtp_contrast()` Output `grf::causal_forest()` Output `grf::multi_arm_causal_forest()` data frame columns 'estimate' 'std.err' scale Character string specifying scale estimate used summary table E-value calculation. Valid options \"RD\" (risk difference) \"RR\" (risk ratio). Default \"RD\". parameter ignored causal forest models, always use \"RD\". new_name Character string name row(s) output summary table, representing treatment contrast(s). multi-arm causal forests, combined contrast information. delta hypothesized increase outcome RD scale calculations. Used `scale` \"RD\". Default value 1. sd standard deviation outcome RD scale calculations. Used `scale` \"RD\". Default value 1. subset optional logical vector subsetting data model `grf` model. Default `NULL`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"data frame original estimates E-values. table includes columns   estimate (either RD RR), confidence interval, E-Value, E-Value lower bound.   multi-arm causal forests, multiple rows returned, one contrast.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_evalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Model Summary and E-Value Calculation for Various Causal Models — margot_model_evalue","text":"","code":"if (FALSE) { # \\dontrun{ # For lmtp_contrast output summary_evalues <- margot_model_evalue(   model_output = lmtp_contrast_output,   scale = \"RD\",   new_name = \"Treatment Effect\" )  # For causal_forest output cf_summary <- margot_model_evalue(   model_output = causal_forest_output,   new_name = \"Causal Forest Effect\" )  # For multi_arm_causal_forest output macf_summary <- margot_model_evalue(   model_output = multi_arm_cf_output,   new_name = \"Multi-Arm Effect\" )  # For direct input of estimate and standard error direct_summary <- margot_model_evalue(   model_output = data.frame(estimate = 0.5, std.err = 0.1),   new_name = \"Direct Effect\" ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"function takes output `lmtp::lmtp_contrast()` causal forest model creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR) LMTP models. causal forest models, scale always \"RD\". resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"margot_model_tab(   model_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"model_output output object `lmtp::lmtp_contrast()` causal forest model. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". parameter ignored causal forest models. new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_model_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP or Causal Forest Output into a Data Frame — margot_model_tab","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_model_tab(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) print(tab_contrast_hours_charity_z_null) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"function wrapper grf::multi_arm_causal_forest runs multiple GRF multi-arm causal forest models specified outcome variables. calculates average treatment effects, creates custom evaluation tables, includes additional features tau.hat estimates, policy trees, variable importance rankings, Qini curves. also prepares data policy tree visualization, using specified proportion data training.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"","code":"margot_multi_arm_causal_forest(   data,   outcome_vars,   covariates,   W_multi,   weights,   exposure_name,   grf_defaults = list(),   save_data = FALSE,   top_n_vars = 10,   save_models = FALSE,   compute_qini = TRUE,   train_proportion = 0.8 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W_multi factor vector multi-arm treatment assignments. weights vector weights observations. exposure_name character string specifying name exposure variable. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. top_n_vars Integer specifying number top variables use additional computations. Default 10. save_models Logical indicating whether save full GRF model objects. Default FALSE. compute_qini Logical indicating whether compute Qini curves model. Default TRUE. train_proportion Numeric value 0 1 indicating proportion non-missing data use training policy trees. Default 0.8.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"list containing: results list model results, one outcome variable. model result includes: ateAverage treatment effect custom_tableCustom evaluation table tau_hatIndividual treatment effect estimates top_varsTop variables importance variable_importanceData frame variable importance rankings dr_scoresDouble robust scores policy_tree_depth_2Policy tree depth 2, trained train_proportion non-missing data split_variablesNames variables used splits policy_tree_depth_2 plot_dataData prepared policy tree visualization, using remaining proportion non-missing data qini_dataData frame containing Qini curve data plotting (compute_qini TRUE)  combined_tables list data frames combining custom evaluation tables grouped comparison levels. outcome_vars character vector outcome variable names modeled. not_missing vector indices complete cases. exposure_name name exposure variable. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE). full_models list full GRF model objects (save_models TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"Setting save_models = TRUE typically results large objects (often several GB).       Ensure sufficient memory available using option.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_multi_arm_causal_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Multiple Generalized Random Forest (GRF) Multi-Arm Causal Forest Models with Enhanced Features — margot_multi_arm_causal_forest","text":"","code":"if (FALSE) { # \\dontrun{ result_multi_arm <- margot_multi_arm_causal_forest(   data = df_grf,   outcome_vars = outcomes,   covariates = X,   W_multi = W_multi,   weights = weights,   exposure_name = \"treatment\",   grf_defaults = list(num.trees = 2000),   top_n_vars = 15,   train_proportion = 0.8,   save_models = TRUE ) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"function performs omnibus heterogeneity test specified models outputted margot::margot_run_models_grf() provides interpretations result.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"","code":"margot_omnibus_hetero_test(   model_results,   outcome_vars = NULL,   alpha = 0.05,   detail_level = \"standard\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"model_results list model results margot::margot_run_models_grf(). outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. alpha Significance level hypothesis tests. Default 0.05. detail_level Character string specifying level detail output. Options \"basic\", \"standard\" (default), \"detailed\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_omnibus_hetero_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omnibus Heterogeneity Test for GRF Models — margot_omnibus_hetero_test","text":"list containing summary table interpretations.        summary table includes mean differential predictions standard errors.        Interpretations provide detailed analysis test calibration results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"function renders graphical representation causal effect estimates, organised effect size either risk difference (RD) risk ratio (RR) scale. categorises estimates \"positive\", \"negative\", \"zero_crossing\" based confidence intervals. function features advanced customisability graphical parameters, including error bar width application custom ggplot2 themes. Notably, avoids direct manipulation input data implements advanced labelling strategy x-axis prevent incoherent negative values RR.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"","code":"margot_plot(   .data,   type = c(\"RD\", \"RR\"),   order = c(\"default\", \"alphabetical\"),   title,   subtitle,   estimate_scale = 1,   base_size = 11,   text_size = 2.75,   point_size = 0.5,   title_size = 10,   subtitle_size = 9,   legend_text_size = 6,   legend_title_size = 6,   x_offset = ifelse(type == \"RR\", 0, -1.75),   x_lim_lo = ifelse(type == \"RR\", 0.1, -1.75),   x_lim_hi = ifelse(type == \"RR\", 2.5, 1),   linewidth = 0.5,   plot_theme = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":".data data frame causal effect estimates, ideally output `group_tab` function similar. data include confidence intervals effect estimate values. type Character string indicating scale effect estimates: \"RD\" risk difference \"RR\" risk ratio, \"RD\" default. order Character string indicating ordering output: \"default\" default descending, \"alphabetical\" alphabetical, \"custom\" custom order provided .data. title Main title plot. subtitle Subtitle plot. estimate_scale Numeric multiplier adjust horizontal offset estimate labels, aiding plot clarity. Default 1. base_size Base font size plot, applied globally unless overridden. Default 11. text_size Font size estimate labels. Default 2.75. point_size Size points representing estimates. Default 0.5. title_size Font size plot title. Default 10. subtitle_size Font size plot subtitle. Default 9. legend_text_size Font size legend text. Default 6. legend_title_size Font size legend titles. Default 6. x_offset Horizontal adjustment estimate labels, varied based `type`. Default adjustments 0 \"RR\" -1.75 \"RD\". x_lim_lo Lower limit x-axis, automatically adjusted based `type`. x_lim_hi Upper limit x-axis, automatically adjusted based `type`. linewidth Width error bars plot. Default 0.5. plot_theme ggplot2 theme object customising plot appearance. Inherits `base_size` `base_size` parameter maintain consistency. Uses `theme_classic()` default allows customisation. custom_order Optional vector specifying custom ordering 'order' set 'custom'.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Causal Effect Estimates with Enhanced Flexibility — margot_plot","text":"ggplot object displaying causal effect estimates categorisation error bars. plot tailored modifications direct usage.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"margot_plot_grf_rate(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_grf_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_grf_rate","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","text":"function creates histogram colored regions based quantile breaks custom breaks. uses `create_ordered_variable` function categorize data plots histogram different colors category.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","text":"","code":"margot_plot_hist(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_hist","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Warning: `coloured_histogram_quantiles()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_plot_hist()` instead. #> Error in ggplot(df, aes(x = !!rlang::sym(col_name))): could not find function \"ggplot\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): unused argument (custom_breaks = c(-2, -1, 0, 1, 2))"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"function creates histogram colored regions based quantile breaks custom breaks. uses `create_ordered_variable` function categorize data plots histogram different colors category.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"margot_plot_histogram_intervals(   df,   col_name,   n_divisions = NULL,   custom_breaks = NULL,   cutpoint_inclusive = \"upper\",   ties.method = NULL,   colour_palette = NULL,   hist_colour = \"black\",   line_type = \"solid\",   line_width = 0.75,   title = NULL,   subtitle = NULL,   x_lab = NULL,   y_lab = \"Count\",   theme_choice = theme_classic(),   text_size = 12,   axis_text_angle = 45,   add_density = FALSE,   add_rug = FALSE,   facet_var = NULL,   x_scale_transform = NULL,   y_scale_transform = NULL,   additional_layers = NULL,   binwidth = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"df data frame containing variable plotted. col_name name column data frame plotted. n_divisions number divisions quantile breaks. Ignored custom_breaks provided. custom_breaks numeric vector custom break points. cutpoint_inclusive Character. Either \"lower\" \"upper\", specifying whether cutpoint included lower upper interval. ties.method character string specifying ties handled. See ?quantile details. colour_palette vector colors use intervals. NULL, uses Okabe-Ito palette. hist_colour color histogram borders. line_type type line use histogram borders. line_width width lines histogram borders. title title plot. NULL, default title used. subtitle subtitle plot. NULL, default subtitle used. x_lab label x-axis. NULL, column name used. y_lab label y-axis. Default \"Count\". theme_choice ggplot2 theme use. Default theme_classic(). text_size base text size plot. axis_text_angle angle x-axis text. add_density Logical. TRUE, adds density curve plot. add_rug Logical. TRUE, adds rug plot x-axis. facet_var Optional. name variable use faceting. x_scale_transform Optional. transformation x-axis (e.g., \"log10\"). y_scale_transform Optional. transformation y-axis (e.g., \"log10\"). additional_layers list additional ggplot2 layers add plot. binwidth width bins histogram. NULL, calculated automatically.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"ggplot2 object representing colored histogram.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_histogram_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Colored Histogram with Quantile or Custom Breaks — margot_plot_histogram_intervals","text":"","code":"df <- data.frame(value = rnorm(1000)) coloured_histogram_quantiles(df, \"value\", n_divisions = 4) #> Warning: `coloured_histogram_quantiles()` was deprecated in margot 1.0.0. #> ℹ Please use `margot_plot_hist()` instead. #> Error in ggplot(df, aes(x = !!rlang::sym(col_name))): could not find function \"ggplot\"  # With custom breaks coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2, -1, 0, 1, 2)) #> Error in coloured_histogram_quantiles(df, \"value\", custom_breaks = c(-2,     -1, 0, 1, 2)): unused argument (custom_breaks = c(-2, -1, 0, 1, 2))"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Policy Tree Results — margot_plot_policy_tree","title":"Plot Policy Tree Results — margot_plot_policy_tree","text":"function creates visualization policy tree results causal forest multi-arm causal forest model. generates two plots showing relationships top three split variables, points colored predicted optimal treatment.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Policy Tree Results — margot_plot_policy_tree","text":"","code":"margot_plot_policy_tree(   mc_test,   model_name,   color_scale = ggokabeito::scale_colour_okabe_ito(),   point_alpha = 0.25,   theme_function = theme_classic,   title_size = 14,   subtitle_size = 12,   axis_title_size = 10,   legend_title_size = 10,   jitter_width = 0.3,   jitter_height = 0.3 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Policy Tree Results — margot_plot_policy_tree","text":"mc_test list containing results multi-arm causal forest model. model_name string specifying model's results plot. color_scale ggplot2 color scale. Default ggokabeito::scale_colour_okabe_ito(). point_alpha Numeric value 0 1 point transparency. Default 0.6. theme_function ggplot2 theme function. Default theme_classic. title_size Numeric value size plot title. Default 14. subtitle_size Numeric value size plot subtitle. Default 12. axis_title_size Numeric value size axis titles. Default 10. legend_title_size Numeric value size legend title. Default 10. jitter_width Numeric value amount horizontal jitter. Default 0.3. jitter_height Numeric value amount vertical jitter. Default 0.3.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Policy Tree Results — margot_plot_policy_tree","text":"ggplot object containing two side--side plots policy tree results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_policy_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Policy Tree Results — margot_plot_policy_tree","text":"","code":"if (FALSE) { # \\dontrun{ plot <- plot_policy_tree_results(mc_test, \"model_t2_belong_z\") print(plot) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"function creates ggplot object displaying Qini curves based results margot_multi_arm_causal_forest() model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"margot_plot_qini(mc_result, outcome_var)"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"mc_result list containing results margot_multi_arm_causal_forest(). outcome_var character string specifying name outcome variable plot. match one model names mc_result$results.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"ggplot object representing Qini curves specified outcome variable.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_qini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Qini Curves from margot_multi_arm_causal_forest Results — margot_plot_qini","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming mc.test is the result of margot_multi_arm_causal_forest() plot_qini_curves(mc.test, \"model_t2_belong_z\") } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — margot_plot_rate","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"margot_plot_rate(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_plot_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — margot_plot_rate","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) } # }"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Binary Variables in a Data Frame — margot_process_binary_vars","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"function identifies binary variables (factors numeric), converts 0/1 format, renames . allows exceptions specified.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"margot_process_binary_vars(data, exceptions = character(0), suffix = \"_binary\")"},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data data frame process. exceptions character vector column names exclude processing. suffix string append renamed binary variables. Default \"_binary\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"data frame processed binary variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_process_binary_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Binary Variables in a Data Frame — margot_process_binary_vars","text":"","code":"df <- data.frame(   a = factor(c(\"yes\", \"no\", \"yes\")),   b = c(1, 0, 1),   c = c(\"apple\", \"banana\", \"apple\"),   d = factor(c(\"true\", \"false\", \"true\")) ) processed_df <- process_binary_vars(df, exceptions = \"c\") #> Error in process_binary_vars(df, exceptions = \"c\"): could not find function \"process_binary_vars\""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"function runs multiple GRF models specified outcome variables, calculates average treatment effects, tests calibration, creates custom evaluation tables, includes additional features tau.hat estimates, RATE calculations, policy trees, variable importance rankings, best linear projections, depth-2 policy trees.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"","code":"margot_run_models_grf(   data,   outcome_vars,   covariates,   W,   weights,   grf_defaults = list(),   save_data = FALSE,   compute_rate = TRUE,   top_n_vars = 10 )"},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"data data frame containing necessary variables. outcome_vars character vector outcome variable names modeled. covariates matrix covariates used GRF models. W matrix treatment assignments. weights vector weights observations. grf_defaults list default parameters GRF models. save_data Logical indicating whether save data, covariates, weights. Default FALSE. compute_rate Logical indicating whether compute RATE model. Default TRUE. top_n_vars Integer specifying number top variables use additional computations. Default 15.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_run_models_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple Generalized Random Forest (GRF) Models with Enhanced Features — margot_run_models_grf","text":"list containing: results list model results, one outcome variable. combined_table data frame combining custom evaluation tables. outcome_vars character vector outcome variable names modeled. tau_hats list tau.hat estimates model. tau_hat_plots list ggplot objects tau.hat histograms. rate_results list RATE results (compute_rate TRUE). dr_scores list double robust scores model. policy_trees list policy trees depth 1 model. not_missing vector indices complete cases. variable_importance_rankings list top n variables importance model, n specified top_n_vars. best_linear_projections list best linear projection results using top n variables model, n specified top_n_vars. policy_trees_depth_2 list policy trees depth 2 using top n variables model, n specified top_n_vars. data input data (save_data TRUE). covariates input covariates (save_data TRUE). weights input weights (save_data TRUE).","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function calculates new evaluation tables specified outcome variables using subset condition, combines single data frame. uses models generated `margot_run_models_grf` create tables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"margot_subset_table_grf(   model_results,   outcome_vars = NULL,   subset_condition = NULL,   scale = \"RD\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"model_results list model results `margot_run_models_grf`. outcome_vars Optional. character vector outcome variable names. NULL, function attempt use outcome_vars model_results input. subset_condition logical vector indicating subset data use. Default NULL. scale character string indicating scale use `margot_model_evalue`. Default \"RD\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"data frame combining custom evaluation tables specified subset condition.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"function uses `margot_model_evalue` calculate evaluation metrics model subset data specified `subset_condition`. outcome_vars provided, attempt use outcome_vars model_results input (assuming output margot_run_models_grf). neither available, use models input.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"Ensure `model_results` list contains results specified `outcome_vars`, otherwise outcomes may omitted final table.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/margot/reference/margot_subset_table_grf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combined Tables for Subset Condition Using GRF Models — margot_subset_table_grf","text":"","code":"if (FALSE) { # Assuming result_psychological_well_being is your results object from margot_run_models_grf subset_condition <- X[, \"t0_self_esteem_z\"] < 1 combined_table_subset <- margot_subset_table_grf(   model_results = result_psychological_well_being,   outcome_vars = NULL,   subset_condition = subset_condition,   scale = \"RD\" ) print(combined_table_subset) }"},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"function takes output `lmtp::lmtp_contrast()` creates data frame summarising estimates. allows scaling estimates either risk differences (RD) risk ratios (RR). resulting data frame includes estimate, standard error, 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"margot_tab_lmtp(   lmtp_output,   scale = c(\"RD\", \"RR\"),   new_name = \"character_string\" )"},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"lmtp_output output object `lmtp::lmtp_contrast()`. scale character string specifying scale estimate. Valid options \"RD\" risk difference \"RR\" risk ratio. Default \"RD\". new_name character string name row output data frame, representing treatment contrast summarised.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"data frame four columns: estimate specified scale, standard error, lower upper bounds 95","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_tab_lmtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise LMTP Output into a Data Frame — margot_tab_lmtp","text":"","code":"# Assuming `contrast_hours_charity_z_null` is output from `lmtp::lmtp_contrast()` tab_contrast_hours_charity_z_null <- margot_tab_lmtp(   contrast_hours_charity_z_null,   scale = \"RD\",   new_name = \"relig service: hours volunteer\" ) #> Error in eval(expr, envir, enclos): object 'contrast_hours_charity_z_null' not found"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform longitudinal data to wide format with labels — margot_wide","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"function transforms longitudinal data long format wide format, ensuring baseline measurements correctly labelled included. handles multiple observations per subject across different waves, allows specification baseline variables, exposure variables, outcome variables. ensures specified variables included resulting wide-format data frame, columns prefixed time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"margot_wide(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform longitudinal data to wide format with labels — margot_wide","text":".data data frame containing longitudinal data long format. baseline_vars character vector baseline variable names included t0. exposure_var character vector exposure variable names tracked across time. outcome_vars character vector outcome variable names tracked across time.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"wide-format data frame subject's observations across time points         represented single row, variables prefixed respective         time measurement.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform longitudinal data to wide format with labels — margot_wide","text":"","code":"# Defining variables as per the function's documentation baseline_vars <- c(   \"male\", \"age\",  \"eth_cat\",   \"partner\", \"agreeableness\",   \"conscientiousness\", \"extraversion\", \"honesty_humility\",   \"openness\", \"neuroticism\", \"sample_weights\" )  exposure_var <- c(\"forgiveness\")  outcome_vars <- c(   \"alcohol_frequency\", \"alcohol_intensity\",   \"hlth_bmi\", \"hours_exercise\" )  # df_nz is a synthetic dataset included in this package # wide_data <- margot_wide(df_nz, baseline_vars, exposure_var, outcome_vars) # print(wide_data)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"function transforms longitudinal data wide format performs imputation baseline variables. leverages `mice` package imputation, ensuring missing baseline data appropriately handled. function arranges data participant id time, filters based time conditions, reshapes data wide format. Imputed data merged back, maintaining structure suitable analysis.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"margot_wide_impute_baseline(.data, baseline_vars, exposure_var, outcome_vars)"},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":".data dataframe containing longitudinal data. baseline_vars character vector baseline variable names include impute necessary. exposure_var character vector specifying names exposure variables. outcome_vars character vector specifying names outcome variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"data frame wide format imputed baseline variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/margot_wide_impute_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to wide data with labels and impute baseline missing values — margot_wide_impute_baseline","text":"","code":"# df_nz is a synthetic dataset included in this package data(df_nz, package = \"margot\")  df_nz <- data.frame(df_nz) wide_data_imputed <- margot_wide_impute_baseline(df_nz,   baseline_vars = c(\"age\", \"male\", \"religion_believe_god\"),   exposure_var = (\"forgiveness\"),   outcome_vars = (\"kessler_latent_anxiety\")   ) #>  #>  iter imp variable #>   1   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   2   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   3   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   4   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god #>   5   1  t0_forgiveness  t0_kessler_latent_anxiety  t0_religion_believe_god"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":null,"dir":"Reference","previous_headings":"","what":"General Matching Function for Multiple Imputation Data — match_mi_general","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"function facilitates propensity score matching datasets, including generated multiple imputation, assess covariate balance across treatment groups. leverages WeightIt MatchThem packages calculate propensity scores apply matching techniques. Users referred packages detailed methodological specifications additional functionality.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"match_mi_general(   data,   X,   baseline_vars,   estimand,   method,   subgroup = NULL,   focal = NULL,   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"data data frame 'mids' object containing data matching. X string naming treatment exposure variable within `data`. baseline_vars character vector naming covariates include propensity score model. estimand string specifying target estimand ('ATE', 'ATT', 'ATC'). method method estimating propensity scores, per WeightIt package's documentation. subgroup (Optional) string specifying variable subgroup data within-group matching. focal (Optional) Specifies focal treatment group, useful 'ATT' 'ATC' estimands. sample_weights (Optional) string indicating variable `data` representing sample weights. stabilize Logical. Indicates whether stabilize weights, defaulting TRUE.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"list matched datasets subgroup level (`subgroup` used)   single matched dataset. element typically data frame object   reflecting matched data structure, depending matching method applied.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"Detailed methodology additional options can found : - WeightIt package propensity score estimation. - MatchThem package matching within imputed datasets.","code":""},{"path":"https://go-bayes.github.io/margot/reference/match_mi_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Matching Function for Multiple Imputation Data — match_mi_general","text":"","code":"if (FALSE) { # \\dontrun{ # Assume `df` is a data frame with treatment, covariates, and sample weights matched_data <- match_mi_general(data = df,                                  X = \"treatment_var\",                                  baseline_vars = c(\"covariate1\", \"covariate2\"),                                  estimand = \"ATE\",                                  method = \"nearest\",                                  stabilize = TRUE) } # }"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"function creates ggplot visualisation Rank Average Treatment Effect. displays estimate confidence interval, using simple black line light gray shading default.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"plot_rank_average_treatment_effect(   x,   title = \"Targeting Operator Characteristic\",   subtitle = \"(95% confidence interval shown as shaded area)\",   x_lab = \"Treated fraction (q)\",   y_lab = \"Estimate\",   ... )"},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"x object class \"rank_average_treatment_effect\", typically output rank_average_treatment_effect() function. title Character string plot title. Default \"Targeting Operator Characteristic\". subtitle Character string plot subtitle. Default explains confidence interval. x_lab Character string x-axis label. Default \"Treated fraction (q)\". y_lab Character string y-axis label. Default \"Estimate\". ... Additional arguments passed ggplot.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"ggplot object can customised printed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/plot_rank_average_treatment_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rank Average Treatment Effect — plot_rank_average_treatment_effect","text":"","code":"if (FALSE) { # Assuming rate_eval is your rank_average_treatment_effect object p <- plot_rank_average_treatment_effect(rate_eval) print(p)  # Customise colors using ggokabeito p_colored <- p +   ggokabeito::scale_fill_okabe_ito() +   ggokabeito::scale_color_okabe_ito() print(p_colored) }"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numbers with Commas — pretty_number","title":"Format Numbers with Commas — pretty_number","text":"function takes numeric vector formats inserting commas thousands separators, making large numbers easier read.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numbers with Commas — pretty_number","text":"","code":"pretty_number(x)"},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numbers with Commas — pretty_number","text":"x numeric vector want format.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numbers with Commas — pretty_number","text":"character vector number formatted commas thousands separators.","code":""},{"path":"https://go-bayes.github.io/margot/reference/pretty_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numbers with Commas — pretty_number","text":"","code":"numbers <- c(1000, 50000, 1234567) pretty_number(numbers) #> [1] \"1,000\"     \"50,000\"    \"1,234,567\""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Regression with Covariates — regress_with_covariates","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"unitility function performs generalized linear regression specified dataset using outcome variable, exposure variable, set baseline covariates. default, function uses Gaussian family (linear regression), allows specifying families generalized linear models (GLM).","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"regress_with_covariates(   data,   outcome,   exposure,   baseline_vars,   family = gaussian(),   sample_weights = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"data data frame containing variables analysis. outcome character string specifying name outcome variable data frame. exposure character string specifying name main exposure variable data frame. baseline_vars character vector specifying names baseline covariates include model addition exposure variable. family family object character string naming family (default gaussian(), performs linear regression). parameter determines error distribution link function used model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"object class glm representing fitted model, includes coefficients, residuals, model diagnostics. object can analyzed using standard methods GLM objects, summary() model summaries anova() analysis variance.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"function constructs model formula using outcome, exposure, baseline variables. fits generalized linear model using formula. baseline variables filtered exclude outcome exposure variables model fitting. function prints formula used regression analysis verification.","code":""},{"path":"https://go-bayes.github.io/margot/reference/regress_with_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Regression with Covariates — regress_with_covariates","text":"","code":"if (FALSE) { # \\dontrun{ # using `df_nz` is your data frame with \"income\" as the continuous outcome variable, # \"age\" as an exposure variable, and other covariates outcome_var <- \"income\" exposure_var <- \"age\" baseline_vars <- c(\"age\", \"education\", \"partner\") model <- regress_with_covariates(df_nz, outcome_var, exposure_var, baseline_vars, family =  gaussian()) summary(model) } # }"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"Iterates column provided data frame. column numeric attributes, function removes attributes converting column basic numeric vector. particularly useful cleaning data frames operations may add undesired attributes numeric columns, aggregations merges.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"remove_numeric_attributes(df)"},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"df `data.frame` object attributes numeric columns removed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"`data.frame` attributes removed numeric columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/remove_numeric_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Attributes from Numeric Columns in a Data Frame — remove_numeric_attributes","text":"","code":"df <- data.frame(a = I(1:3), b = c(\"x\", \"y\", \"z\"), c = I(rnorm(3))) cleaned_df <- remove_numeric_attributes(df) str(cleaned_df) #> 'data.frame':\t3 obs. of  3 variables: #>  $ a: 'AsIs' int  1 2 3 #>  $ b: chr  \"x\" \"y\" \"z\" #>  $ c: 'AsIs' num  0.147485.... -0.62431.... 1.267542...."},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Simulations for Estimating ATE — run_simulations","title":"Run Simulations for Estimating ATE — run_simulations","text":"function simulates data estimates Average Treatment Effect (ATE) using different methods specified causal model.","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Simulations for Estimating ATE — run_simulations","text":"","code":"run_simulations(   num_simulations,   N,   prob_L1,   A_on_Y,   L_on_A,   L_on_Y,   method = \"ps\" )"},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Simulations for Estimating ATE — run_simulations","text":"num_simulations Integer, number simulations run. N Integer, sample size simulation. prob_L1 Double, probability parameter generating L1. A_on_Y Double, effect size Y. L_on_A Double, effect size L . L_on_Y Double, effect size L Y. method Character, method IPTW DR adjustment (\"ps\" ).","code":""},{"path":"https://go-bayes.github.io/margot/reference/run_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Simulations for Estimating ATE — run_simulations","text":"tibble containing estimated ATEs confidence intervals method.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Rename Columns Based on Criteria — select_and_rename_cols","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"Selects columns base set match specified baseline variables renames outcome variable changing prefix. Useful longitudinal data time-point prefixes need standardised adjusted.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"select_and_rename_cols(   names_base,   baseline_vars,   outcome,   from_prefix = \"t2\",   to_prefix = \"t0\" )"},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"names_base character vector column names select. baseline_vars character vector baseline variables match `names_base`. outcome name outcome variable whose prefix replaced. from_prefix original prefix outcome variable replaced, defaulting \"t2\". prefix include character immediately preceding numeric value underscore, e.g., \"t2_\". to_prefix new prefix replace original prefix outcome variable, defaulting \"t0\". prefix format `from_prefix`, including character immediately preceding numeric value underscore, e.g., \"t0_\".","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"character vector selected column names outcome variable name   modified reflect new prefix.","code":""},{"path":"https://go-bayes.github.io/margot/reference/select_and_rename_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Rename Columns Based on Criteria — select_and_rename_cols","text":"","code":"names_base <- c(\"t0_age\", \"t0_weight\", \"t0_height\", \"t0_outcome\") baseline_vars <- c(\"age\", \"weight\") outcome_var <- \"t2_outcome\"  final_columns <- select_and_rename_cols(names_base, baseline_vars, outcome_var, \"t2\", \"t0\") print(final_columns) #> [1] \"t0_age\"     \"t0_weight\"  \"t0_outcome\""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"Generates simulated data sample population study average treatment effects (ATE), considering presence effect modifier. function simulates differences distribution effect modifiers sample population without altering treatment effect effect-modification. Weights calculated adjust distribution differences effect modifier sample population.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 1e+05,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   beta_az = 0.5,   noise_sd = 0.5,   seed = NULL )"},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"n_sample Integer, size sample. Default 10000. n_population Integer, size population. Default 100000. p_z_sample Numeric, probability effect modifier sample. Default 0.1. p_z_population Numeric, probability effect modifier population. Default 0.5. beta_a Numeric, treatment effect. Default 1. beta_z Numeric, coefficient effect modifier. Default 2.5. beta_az Numeric, interaction term representing effect modification treatment effect modifier. Default 0.5. noise_sd Numeric, standard deviation noise outcome variable. Default 0.5. seed Optional. integer value setting seed ensure reproducibility. Default `NULL`, set seed.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"list containing two data frames: `sample_data` `population_data`, comprising outcome variable `y`, treatment variable ``, effect modifier `z`. `sample_data` data frame also includes calculated weights observation.","code":""},{"path":"https://go-bayes.github.io/margot/reference/simulate_ate_data_with_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data for Average Treatment Effect (ATE) with Sample Weights — simulate_ate_data_with_weights","text":"","code":"data <- simulate_ate_data_with_weights(   n_sample = 10000,   n_population = 100000,   p_z_sample = 0.1,   p_z_population = 0.5,   beta_a = 1,   beta_z = 2.5,   noise_sd = 0.5 )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"function processes simulation results tabulate marginal effects along E-values, providing summary suited reporting. supports risk difference (RD) risk ratio (RR) types estimates handles continuous categorical treatment variables.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"tab_engine_marginal(   x,   new_name,   delta = 1,   sd = 1,   type = c(\"RD\", \"RR\"),   continuous_X = FALSE )"},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"x data frame matrix containing simulation results processed. new_name new name assign output row, typically describing variable model. delta assumed smallest worthwhile effect, used E-value calculations. sd standard deviation effect estimate, used E-value calculations. type Character vector specifying scale effect size, either \"RD\" \"RR\". parameter determines effects calculated presented. continuous_X Logical indicating whether treatment variable X continuous. TRUE, adjusts row names based type parameter.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"data frame specified new_name row name. data frame includes         effect estimates, confidence intervals, E-values, relevant statistics formatted         easy reporting.","code":""},{"path":"https://go-bayes.github.io/margot/reference/tab_engine_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Marginal Effects with E-Values — tab_engine_marginal","text":"","code":"# Assuming you have results from a simulation or model in `results_df` tabulated_results <- tab_engine_marginal(x = results_df,                                          new_name = \"Treatment Effect\",                                          delta = 1,                                          sd = 0.2,                                          type = \"RD\")  # Corrected 'scale' to 'type' #> Loading required package: EValue #> Error in eval(expr, envir, enclos): object 'results_df' not found"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Table — transition_table","title":"Transition Table — transition_table","text":"Generates transition table describes movements stability states one observation next. formats output markdown table, highlighting number entities remaining state (diagonal) transitioning different states (-diagonal).","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Table — transition_table","text":"","code":"transition_table(data, state_names = NULL)"},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Table — transition_table","text":"data data frame columns `` `` indicating initial subsequent states entities, respectively, `Freq` column indicating frequency transitions. state_names Optional; vector state names replace default state labels. NULL, states labeled \"State 1\", \"State 2\", etc., based unique values `` `` columns.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Table — transition_table","text":"list two elements: `explanation`, character string explaining table, `table`, markdown-formatted table transitions. diagonal entries (bold) represent count entities remained initial state, -diagonal entries show count transitions different states.","code":""},{"path":"https://go-bayes.github.io/margot/reference/transition_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Table — transition_table","text":"","code":"if (FALSE) { # \\dontrun{ df <- read.table(header=TRUE, text=\" id wave year_measured religion_believe_god 3 0 1 0 3 1 1 1 4 0 1 0 4 1 1 1 5 0 1 1 5 1 1 0\")  transition_matrix <- create_transition_matrix(df, \"religion_believe_god\", \"id\") # Assuming `transition_matrix` is a table with the transition counts between states # First, convert `transition_matrix` to a dataframe suitable for `transition_table` df_transition <- as.data.frame.matrix(transition_matrix) df_transition$from <- rownames(df_transition) long_df_transition <- tidyr::pivot_longer(df_transition, cols = -from, names_to = \"to\", values_to = \"Freq\")  transition_table_data <- transition_table(long_df_transition) cat(transition_table_data$explanation) cat(\"\\n\") print(transition_table_data$table) } # }"},{"path":[]},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"deprecations-0-2-0-2","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"# margot 0.2.0.2","text":"coloured_histogram() coloured_histogram_quantile() deprecated. Now use new margot_plot_hist() instead. create_ordered_variable_custom deprecated. Now use created_ordered_variablefunction custom_breaks = c(..) obtain custom breaks.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"new-0-2-0-2","dir":"Changelog","previous_headings":"","what":"New","title":"# margot 0.2.0.2","text":"margot_plot_hist() plotting distributions exposure variable","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0201","dir":"Changelog","previous_headings":"","what":"margot 0.2.0.1","title":"margot 0.2.0.1","text":"new table plot functions grf outputs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-020","dir":"Changelog","previous_headings":"","what":"margot 0.2.0","title":"margot 0.2.0","text":"improved subgroup comparison function deprecated compare_group_means function, compare_groupallowing contrasts causal difference relative risk scales. new wrapper functions functions grf plus visualising results.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0121","dir":"Changelog","previous_headings":"","what":"margot 0.1.2.1","title":"margot 0.1.2.1","text":"group_tab now works hood margot_plot, need specify explicitly group_tab now allows custom order plot, just decreasing effect size numerous small enhancements older parametric model options new logo","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-012","dir":"Changelog","previous_headings":"","what":"margot 0.1.2","title":"margot 0.1.2","text":"minor fixes","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-011","dir":"Changelog","previous_headings":"","what":"margot 0.1.1","title":"margot 0.1.1","text":"functions interpret outputs lmtp models functions create tables functions create graphs","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-0101","dir":"Changelog","previous_headings":"","what":"margot 0.1.0.1","title":"margot 0.1.0.1","text":"Minor bug fixes performance improvements.","code":""},{"path":"https://go-bayes.github.io/margot/news/index.html","id":"margot-010","dir":"Changelog","previous_headings":"","what":"margot 0.1.0","title":"margot 0.1.0","text":"Initial release: includes data exploration, model preparation, utility functions.","code":""}]
