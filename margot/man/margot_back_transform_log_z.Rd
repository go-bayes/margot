% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot_back_transform_log_z.R
\name{margot_back_transform_log_z}
\alias{margot_back_transform_log_z}
\title{Create Z-score to Original Scale Mapping for Log-Transformed Data}
\usage{
margot_back_transform_log_z(
  log_mean,
  log_sd,
  z_scores = c(-2, -1, -0.5, 0, 0.5, 1, 2),
  label = "data_scale"
)
}
\arguments{
\item{log_mean}{The mean of the log-transformed dataset from which the z-scores were calculated.}

\item{log_sd}{The standard deviation of the log-transformed dataset from which the z-scores were calculated.}

\item{z_scores}{Optional vector of z-scores to transform. Defaults to c(-2, -1, -0.5, 0, 0.5, 1, 2)
representing common points in a normal distribution.}

\item{label}{Optional string to label the data scale column. Defaults to "data_scale".}
}
\value{
A data frame with two columns: z_score and the original data scale values.
  The name of the second column will be the value of the `label` parameter.
}
\description{
This function creates a data frame that maps standard z-scores to their
corresponding values on the original data scale for log-transformed data.
It uses the `back_transform_log_z` function to perform the back-transformation
and presents the results in a tidy data frame.
}
\examples{
# Get mean and sd from original log-transformed income data
log_mean_inc <- mean(original_df$t0_log_household_inc, na.rm = TRUE)
log_sd_inc <- sd(original_df$t0_log_household_inc, na.rm = TRUE)

# Create mapping table with default z-scores
income_mapping <- margot_back_transform_log_z(
  log_mean = log_mean_inc,
  log_sd = log_sd_inc,
  label = "household_income"
)
print(income_mapping)

# Create mapping with custom z-scores
custom_mapping <- margot_back_transform_log_z(
  log_mean = log_mean_inc,
  log_sd = log_sd_inc,
  z_scores = c(-1, 0, 1),
  label = "household_income"
)
print(custom_mapping)

}
